// Generated by odin.dust (version 0.1.5) - do not edit
template <typename T>
T odin_sum1(const T * x, size_t from, size_t to);
template <typename real_t>
real_t odin_sum2(const real_t * x, int from_i, int to_i, int from_j, int to_j, int dim_x_1);
template <typename real_t>
real_t odin_sum3(const real_t * x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int dim_x_1, int dim_x_12);
template <typename real_t>
real_t odin_sum4(const real_t * x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int from_l, int to_l, int dim_x_1, int dim_x_12, int dim_x_123);
#include <vector>
// [[odin.dust::register]]
template <typename T, typename real_t>
real_t vaccination_schedule(size_t i, real_t daily_doses, real_t dt,
                            const T& candidates, const T& candidates_pos) {
  // Early exit in the case of no vaccination
  if (daily_doses == 0) {
    return 0;
  }
  // Early exit for our young classes:
  if (i <= 3) {
    return 0;
  }

  // 'i' comes in as base1 so we do the subtraction here so that
  // there's only one place to think about it (except for directly
  // above)
  i--;

  // Fixed priority groups for now, zero-offset indexed
  //
  // The other nice way of modelling this would be an integer matrix,
  // accepted as user-input, then loop over each row and weight.
  //
  // This way is not flexible at all, but we could switch between
  // priority groups with an enum quite efficiently.
  static const std::vector<std::vector<size_t>> priority = {
    {17, 18}, {16}, {15}, {14}, {13}, {12}, {11}, {10}, {9, 8, 7, 6, 5, 4, 3}};

  for (auto &p : priority) {
    double n = 0;
    bool exit = false;
    for (auto j : p) {
      n += candidates_pos[j];
      exit = exit || j == i;
    }
    if (exit) {
      real_t n_to_vaccinate;
      if (n < daily_doses) {
        // We won't use it all
        n_to_vaccinate = candidates_pos[i];
        // Using Inf is slightly too fast, but is in some ways better
        // than using the same value as below (with the -log) which
        // results in very soft shoulders as we hit the end of the
        // group (i.e., this branch). This is due to the way that
        // n_to_vaccinate cancels out of that equation. However, with
        // Inf we get a bit of acceleration in the final mop up stage.
        //
        // However, this will cause huge problems is we have
        // non-willing people too as they will get vaccinated!
      } else {
        // We will use it all, so share within our group
        n_to_vaccinate = daily_doses / n * candidates_pos[i];
      }
      return - log(1 - n_to_vaccinate * dt / candidates[i]) / dt;
    } else if (n >= daily_doses) {
      // All vaccine has been used up by earlier groups
      return 0;
    } else {
      // Continue through loop
      daily_doses -= n;
    }
  }

  // Catch any unhandled early exit; this should never trigger though,
  // but the compiler will need it.
  return 0;
}
// [[dust::class(carehomes)]]
// [[dust::param(beta_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(dt, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(G_D_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(hosp_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(ICU_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_A, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_C, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_E, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_G_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_H_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_H_R, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_pre, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_W_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_W_R, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_PCR_pos, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_PCR_pre, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_sero_pos, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_W_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_W_R, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(m, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_age_groups, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_groups, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_C, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_G_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_H_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_H_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_ICU_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_ICU_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_sero_pos, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_star_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_W_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(psi_G_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(psi_H, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(psi_H_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(psi_ICU, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(psi_ICU_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(psi_star, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(psi_W_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_hosp_if_sympt, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_sympt, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_susceptibility, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_seed_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_transmission, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vaccine_population_reluctant, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vaccine_progression_rate_base, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(waning_rate, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_A, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_C, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_E, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_G_D, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_H_D, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_H_R, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_D, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_pre, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_W_D, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_W_R, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_PCR_pos, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_PCR_pre, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_sero_pos, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_sero_pre_1, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_sero_pre_2, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_U, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_W_D, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_W_R, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(model_pcr_and_serology_user, has_default = TRUE, default_value = 1L, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_sero_pre_1, has_default = TRUE, default_value = 0.5, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vaccine_daily_doses, has_default = TRUE, default_value = 0L, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
class carehomes {
public:
  typedef double real_t;
  struct init_t {
    std::vector<real_t> aux_E;
    std::vector<real_t> aux_G_D;
    std::vector<real_t> aux_H_D_conf;
    std::vector<real_t> aux_H_D_unconf;
    std::vector<real_t> aux_H_R_conf;
    std::vector<real_t> aux_H_R_unconf;
    std::vector<real_t> aux_I_A;
    std::vector<real_t> aux_I_C;
    std::vector<real_t> aux_ICU_D_conf;
    std::vector<real_t> aux_ICU_D_unconf;
    std::vector<real_t> aux_ICU_pre_conf;
    std::vector<real_t> aux_ICU_pre_unconf;
    std::vector<real_t> aux_ICU_W_D_conf;
    std::vector<real_t> aux_ICU_W_D_unconf;
    std::vector<real_t> aux_ICU_W_R_conf;
    std::vector<real_t> aux_ICU_W_R_unconf;
    std::vector<real_t> aux_W_D_conf;
    std::vector<real_t> aux_W_D_unconf;
    std::vector<real_t> aux_W_R_conf;
    std::vector<real_t> aux_W_R_unconf;
    std::vector<real_t> beta_step;
    int dim_aux_E;
    int dim_aux_E_1;
    int dim_aux_E_12;
    int dim_aux_E_123;
    int dim_aux_E_2;
    int dim_aux_E_3;
    int dim_aux_E_4;
    int dim_aux_G_D;
    int dim_aux_G_D_1;
    int dim_aux_G_D_12;
    int dim_aux_G_D_123;
    int dim_aux_G_D_2;
    int dim_aux_G_D_3;
    int dim_aux_G_D_4;
    int dim_aux_H_D_conf;
    int dim_aux_H_D_conf_1;
    int dim_aux_H_D_conf_12;
    int dim_aux_H_D_conf_123;
    int dim_aux_H_D_conf_2;
    int dim_aux_H_D_conf_3;
    int dim_aux_H_D_conf_4;
    int dim_aux_H_D_unconf;
    int dim_aux_H_D_unconf_1;
    int dim_aux_H_D_unconf_12;
    int dim_aux_H_D_unconf_123;
    int dim_aux_H_D_unconf_2;
    int dim_aux_H_D_unconf_3;
    int dim_aux_H_D_unconf_4;
    int dim_aux_H_R_conf;
    int dim_aux_H_R_conf_1;
    int dim_aux_H_R_conf_12;
    int dim_aux_H_R_conf_123;
    int dim_aux_H_R_conf_2;
    int dim_aux_H_R_conf_3;
    int dim_aux_H_R_conf_4;
    int dim_aux_H_R_unconf;
    int dim_aux_H_R_unconf_1;
    int dim_aux_H_R_unconf_12;
    int dim_aux_H_R_unconf_123;
    int dim_aux_H_R_unconf_2;
    int dim_aux_H_R_unconf_3;
    int dim_aux_H_R_unconf_4;
    int dim_aux_I_A;
    int dim_aux_I_A_1;
    int dim_aux_I_A_12;
    int dim_aux_I_A_123;
    int dim_aux_I_A_2;
    int dim_aux_I_A_3;
    int dim_aux_I_A_4;
    int dim_aux_I_C;
    int dim_aux_I_C_1;
    int dim_aux_I_C_12;
    int dim_aux_I_C_123;
    int dim_aux_I_C_2;
    int dim_aux_I_C_3;
    int dim_aux_I_C_4;
    int dim_aux_ICU_D_conf;
    int dim_aux_ICU_D_conf_1;
    int dim_aux_ICU_D_conf_12;
    int dim_aux_ICU_D_conf_123;
    int dim_aux_ICU_D_conf_2;
    int dim_aux_ICU_D_conf_3;
    int dim_aux_ICU_D_conf_4;
    int dim_aux_ICU_D_unconf;
    int dim_aux_ICU_D_unconf_1;
    int dim_aux_ICU_D_unconf_12;
    int dim_aux_ICU_D_unconf_123;
    int dim_aux_ICU_D_unconf_2;
    int dim_aux_ICU_D_unconf_3;
    int dim_aux_ICU_D_unconf_4;
    int dim_aux_ICU_pre_conf;
    int dim_aux_ICU_pre_conf_1;
    int dim_aux_ICU_pre_conf_12;
    int dim_aux_ICU_pre_conf_123;
    int dim_aux_ICU_pre_conf_2;
    int dim_aux_ICU_pre_conf_3;
    int dim_aux_ICU_pre_conf_4;
    int dim_aux_ICU_pre_unconf;
    int dim_aux_ICU_pre_unconf_1;
    int dim_aux_ICU_pre_unconf_12;
    int dim_aux_ICU_pre_unconf_123;
    int dim_aux_ICU_pre_unconf_2;
    int dim_aux_ICU_pre_unconf_3;
    int dim_aux_ICU_pre_unconf_4;
    int dim_aux_ICU_W_D_conf;
    int dim_aux_ICU_W_D_conf_1;
    int dim_aux_ICU_W_D_conf_12;
    int dim_aux_ICU_W_D_conf_123;
    int dim_aux_ICU_W_D_conf_2;
    int dim_aux_ICU_W_D_conf_3;
    int dim_aux_ICU_W_D_conf_4;
    int dim_aux_ICU_W_D_unconf;
    int dim_aux_ICU_W_D_unconf_1;
    int dim_aux_ICU_W_D_unconf_12;
    int dim_aux_ICU_W_D_unconf_123;
    int dim_aux_ICU_W_D_unconf_2;
    int dim_aux_ICU_W_D_unconf_3;
    int dim_aux_ICU_W_D_unconf_4;
    int dim_aux_ICU_W_R_conf;
    int dim_aux_ICU_W_R_conf_1;
    int dim_aux_ICU_W_R_conf_12;
    int dim_aux_ICU_W_R_conf_123;
    int dim_aux_ICU_W_R_conf_2;
    int dim_aux_ICU_W_R_conf_3;
    int dim_aux_ICU_W_R_conf_4;
    int dim_aux_ICU_W_R_unconf;
    int dim_aux_ICU_W_R_unconf_1;
    int dim_aux_ICU_W_R_unconf_12;
    int dim_aux_ICU_W_R_unconf_123;
    int dim_aux_ICU_W_R_unconf_2;
    int dim_aux_ICU_W_R_unconf_3;
    int dim_aux_ICU_W_R_unconf_4;
    int dim_aux_W_D_conf;
    int dim_aux_W_D_conf_1;
    int dim_aux_W_D_conf_12;
    int dim_aux_W_D_conf_123;
    int dim_aux_W_D_conf_2;
    int dim_aux_W_D_conf_3;
    int dim_aux_W_D_conf_4;
    int dim_aux_W_D_unconf;
    int dim_aux_W_D_unconf_1;
    int dim_aux_W_D_unconf_12;
    int dim_aux_W_D_unconf_123;
    int dim_aux_W_D_unconf_2;
    int dim_aux_W_D_unconf_3;
    int dim_aux_W_D_unconf_4;
    int dim_aux_W_R_conf;
    int dim_aux_W_R_conf_1;
    int dim_aux_W_R_conf_12;
    int dim_aux_W_R_conf_123;
    int dim_aux_W_R_conf_2;
    int dim_aux_W_R_conf_3;
    int dim_aux_W_R_conf_4;
    int dim_aux_W_R_unconf;
    int dim_aux_W_R_unconf_1;
    int dim_aux_W_R_unconf_12;
    int dim_aux_W_R_unconf_123;
    int dim_aux_W_R_unconf_2;
    int dim_aux_W_R_unconf_3;
    int dim_aux_W_R_unconf_4;
    int dim_beta_step;
    int dim_cum_admit_by_age;
    int dim_cum_infections_per_strain;
    int dim_cum_n_E_vaccinated;
    int dim_cum_n_E_vaccinated_1;
    int dim_cum_n_E_vaccinated_2;
    int dim_cum_n_I_A_vaccinated;
    int dim_cum_n_I_A_vaccinated_1;
    int dim_cum_n_I_A_vaccinated_2;
    int dim_cum_n_R_vaccinated;
    int dim_cum_n_R_vaccinated_1;
    int dim_cum_n_R_vaccinated_2;
    int dim_cum_n_S_vaccinated;
    int dim_cum_n_S_vaccinated_1;
    int dim_cum_n_S_vaccinated_2;
    int dim_cum_n_vaccinated;
    int dim_cum_n_vaccinated_1;
    int dim_cum_n_vaccinated_2;
    int dim_D_comm;
    int dim_D_hosp;
    int dim_E;
    int dim_E_1;
    int dim_E_12;
    int dim_E_123;
    int dim_E_2;
    int dim_E_3;
    int dim_E_4;
    int dim_G_D;
    int dim_G_D_1;
    int dim_G_D_12;
    int dim_G_D_123;
    int dim_G_D_2;
    int dim_G_D_3;
    int dim_G_D_4;
    int dim_gamma_sero_pre;
    int dim_H_D_conf;
    int dim_H_D_conf_1;
    int dim_H_D_conf_12;
    int dim_H_D_conf_123;
    int dim_H_D_conf_2;
    int dim_H_D_conf_3;
    int dim_H_D_conf_4;
    int dim_H_D_unconf;
    int dim_H_D_unconf_1;
    int dim_H_D_unconf_12;
    int dim_H_D_unconf_123;
    int dim_H_D_unconf_2;
    int dim_H_D_unconf_3;
    int dim_H_D_unconf_4;
    int dim_H_R_conf;
    int dim_H_R_conf_1;
    int dim_H_R_conf_12;
    int dim_H_R_conf_123;
    int dim_H_R_conf_2;
    int dim_H_R_conf_3;
    int dim_H_R_conf_4;
    int dim_H_R_unconf;
    int dim_H_R_unconf_1;
    int dim_H_R_unconf_12;
    int dim_H_R_unconf_123;
    int dim_H_R_unconf_2;
    int dim_H_R_unconf_3;
    int dim_H_R_unconf_4;
    int dim_I_A;
    int dim_I_A_1;
    int dim_I_A_12;
    int dim_I_A_123;
    int dim_I_A_2;
    int dim_I_A_3;
    int dim_I_A_4;
    int dim_I_C;
    int dim_I_C_1;
    int dim_I_C_12;
    int dim_I_C_123;
    int dim_I_C_2;
    int dim_I_C_3;
    int dim_I_C_4;
    int dim_I_with_diff_trans;
    int dim_I_with_diff_trans_1;
    int dim_I_with_diff_trans_12;
    int dim_I_with_diff_trans_2;
    int dim_I_with_diff_trans_3;
    int dim_ICU_D_conf;
    int dim_ICU_D_conf_1;
    int dim_ICU_D_conf_12;
    int dim_ICU_D_conf_123;
    int dim_ICU_D_conf_2;
    int dim_ICU_D_conf_3;
    int dim_ICU_D_conf_4;
    int dim_ICU_D_unconf;
    int dim_ICU_D_unconf_1;
    int dim_ICU_D_unconf_12;
    int dim_ICU_D_unconf_123;
    int dim_ICU_D_unconf_2;
    int dim_ICU_D_unconf_3;
    int dim_ICU_D_unconf_4;
    int dim_ICU_pre_conf;
    int dim_ICU_pre_conf_1;
    int dim_ICU_pre_conf_12;
    int dim_ICU_pre_conf_123;
    int dim_ICU_pre_conf_2;
    int dim_ICU_pre_conf_3;
    int dim_ICU_pre_conf_4;
    int dim_ICU_pre_unconf;
    int dim_ICU_pre_unconf_1;
    int dim_ICU_pre_unconf_12;
    int dim_ICU_pre_unconf_123;
    int dim_ICU_pre_unconf_2;
    int dim_ICU_pre_unconf_3;
    int dim_ICU_pre_unconf_4;
    int dim_ICU_W_D_conf;
    int dim_ICU_W_D_conf_1;
    int dim_ICU_W_D_conf_12;
    int dim_ICU_W_D_conf_123;
    int dim_ICU_W_D_conf_2;
    int dim_ICU_W_D_conf_3;
    int dim_ICU_W_D_conf_4;
    int dim_ICU_W_D_unconf;
    int dim_ICU_W_D_unconf_1;
    int dim_ICU_W_D_unconf_12;
    int dim_ICU_W_D_unconf_123;
    int dim_ICU_W_D_unconf_2;
    int dim_ICU_W_D_unconf_3;
    int dim_ICU_W_D_unconf_4;
    int dim_ICU_W_R_conf;
    int dim_ICU_W_R_conf_1;
    int dim_ICU_W_R_conf_12;
    int dim_ICU_W_R_conf_123;
    int dim_ICU_W_R_conf_2;
    int dim_ICU_W_R_conf_3;
    int dim_ICU_W_R_conf_4;
    int dim_ICU_W_R_unconf;
    int dim_ICU_W_R_unconf_1;
    int dim_ICU_W_R_unconf_12;
    int dim_ICU_W_R_unconf_123;
    int dim_ICU_W_R_unconf_2;
    int dim_ICU_W_R_unconf_3;
    int dim_ICU_W_R_unconf_4;
    int dim_lambda;
    int dim_lambda_1;
    int dim_lambda_2;
    int dim_m;
    int dim_m_1;
    int dim_m_2;
    int dim_n_com_to_T_sero_pre;
    int dim_n_com_to_T_sero_pre_1;
    int dim_n_com_to_T_sero_pre_12;
    int dim_n_com_to_T_sero_pre_123;
    int dim_n_com_to_T_sero_pre_2;
    int dim_n_com_to_T_sero_pre_3;
    int dim_n_com_to_T_sero_pre_4;
    int dim_n_E_next_vacc_class;
    int dim_n_E_next_vacc_class_1;
    int dim_n_E_next_vacc_class_12;
    int dim_n_E_next_vacc_class_123;
    int dim_n_E_next_vacc_class_2;
    int dim_n_E_next_vacc_class_3;
    int dim_n_E_next_vacc_class_4;
    int dim_n_E_progress;
    int dim_n_E_progress_1;
    int dim_n_E_progress_12;
    int dim_n_E_progress_123;
    int dim_n_E_progress_2;
    int dim_n_E_progress_3;
    int dim_n_E_progress_4;
    int dim_n_EE;
    int dim_n_EE_1;
    int dim_n_EE_12;
    int dim_n_EE_123;
    int dim_n_EE_2;
    int dim_n_EE_3;
    int dim_n_EE_4;
    int dim_n_EE_next_vacc_class;
    int dim_n_EE_next_vacc_class_1;
    int dim_n_EE_next_vacc_class_12;
    int dim_n_EE_next_vacc_class_123;
    int dim_n_EE_next_vacc_class_2;
    int dim_n_EE_next_vacc_class_3;
    int dim_n_EE_next_vacc_class_4;
    int dim_n_EI_A;
    int dim_n_EI_A_1;
    int dim_n_EI_A_12;
    int dim_n_EI_A_2;
    int dim_n_EI_A_3;
    int dim_n_EI_A_next_vacc_class;
    int dim_n_EI_A_next_vacc_class_1;
    int dim_n_EI_A_next_vacc_class_12;
    int dim_n_EI_A_next_vacc_class_2;
    int dim_n_EI_A_next_vacc_class_3;
    int dim_n_EI_C;
    int dim_n_EI_C_1;
    int dim_n_EI_C_12;
    int dim_n_EI_C_2;
    int dim_n_EI_C_3;
    int dim_n_EI_C_next_vacc_class;
    int dim_n_EI_C_next_vacc_class_1;
    int dim_n_EI_C_next_vacc_class_12;
    int dim_n_EI_C_next_vacc_class_2;
    int dim_n_EI_C_next_vacc_class_3;
    int dim_n_G_D_progress;
    int dim_n_G_D_progress_1;
    int dim_n_G_D_progress_12;
    int dim_n_G_D_progress_123;
    int dim_n_G_D_progress_2;
    int dim_n_G_D_progress_3;
    int dim_n_G_D_progress_4;
    int dim_n_H_D_conf_progress;
    int dim_n_H_D_conf_progress_1;
    int dim_n_H_D_conf_progress_12;
    int dim_n_H_D_conf_progress_123;
    int dim_n_H_D_conf_progress_2;
    int dim_n_H_D_conf_progress_3;
    int dim_n_H_D_conf_progress_4;
    int dim_n_H_D_unconf_progress;
    int dim_n_H_D_unconf_progress_1;
    int dim_n_H_D_unconf_progress_12;
    int dim_n_H_D_unconf_progress_123;
    int dim_n_H_D_unconf_progress_2;
    int dim_n_H_D_unconf_progress_3;
    int dim_n_H_D_unconf_progress_4;
    int dim_n_H_D_unconf_to_conf;
    int dim_n_H_D_unconf_to_conf_1;
    int dim_n_H_D_unconf_to_conf_12;
    int dim_n_H_D_unconf_to_conf_123;
    int dim_n_H_D_unconf_to_conf_2;
    int dim_n_H_D_unconf_to_conf_3;
    int dim_n_H_D_unconf_to_conf_4;
    int dim_n_H_R_conf_progress;
    int dim_n_H_R_conf_progress_1;
    int dim_n_H_R_conf_progress_12;
    int dim_n_H_R_conf_progress_123;
    int dim_n_H_R_conf_progress_2;
    int dim_n_H_R_conf_progress_3;
    int dim_n_H_R_conf_progress_4;
    int dim_n_H_R_unconf_progress;
    int dim_n_H_R_unconf_progress_1;
    int dim_n_H_R_unconf_progress_12;
    int dim_n_H_R_unconf_progress_123;
    int dim_n_H_R_unconf_progress_2;
    int dim_n_H_R_unconf_progress_3;
    int dim_n_H_R_unconf_progress_4;
    int dim_n_H_R_unconf_to_conf;
    int dim_n_H_R_unconf_to_conf_1;
    int dim_n_H_R_unconf_to_conf_12;
    int dim_n_H_R_unconf_to_conf_123;
    int dim_n_H_R_unconf_to_conf_2;
    int dim_n_H_R_unconf_to_conf_3;
    int dim_n_H_R_unconf_to_conf_4;
    int dim_n_hosp_non_ICU;
    int dim_n_hosp_non_ICU_1;
    int dim_n_hosp_non_ICU_12;
    int dim_n_hosp_non_ICU_2;
    int dim_n_hosp_non_ICU_3;
    int dim_n_I_A_next_vacc_class;
    int dim_n_I_A_next_vacc_class_1;
    int dim_n_I_A_next_vacc_class_12;
    int dim_n_I_A_next_vacc_class_123;
    int dim_n_I_A_next_vacc_class_2;
    int dim_n_I_A_next_vacc_class_3;
    int dim_n_I_A_next_vacc_class_4;
    int dim_n_I_A_progress;
    int dim_n_I_A_progress_1;
    int dim_n_I_A_progress_12;
    int dim_n_I_A_progress_123;
    int dim_n_I_A_progress_2;
    int dim_n_I_A_progress_3;
    int dim_n_I_A_progress_4;
    int dim_n_I_C_progress;
    int dim_n_I_C_progress_1;
    int dim_n_I_C_progress_12;
    int dim_n_I_C_progress_123;
    int dim_n_I_C_progress_2;
    int dim_n_I_C_progress_3;
    int dim_n_I_C_progress_4;
    int dim_n_I_C_to_G_D;
    int dim_n_I_C_to_G_D_1;
    int dim_n_I_C_to_G_D_12;
    int dim_n_I_C_to_G_D_2;
    int dim_n_I_C_to_G_D_3;
    int dim_n_I_C_to_H_D;
    int dim_n_I_C_to_H_D_1;
    int dim_n_I_C_to_H_D_12;
    int dim_n_I_C_to_H_D_2;
    int dim_n_I_C_to_H_D_3;
    int dim_n_I_C_to_H_D_conf;
    int dim_n_I_C_to_H_D_conf_1;
    int dim_n_I_C_to_H_D_conf_12;
    int dim_n_I_C_to_H_D_conf_2;
    int dim_n_I_C_to_H_D_conf_3;
    int dim_n_I_C_to_H_R;
    int dim_n_I_C_to_H_R_1;
    int dim_n_I_C_to_H_R_12;
    int dim_n_I_C_to_H_R_2;
    int dim_n_I_C_to_H_R_3;
    int dim_n_I_C_to_H_R_conf;
    int dim_n_I_C_to_H_R_conf_1;
    int dim_n_I_C_to_H_R_conf_12;
    int dim_n_I_C_to_H_R_conf_2;
    int dim_n_I_C_to_H_R_conf_3;
    int dim_n_I_C_to_hosp;
    int dim_n_I_C_to_hosp_1;
    int dim_n_I_C_to_hosp_12;
    int dim_n_I_C_to_hosp_2;
    int dim_n_I_C_to_hosp_3;
    int dim_n_I_C_to_ICU_pre;
    int dim_n_I_C_to_ICU_pre_1;
    int dim_n_I_C_to_ICU_pre_12;
    int dim_n_I_C_to_ICU_pre_2;
    int dim_n_I_C_to_ICU_pre_3;
    int dim_n_I_C_to_ICU_pre_conf;
    int dim_n_I_C_to_ICU_pre_conf_1;
    int dim_n_I_C_to_ICU_pre_conf_12;
    int dim_n_I_C_to_ICU_pre_conf_2;
    int dim_n_I_C_to_ICU_pre_conf_3;
    int dim_n_I_C_to_R;
    int dim_n_I_C_to_R_1;
    int dim_n_I_C_to_R_12;
    int dim_n_I_C_to_R_2;
    int dim_n_I_C_to_R_3;
    int dim_n_ICU_D_conf_progress;
    int dim_n_ICU_D_conf_progress_1;
    int dim_n_ICU_D_conf_progress_12;
    int dim_n_ICU_D_conf_progress_123;
    int dim_n_ICU_D_conf_progress_2;
    int dim_n_ICU_D_conf_progress_3;
    int dim_n_ICU_D_conf_progress_4;
    int dim_n_ICU_D_unconf_progress;
    int dim_n_ICU_D_unconf_progress_1;
    int dim_n_ICU_D_unconf_progress_12;
    int dim_n_ICU_D_unconf_progress_123;
    int dim_n_ICU_D_unconf_progress_2;
    int dim_n_ICU_D_unconf_progress_3;
    int dim_n_ICU_D_unconf_progress_4;
    int dim_n_ICU_D_unconf_to_conf;
    int dim_n_ICU_D_unconf_to_conf_1;
    int dim_n_ICU_D_unconf_to_conf_12;
    int dim_n_ICU_D_unconf_to_conf_123;
    int dim_n_ICU_D_unconf_to_conf_2;
    int dim_n_ICU_D_unconf_to_conf_3;
    int dim_n_ICU_D_unconf_to_conf_4;
    int dim_n_ICU_pre_conf_progress;
    int dim_n_ICU_pre_conf_progress_1;
    int dim_n_ICU_pre_conf_progress_12;
    int dim_n_ICU_pre_conf_progress_123;
    int dim_n_ICU_pre_conf_progress_2;
    int dim_n_ICU_pre_conf_progress_3;
    int dim_n_ICU_pre_conf_progress_4;
    int dim_n_ICU_pre_conf_to_ICU_D_conf;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_1;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_12;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_2;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_3;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_1;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_12;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_2;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_3;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_1;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_12;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_2;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_3;
    int dim_n_ICU_pre_unconf_progress;
    int dim_n_ICU_pre_unconf_progress_1;
    int dim_n_ICU_pre_unconf_progress_12;
    int dim_n_ICU_pre_unconf_progress_123;
    int dim_n_ICU_pre_unconf_progress_2;
    int dim_n_ICU_pre_unconf_progress_3;
    int dim_n_ICU_pre_unconf_progress_4;
    int dim_n_ICU_pre_unconf_to_conf;
    int dim_n_ICU_pre_unconf_to_conf_1;
    int dim_n_ICU_pre_unconf_to_conf_12;
    int dim_n_ICU_pre_unconf_to_conf_123;
    int dim_n_ICU_pre_unconf_to_conf_2;
    int dim_n_ICU_pre_unconf_to_conf_3;
    int dim_n_ICU_pre_unconf_to_conf_4;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_1;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_12;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_2;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_3;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3;
    int dim_n_ICU_W_D_conf_progress;
    int dim_n_ICU_W_D_conf_progress_1;
    int dim_n_ICU_W_D_conf_progress_12;
    int dim_n_ICU_W_D_conf_progress_123;
    int dim_n_ICU_W_D_conf_progress_2;
    int dim_n_ICU_W_D_conf_progress_3;
    int dim_n_ICU_W_D_conf_progress_4;
    int dim_n_ICU_W_D_unconf_progress;
    int dim_n_ICU_W_D_unconf_progress_1;
    int dim_n_ICU_W_D_unconf_progress_12;
    int dim_n_ICU_W_D_unconf_progress_123;
    int dim_n_ICU_W_D_unconf_progress_2;
    int dim_n_ICU_W_D_unconf_progress_3;
    int dim_n_ICU_W_D_unconf_progress_4;
    int dim_n_ICU_W_D_unconf_to_conf;
    int dim_n_ICU_W_D_unconf_to_conf_1;
    int dim_n_ICU_W_D_unconf_to_conf_12;
    int dim_n_ICU_W_D_unconf_to_conf_123;
    int dim_n_ICU_W_D_unconf_to_conf_2;
    int dim_n_ICU_W_D_unconf_to_conf_3;
    int dim_n_ICU_W_D_unconf_to_conf_4;
    int dim_n_ICU_W_R_conf_progress;
    int dim_n_ICU_W_R_conf_progress_1;
    int dim_n_ICU_W_R_conf_progress_12;
    int dim_n_ICU_W_R_conf_progress_123;
    int dim_n_ICU_W_R_conf_progress_2;
    int dim_n_ICU_W_R_conf_progress_3;
    int dim_n_ICU_W_R_conf_progress_4;
    int dim_n_ICU_W_R_unconf_progress;
    int dim_n_ICU_W_R_unconf_progress_1;
    int dim_n_ICU_W_R_unconf_progress_12;
    int dim_n_ICU_W_R_unconf_progress_123;
    int dim_n_ICU_W_R_unconf_progress_2;
    int dim_n_ICU_W_R_unconf_progress_3;
    int dim_n_ICU_W_R_unconf_progress_4;
    int dim_n_ICU_W_R_unconf_to_conf;
    int dim_n_ICU_W_R_unconf_to_conf_1;
    int dim_n_ICU_W_R_unconf_to_conf_12;
    int dim_n_ICU_W_R_unconf_to_conf_123;
    int dim_n_ICU_W_R_unconf_to_conf_2;
    int dim_n_ICU_W_R_unconf_to_conf_3;
    int dim_n_ICU_W_R_unconf_to_conf_4;
    int dim_n_II_A;
    int dim_n_II_A_1;
    int dim_n_II_A_12;
    int dim_n_II_A_123;
    int dim_n_II_A_2;
    int dim_n_II_A_3;
    int dim_n_II_A_4;
    int dim_n_II_A_next_vacc_class;
    int dim_n_II_A_next_vacc_class_1;
    int dim_n_II_A_next_vacc_class_12;
    int dim_n_II_A_next_vacc_class_123;
    int dim_n_II_A_next_vacc_class_2;
    int dim_n_II_A_next_vacc_class_3;
    int dim_n_II_A_next_vacc_class_4;
    int dim_n_R_next_vacc_class;
    int dim_n_R_next_vacc_class_1;
    int dim_n_R_next_vacc_class_12;
    int dim_n_R_next_vacc_class_2;
    int dim_n_R_next_vacc_class_3;
    int dim_n_R_next_vacc_class_capped;
    int dim_n_R_next_vacc_class_capped_1;
    int dim_n_R_next_vacc_class_capped_12;
    int dim_n_R_next_vacc_class_capped_2;
    int dim_n_R_next_vacc_class_capped_3;
    int dim_n_R_next_vacc_class_tmp;
    int dim_n_R_next_vacc_class_tmp_1;
    int dim_n_R_next_vacc_class_tmp_12;
    int dim_n_R_next_vacc_class_tmp_2;
    int dim_n_R_next_vacc_class_tmp_3;
    int dim_n_R_progress;
    int dim_n_R_progress_1;
    int dim_n_R_progress_12;
    int dim_n_R_progress_2;
    int dim_n_R_progress_3;
    int dim_n_R_progress_capped;
    int dim_n_R_progress_capped_1;
    int dim_n_R_progress_capped_12;
    int dim_n_R_progress_capped_2;
    int dim_n_R_progress_capped_3;
    int dim_n_R_progress_tmp;
    int dim_n_R_progress_tmp_1;
    int dim_n_R_progress_tmp_12;
    int dim_n_R_progress_tmp_2;
    int dim_n_R_progress_tmp_3;
    int dim_n_RS;
    int dim_n_RS_1;
    int dim_n_RS_12;
    int dim_n_RS_2;
    int dim_n_RS_3;
    int dim_n_RS_next_vacc_class;
    int dim_n_RS_next_vacc_class_1;
    int dim_n_RS_next_vacc_class_12;
    int dim_n_RS_next_vacc_class_2;
    int dim_n_RS_next_vacc_class_3;
    int dim_n_S_next_vacc_class;
    int dim_n_S_next_vacc_class_1;
    int dim_n_S_next_vacc_class_2;
    int dim_n_S_progress;
    int dim_n_S_progress_1;
    int dim_n_S_progress_12;
    int dim_n_S_progress_2;
    int dim_n_S_progress_3;
    int dim_n_S_progress_tot;
    int dim_n_S_progress_tot_1;
    int dim_n_S_progress_tot_2;
    int dim_n_SE;
    int dim_n_SE_1;
    int dim_n_SE_12;
    int dim_n_SE_2;
    int dim_n_SE_3;
    int dim_n_SE_next_vacc_class;
    int dim_n_SE_next_vacc_class_1;
    int dim_n_SE_next_vacc_class_12;
    int dim_n_SE_next_vacc_class_2;
    int dim_n_SE_next_vacc_class_3;
    int dim_n_T_PCR_pos_progress;
    int dim_n_T_PCR_pos_progress_1;
    int dim_n_T_PCR_pos_progress_12;
    int dim_n_T_PCR_pos_progress_123;
    int dim_n_T_PCR_pos_progress_2;
    int dim_n_T_PCR_pos_progress_3;
    int dim_n_T_PCR_pos_progress_4;
    int dim_n_T_PCR_pre_progress;
    int dim_n_T_PCR_pre_progress_1;
    int dim_n_T_PCR_pre_progress_12;
    int dim_n_T_PCR_pre_progress_123;
    int dim_n_T_PCR_pre_progress_2;
    int dim_n_T_PCR_pre_progress_3;
    int dim_n_T_PCR_pre_progress_4;
    int dim_n_T_sero_pos_progress;
    int dim_n_T_sero_pos_progress_1;
    int dim_n_T_sero_pos_progress_12;
    int dim_n_T_sero_pos_progress_123;
    int dim_n_T_sero_pos_progress_2;
    int dim_n_T_sero_pos_progress_3;
    int dim_n_T_sero_pos_progress_4;
    int dim_n_T_sero_pre_progress;
    int dim_n_T_sero_pre_progress_1;
    int dim_n_T_sero_pre_progress_12;
    int dim_n_T_sero_pre_progress_123;
    int dim_n_T_sero_pre_progress_2;
    int dim_n_T_sero_pre_progress_3;
    int dim_n_T_sero_pre_progress_4;
    int dim_n_T_sero_pre_to_T_sero_pos;
    int dim_n_T_sero_pre_to_T_sero_pos_1;
    int dim_n_T_sero_pre_to_T_sero_pos_12;
    int dim_n_T_sero_pre_to_T_sero_pos_2;
    int dim_n_T_sero_pre_to_T_sero_pos_3;
    int dim_N_tot;
    int dim_n_W_D_conf_progress;
    int dim_n_W_D_conf_progress_1;
    int dim_n_W_D_conf_progress_12;
    int dim_n_W_D_conf_progress_123;
    int dim_n_W_D_conf_progress_2;
    int dim_n_W_D_conf_progress_3;
    int dim_n_W_D_conf_progress_4;
    int dim_n_W_D_unconf_progress;
    int dim_n_W_D_unconf_progress_1;
    int dim_n_W_D_unconf_progress_12;
    int dim_n_W_D_unconf_progress_123;
    int dim_n_W_D_unconf_progress_2;
    int dim_n_W_D_unconf_progress_3;
    int dim_n_W_D_unconf_progress_4;
    int dim_n_W_D_unconf_to_conf;
    int dim_n_W_D_unconf_to_conf_1;
    int dim_n_W_D_unconf_to_conf_12;
    int dim_n_W_D_unconf_to_conf_123;
    int dim_n_W_D_unconf_to_conf_2;
    int dim_n_W_D_unconf_to_conf_3;
    int dim_n_W_D_unconf_to_conf_4;
    int dim_n_W_R_conf_progress;
    int dim_n_W_R_conf_progress_1;
    int dim_n_W_R_conf_progress_12;
    int dim_n_W_R_conf_progress_123;
    int dim_n_W_R_conf_progress_2;
    int dim_n_W_R_conf_progress_3;
    int dim_n_W_R_conf_progress_4;
    int dim_n_W_R_unconf_progress;
    int dim_n_W_R_unconf_progress_1;
    int dim_n_W_R_unconf_progress_12;
    int dim_n_W_R_unconf_progress_123;
    int dim_n_W_R_unconf_progress_2;
    int dim_n_W_R_unconf_progress_3;
    int dim_n_W_R_unconf_progress_4;
    int dim_n_W_R_unconf_to_conf;
    int dim_n_W_R_unconf_to_conf_1;
    int dim_n_W_R_unconf_to_conf_12;
    int dim_n_W_R_unconf_to_conf_123;
    int dim_n_W_R_unconf_to_conf_2;
    int dim_n_W_R_unconf_to_conf_3;
    int dim_n_W_R_unconf_to_conf_4;
    int dim_new_D_comm;
    int dim_new_D_hosp;
    int dim_new_E;
    int dim_new_E_1;
    int dim_new_E_12;
    int dim_new_E_123;
    int dim_new_E_2;
    int dim_new_E_3;
    int dim_new_E_4;
    int dim_new_G_D;
    int dim_new_G_D_1;
    int dim_new_G_D_12;
    int dim_new_G_D_123;
    int dim_new_G_D_2;
    int dim_new_G_D_3;
    int dim_new_G_D_4;
    int dim_new_H_D_conf;
    int dim_new_H_D_conf_1;
    int dim_new_H_D_conf_12;
    int dim_new_H_D_conf_123;
    int dim_new_H_D_conf_2;
    int dim_new_H_D_conf_3;
    int dim_new_H_D_conf_4;
    int dim_new_H_D_unconf;
    int dim_new_H_D_unconf_1;
    int dim_new_H_D_unconf_12;
    int dim_new_H_D_unconf_123;
    int dim_new_H_D_unconf_2;
    int dim_new_H_D_unconf_3;
    int dim_new_H_D_unconf_4;
    int dim_new_H_R_conf;
    int dim_new_H_R_conf_1;
    int dim_new_H_R_conf_12;
    int dim_new_H_R_conf_123;
    int dim_new_H_R_conf_2;
    int dim_new_H_R_conf_3;
    int dim_new_H_R_conf_4;
    int dim_new_H_R_unconf;
    int dim_new_H_R_unconf_1;
    int dim_new_H_R_unconf_12;
    int dim_new_H_R_unconf_123;
    int dim_new_H_R_unconf_2;
    int dim_new_H_R_unconf_3;
    int dim_new_H_R_unconf_4;
    int dim_new_I_A;
    int dim_new_I_A_1;
    int dim_new_I_A_12;
    int dim_new_I_A_123;
    int dim_new_I_A_2;
    int dim_new_I_A_3;
    int dim_new_I_A_4;
    int dim_new_I_C;
    int dim_new_I_C_1;
    int dim_new_I_C_12;
    int dim_new_I_C_123;
    int dim_new_I_C_2;
    int dim_new_I_C_3;
    int dim_new_I_C_4;
    int dim_new_ICU_D_conf;
    int dim_new_ICU_D_conf_1;
    int dim_new_ICU_D_conf_12;
    int dim_new_ICU_D_conf_123;
    int dim_new_ICU_D_conf_2;
    int dim_new_ICU_D_conf_3;
    int dim_new_ICU_D_conf_4;
    int dim_new_ICU_D_unconf;
    int dim_new_ICU_D_unconf_1;
    int dim_new_ICU_D_unconf_12;
    int dim_new_ICU_D_unconf_123;
    int dim_new_ICU_D_unconf_2;
    int dim_new_ICU_D_unconf_3;
    int dim_new_ICU_D_unconf_4;
    int dim_new_ICU_pre_conf;
    int dim_new_ICU_pre_conf_1;
    int dim_new_ICU_pre_conf_12;
    int dim_new_ICU_pre_conf_123;
    int dim_new_ICU_pre_conf_2;
    int dim_new_ICU_pre_conf_3;
    int dim_new_ICU_pre_conf_4;
    int dim_new_ICU_pre_unconf;
    int dim_new_ICU_pre_unconf_1;
    int dim_new_ICU_pre_unconf_12;
    int dim_new_ICU_pre_unconf_123;
    int dim_new_ICU_pre_unconf_2;
    int dim_new_ICU_pre_unconf_3;
    int dim_new_ICU_pre_unconf_4;
    int dim_new_ICU_W_D_conf;
    int dim_new_ICU_W_D_conf_1;
    int dim_new_ICU_W_D_conf_12;
    int dim_new_ICU_W_D_conf_123;
    int dim_new_ICU_W_D_conf_2;
    int dim_new_ICU_W_D_conf_3;
    int dim_new_ICU_W_D_conf_4;
    int dim_new_ICU_W_D_unconf;
    int dim_new_ICU_W_D_unconf_1;
    int dim_new_ICU_W_D_unconf_12;
    int dim_new_ICU_W_D_unconf_123;
    int dim_new_ICU_W_D_unconf_2;
    int dim_new_ICU_W_D_unconf_3;
    int dim_new_ICU_W_D_unconf_4;
    int dim_new_ICU_W_R_conf;
    int dim_new_ICU_W_R_conf_1;
    int dim_new_ICU_W_R_conf_12;
    int dim_new_ICU_W_R_conf_123;
    int dim_new_ICU_W_R_conf_2;
    int dim_new_ICU_W_R_conf_3;
    int dim_new_ICU_W_R_conf_4;
    int dim_new_ICU_W_R_unconf;
    int dim_new_ICU_W_R_unconf_1;
    int dim_new_ICU_W_R_unconf_12;
    int dim_new_ICU_W_R_unconf_123;
    int dim_new_ICU_W_R_unconf_2;
    int dim_new_ICU_W_R_unconf_3;
    int dim_new_ICU_W_R_unconf_4;
    int dim_new_R;
    int dim_new_R_1;
    int dim_new_R_12;
    int dim_new_R_2;
    int dim_new_R_3;
    int dim_new_S;
    int dim_new_S_1;
    int dim_new_S_2;
    int dim_new_T_PCR_neg;
    int dim_new_T_PCR_neg_1;
    int dim_new_T_PCR_neg_12;
    int dim_new_T_PCR_neg_2;
    int dim_new_T_PCR_neg_3;
    int dim_new_T_PCR_pos;
    int dim_new_T_PCR_pos_1;
    int dim_new_T_PCR_pos_12;
    int dim_new_T_PCR_pos_123;
    int dim_new_T_PCR_pos_2;
    int dim_new_T_PCR_pos_3;
    int dim_new_T_PCR_pos_4;
    int dim_new_T_PCR_pre;
    int dim_new_T_PCR_pre_1;
    int dim_new_T_PCR_pre_12;
    int dim_new_T_PCR_pre_123;
    int dim_new_T_PCR_pre_2;
    int dim_new_T_PCR_pre_3;
    int dim_new_T_PCR_pre_4;
    int dim_new_T_sero_neg;
    int dim_new_T_sero_neg_1;
    int dim_new_T_sero_neg_12;
    int dim_new_T_sero_neg_2;
    int dim_new_T_sero_neg_3;
    int dim_new_T_sero_pos;
    int dim_new_T_sero_pos_1;
    int dim_new_T_sero_pos_12;
    int dim_new_T_sero_pos_123;
    int dim_new_T_sero_pos_2;
    int dim_new_T_sero_pos_3;
    int dim_new_T_sero_pos_4;
    int dim_new_T_sero_pre;
    int dim_new_T_sero_pre_1;
    int dim_new_T_sero_pre_12;
    int dim_new_T_sero_pre_123;
    int dim_new_T_sero_pre_2;
    int dim_new_T_sero_pre_3;
    int dim_new_T_sero_pre_4;
    int dim_new_W_D_conf;
    int dim_new_W_D_conf_1;
    int dim_new_W_D_conf_12;
    int dim_new_W_D_conf_123;
    int dim_new_W_D_conf_2;
    int dim_new_W_D_conf_3;
    int dim_new_W_D_conf_4;
    int dim_new_W_D_unconf;
    int dim_new_W_D_unconf_1;
    int dim_new_W_D_unconf_12;
    int dim_new_W_D_unconf_123;
    int dim_new_W_D_unconf_2;
    int dim_new_W_D_unconf_3;
    int dim_new_W_D_unconf_4;
    int dim_new_W_R_conf;
    int dim_new_W_R_conf_1;
    int dim_new_W_R_conf_12;
    int dim_new_W_R_conf_123;
    int dim_new_W_R_conf_2;
    int dim_new_W_R_conf_3;
    int dim_new_W_R_conf_4;
    int dim_new_W_R_unconf;
    int dim_new_W_R_unconf_1;
    int dim_new_W_R_unconf_12;
    int dim_new_W_R_unconf_123;
    int dim_new_W_R_unconf_2;
    int dim_new_W_R_unconf_3;
    int dim_new_W_R_unconf_4;
    int dim_p_C;
    int dim_p_E_next_vacc_class;
    int dim_p_E_next_vacc_class_1;
    int dim_p_E_next_vacc_class_12;
    int dim_p_E_next_vacc_class_123;
    int dim_p_E_next_vacc_class_2;
    int dim_p_E_next_vacc_class_3;
    int dim_p_E_next_vacc_class_4;
    int dim_p_G_D_by_age;
    int dim_p_G_D_step;
    int dim_p_H_by_age;
    int dim_p_H_D_by_age;
    int dim_p_H_D_step;
    int dim_p_H_step;
    int dim_p_I_A_next_vacc_class;
    int dim_p_I_A_next_vacc_class_1;
    int dim_p_I_A_next_vacc_class_12;
    int dim_p_I_A_next_vacc_class_123;
    int dim_p_I_A_next_vacc_class_2;
    int dim_p_I_A_next_vacc_class_3;
    int dim_p_I_A_next_vacc_class_4;
    int dim_p_ICU_by_age;
    int dim_p_ICU_D_by_age;
    int dim_p_ICU_D_step;
    int dim_p_ICU_step;
    int dim_p_R_next_vacc_class;
    int dim_p_R_next_vacc_class_1;
    int dim_p_R_next_vacc_class_12;
    int dim_p_R_next_vacc_class_2;
    int dim_p_R_next_vacc_class_3;
    int dim_p_RS;
    int dim_p_S_next_vacc_class;
    int dim_p_S_next_vacc_class_1;
    int dim_p_S_next_vacc_class_2;
    int dim_p_SE;
    int dim_p_SE_1;
    int dim_p_SE_2;
    int dim_p_sero_pos;
    int dim_p_star_by_age;
    int dim_p_star_step;
    int dim_p_T_sero_pre_progress;
    int dim_p_T_sero_pre_progress_1;
    int dim_p_T_sero_pre_progress_12;
    int dim_p_T_sero_pre_progress_123;
    int dim_p_T_sero_pre_progress_2;
    int dim_p_T_sero_pre_progress_3;
    int dim_p_T_sero_pre_progress_4;
    int dim_p_W_D_by_age;
    int dim_p_W_D_step;
    int dim_psi_G_D;
    int dim_psi_H;
    int dim_psi_H_D;
    int dim_psi_ICU;
    int dim_psi_ICU_D;
    int dim_psi_star;
    int dim_psi_W_D;
    int dim_R;
    int dim_R_1;
    int dim_R_12;
    int dim_R_2;
    int dim_R_3;
    int dim_rel_p_hosp_if_sympt;
    int dim_rel_p_hosp_if_sympt_1;
    int dim_rel_p_hosp_if_sympt_2;
    int dim_rel_p_sympt;
    int dim_rel_p_sympt_1;
    int dim_rel_p_sympt_2;
    int dim_rel_susceptibility;
    int dim_rel_susceptibility_1;
    int dim_rel_susceptibility_2;
    int dim_S;
    int dim_S_1;
    int dim_S_2;
    int dim_s_ij;
    int dim_s_ij_1;
    int dim_s_ij_12;
    int dim_s_ij_2;
    int dim_s_ij_3;
    int dim_strain_seed_step;
    int dim_strain_transmission;
    int dim_T_PCR_neg;
    int dim_T_PCR_neg_1;
    int dim_T_PCR_neg_12;
    int dim_T_PCR_neg_2;
    int dim_T_PCR_neg_3;
    int dim_T_PCR_pos;
    int dim_T_PCR_pos_1;
    int dim_T_PCR_pos_12;
    int dim_T_PCR_pos_123;
    int dim_T_PCR_pos_2;
    int dim_T_PCR_pos_3;
    int dim_T_PCR_pos_4;
    int dim_T_PCR_pre;
    int dim_T_PCR_pre_1;
    int dim_T_PCR_pre_12;
    int dim_T_PCR_pre_123;
    int dim_T_PCR_pre_2;
    int dim_T_PCR_pre_3;
    int dim_T_PCR_pre_4;
    int dim_T_sero_neg;
    int dim_T_sero_neg_1;
    int dim_T_sero_neg_12;
    int dim_T_sero_neg_2;
    int dim_T_sero_neg_3;
    int dim_T_sero_pos;
    int dim_T_sero_pos_1;
    int dim_T_sero_pos_12;
    int dim_T_sero_pos_123;
    int dim_T_sero_pos_2;
    int dim_T_sero_pos_3;
    int dim_T_sero_pos_4;
    int dim_T_sero_pre;
    int dim_T_sero_pre_1;
    int dim_T_sero_pre_12;
    int dim_T_sero_pre_123;
    int dim_T_sero_pre_2;
    int dim_T_sero_pre_3;
    int dim_T_sero_pre_4;
    int dim_vaccine_n_candidates;
    int dim_vaccine_population_possible;
    int dim_vaccine_population_reluctant;
    int dim_vaccine_progression_rate;
    int dim_vaccine_progression_rate_1;
    int dim_vaccine_progression_rate_2;
    int dim_vaccine_progression_rate_base;
    int dim_vaccine_progression_rate_base_1;
    int dim_vaccine_progression_rate_base_2;
    int dim_W_D_conf;
    int dim_W_D_conf_1;
    int dim_W_D_conf_12;
    int dim_W_D_conf_123;
    int dim_W_D_conf_2;
    int dim_W_D_conf_3;
    int dim_W_D_conf_4;
    int dim_W_D_unconf;
    int dim_W_D_unconf_1;
    int dim_W_D_unconf_12;
    int dim_W_D_unconf_123;
    int dim_W_D_unconf_2;
    int dim_W_D_unconf_3;
    int dim_W_D_unconf_4;
    int dim_W_R_conf;
    int dim_W_R_conf_1;
    int dim_W_R_conf_12;
    int dim_W_R_conf_123;
    int dim_W_R_conf_2;
    int dim_W_R_conf_3;
    int dim_W_R_conf_4;
    int dim_W_R_unconf;
    int dim_W_R_unconf_1;
    int dim_W_R_unconf_12;
    int dim_W_R_unconf_123;
    int dim_W_R_unconf_2;
    int dim_W_R_unconf_3;
    int dim_W_R_unconf_4;
    int dim_waning_rate;
    real_t dt;
    real_t G_D_transmission;
    real_t gamma_A;
    real_t gamma_C;
    real_t gamma_E;
    real_t gamma_G_D;
    real_t gamma_H_D;
    real_t gamma_H_R;
    real_t gamma_ICU_D;
    real_t gamma_ICU_pre;
    real_t gamma_ICU_W_D;
    real_t gamma_ICU_W_R;
    real_t gamma_PCR_pos;
    real_t gamma_PCR_pre;
    real_t gamma_sero_pos;
    std::vector<real_t> gamma_sero_pre;
    real_t gamma_sero_pre_1;
    real_t gamma_sero_pre_2;
    real_t gamma_U;
    real_t gamma_W_D;
    real_t gamma_W_R;
    real_t hosp_transmission;
    std::vector<real_t> I_with_diff_trans;
    real_t ICU_transmission;
    real_t initial_beta_out;
    std::vector<real_t> initial_cum_admit_by_age;
    real_t initial_cum_admit_conf;
    real_t initial_cum_infections;
    std::vector<real_t> initial_cum_infections_per_strain;
    std::vector<real_t> initial_cum_n_E_vaccinated;
    std::vector<real_t> initial_cum_n_I_A_vaccinated;
    std::vector<real_t> initial_cum_n_R_vaccinated;
    std::vector<real_t> initial_cum_n_S_vaccinated;
    std::vector<real_t> initial_cum_n_vaccinated;
    real_t initial_cum_new_conf;
    real_t initial_cum_sympt_cases;
    real_t initial_cum_sympt_cases_over25;
    std::vector<real_t> initial_D_comm;
    real_t initial_D_comm_tot;
    std::vector<real_t> initial_D_hosp;
    real_t initial_D_hosp_tot;
    real_t initial_D_tot;
    std::vector<real_t> initial_E;
    std::vector<real_t> initial_G_D;
    real_t initial_general_tot;
    std::vector<real_t> initial_H_D_conf;
    std::vector<real_t> initial_H_D_unconf;
    std::vector<real_t> initial_H_R_conf;
    std::vector<real_t> initial_H_R_unconf;
    real_t initial_hosp_tot;
    std::vector<real_t> initial_I_A;
    std::vector<real_t> initial_I_C;
    std::vector<real_t> initial_ICU_D_conf;
    std::vector<real_t> initial_ICU_D_unconf;
    std::vector<real_t> initial_ICU_pre_conf;
    std::vector<real_t> initial_ICU_pre_unconf;
    real_t initial_ICU_tot;
    std::vector<real_t> initial_ICU_W_D_conf;
    std::vector<real_t> initial_ICU_W_D_unconf;
    std::vector<real_t> initial_ICU_W_R_conf;
    std::vector<real_t> initial_ICU_W_R_unconf;
    std::vector<real_t> initial_N_tot;
    real_t initial_N_tot2;
    real_t initial_N_tot3;
    std::vector<real_t> initial_R;
    real_t initial_react_pos;
    std::vector<real_t> initial_S;
    real_t initial_sero_pos;
    std::vector<real_t> initial_T_PCR_neg;
    std::vector<real_t> initial_T_PCR_pos;
    std::vector<real_t> initial_T_PCR_pre;
    std::vector<real_t> initial_T_sero_neg;
    std::vector<real_t> initial_T_sero_pos;
    std::vector<real_t> initial_T_sero_pre;
    real_t initial_time;
    std::vector<real_t> initial_W_D_conf;
    std::vector<real_t> initial_W_D_unconf;
    std::vector<real_t> initial_W_R_conf;
    std::vector<real_t> initial_W_R_unconf;
    int k_A;
    int k_C;
    int k_E;
    int k_G_D;
    int k_H_D;
    int k_H_R;
    int k_ICU_D;
    int k_ICU_pre;
    int k_ICU_W_D;
    int k_ICU_W_R;
    int k_PCR_pos;
    int k_PCR_pre;
    int k_sero_pos;
    int k_W_D;
    int k_W_R;
    std::vector<real_t> lambda;
    std::vector<real_t> m;
    real_t model_pcr_and_serology;
    real_t model_pcr_and_serology_user;
    int n_age_groups;
    std::vector<real_t> n_com_to_T_sero_pre;
    std::vector<real_t> n_E_next_vacc_class;
    std::vector<real_t> n_E_progress;
    std::vector<real_t> n_EE;
    std::vector<real_t> n_EE_next_vacc_class;
    std::vector<real_t> n_EI_A;
    std::vector<real_t> n_EI_A_next_vacc_class;
    std::vector<real_t> n_EI_C;
    std::vector<real_t> n_EI_C_next_vacc_class;
    std::vector<real_t> n_G_D_progress;
    int n_groups;
    std::vector<real_t> n_H_D_conf_progress;
    std::vector<real_t> n_H_D_unconf_progress;
    std::vector<real_t> n_H_D_unconf_to_conf;
    std::vector<real_t> n_H_R_conf_progress;
    std::vector<real_t> n_H_R_unconf_progress;
    std::vector<real_t> n_H_R_unconf_to_conf;
    std::vector<real_t> n_hosp_non_ICU;
    std::vector<real_t> n_I_A_next_vacc_class;
    std::vector<real_t> n_I_A_progress;
    std::vector<real_t> n_I_C_progress;
    std::vector<real_t> n_I_C_to_G_D;
    std::vector<real_t> n_I_C_to_H_D;
    std::vector<real_t> n_I_C_to_H_D_conf;
    std::vector<real_t> n_I_C_to_H_R;
    std::vector<real_t> n_I_C_to_H_R_conf;
    std::vector<real_t> n_I_C_to_hosp;
    std::vector<real_t> n_I_C_to_ICU_pre;
    std::vector<real_t> n_I_C_to_ICU_pre_conf;
    std::vector<real_t> n_I_C_to_R;
    std::vector<real_t> n_ICU_D_conf_progress;
    std::vector<real_t> n_ICU_D_unconf_progress;
    std::vector<real_t> n_ICU_D_unconf_to_conf;
    std::vector<real_t> n_ICU_pre_conf_progress;
    std::vector<real_t> n_ICU_pre_conf_to_ICU_D_conf;
    std::vector<real_t> n_ICU_pre_conf_to_ICU_W_D_conf;
    std::vector<real_t> n_ICU_pre_conf_to_ICU_W_R_conf;
    std::vector<real_t> n_ICU_pre_unconf_progress;
    std::vector<real_t> n_ICU_pre_unconf_to_conf;
    std::vector<real_t> n_ICU_pre_unconf_to_ICU_D_unconf;
    std::vector<real_t> n_ICU_pre_unconf_to_ICU_W_D_unconf;
    std::vector<real_t> n_ICU_pre_unconf_to_ICU_W_R_unconf;
    std::vector<real_t> n_ICU_W_D_conf_progress;
    std::vector<real_t> n_ICU_W_D_unconf_progress;
    std::vector<real_t> n_ICU_W_D_unconf_to_conf;
    std::vector<real_t> n_ICU_W_R_conf_progress;
    std::vector<real_t> n_ICU_W_R_unconf_progress;
    std::vector<real_t> n_ICU_W_R_unconf_to_conf;
    std::vector<real_t> n_II_A;
    std::vector<real_t> n_II_A_next_vacc_class;
    std::vector<real_t> n_R_next_vacc_class;
    std::vector<real_t> n_R_next_vacc_class_capped;
    std::vector<real_t> n_R_next_vacc_class_tmp;
    std::vector<real_t> n_R_progress;
    std::vector<real_t> n_R_progress_capped;
    std::vector<real_t> n_R_progress_tmp;
    std::vector<real_t> n_RS;
    std::vector<real_t> n_RS_next_vacc_class;
    std::vector<real_t> n_S_next_vacc_class;
    std::vector<real_t> n_S_progress;
    std::vector<real_t> n_S_progress_tot;
    std::vector<real_t> n_SE;
    std::vector<real_t> n_SE_next_vacc_class;
    int n_strains;
    std::vector<real_t> n_T_PCR_pos_progress;
    std::vector<real_t> n_T_PCR_pre_progress;
    std::vector<real_t> n_T_sero_pos_progress;
    std::vector<real_t> n_T_sero_pre_progress;
    std::vector<real_t> n_T_sero_pre_to_T_sero_pos;
    int n_vacc_classes;
    std::vector<real_t> n_W_D_conf_progress;
    std::vector<real_t> n_W_D_unconf_progress;
    std::vector<real_t> n_W_D_unconf_to_conf;
    std::vector<real_t> n_W_R_conf_progress;
    std::vector<real_t> n_W_R_unconf_progress;
    std::vector<real_t> n_W_R_unconf_to_conf;
    std::vector<real_t> new_D_comm;
    std::vector<real_t> new_D_hosp;
    std::vector<real_t> new_E;
    std::vector<real_t> new_G_D;
    std::vector<real_t> new_H_D_conf;
    std::vector<real_t> new_H_D_unconf;
    std::vector<real_t> new_H_R_conf;
    std::vector<real_t> new_H_R_unconf;
    std::vector<real_t> new_I_A;
    std::vector<real_t> new_I_C;
    std::vector<real_t> new_ICU_D_conf;
    std::vector<real_t> new_ICU_D_unconf;
    std::vector<real_t> new_ICU_pre_conf;
    std::vector<real_t> new_ICU_pre_unconf;
    std::vector<real_t> new_ICU_W_D_conf;
    std::vector<real_t> new_ICU_W_D_unconf;
    std::vector<real_t> new_ICU_W_R_conf;
    std::vector<real_t> new_ICU_W_R_unconf;
    std::vector<real_t> new_R;
    std::vector<real_t> new_S;
    std::vector<real_t> new_T_PCR_neg;
    std::vector<real_t> new_T_PCR_pos;
    std::vector<real_t> new_T_PCR_pre;
    std::vector<real_t> new_T_sero_neg;
    std::vector<real_t> new_T_sero_pos;
    std::vector<real_t> new_T_sero_pre;
    std::vector<real_t> new_W_D_conf;
    std::vector<real_t> new_W_D_unconf;
    std::vector<real_t> new_W_R_conf;
    std::vector<real_t> new_W_R_unconf;
    int offset_variable_cum_admit_by_age;
    int offset_variable_cum_n_E_vaccinated;
    int offset_variable_cum_n_I_A_vaccinated;
    int offset_variable_cum_n_R_vaccinated;
    int offset_variable_cum_n_S_vaccinated;
    int offset_variable_cum_n_vaccinated;
    int offset_variable_D_comm;
    int offset_variable_D_hosp;
    int offset_variable_E;
    int offset_variable_G_D;
    int offset_variable_H_D_conf;
    int offset_variable_H_D_unconf;
    int offset_variable_H_R_conf;
    int offset_variable_H_R_unconf;
    int offset_variable_I_A;
    int offset_variable_I_C;
    int offset_variable_ICU_D_conf;
    int offset_variable_ICU_D_unconf;
    int offset_variable_ICU_pre_conf;
    int offset_variable_ICU_pre_unconf;
    int offset_variable_ICU_W_D_conf;
    int offset_variable_ICU_W_D_unconf;
    int offset_variable_ICU_W_R_conf;
    int offset_variable_ICU_W_R_unconf;
    int offset_variable_N_tot;
    int offset_variable_R;
    int offset_variable_S;
    int offset_variable_T_PCR_neg;
    int offset_variable_T_PCR_pos;
    int offset_variable_T_PCR_pre;
    int offset_variable_T_sero_neg;
    int offset_variable_T_sero_pos;
    int offset_variable_T_sero_pre;
    int offset_variable_W_D_conf;
    int offset_variable_W_D_unconf;
    int offset_variable_W_R_conf;
    int offset_variable_W_R_unconf;
    std::vector<real_t> p_C;
    std::vector<real_t> p_E_next_vacc_class;
    real_t p_E_progress;
    std::vector<real_t> p_G_D_by_age;
    real_t p_G_D_progress;
    std::vector<real_t> p_G_D_step;
    std::vector<real_t> p_H_by_age;
    std::vector<real_t> p_H_D_by_age;
    real_t p_H_D_progress;
    std::vector<real_t> p_H_D_step;
    real_t p_H_R_progress;
    std::vector<real_t> p_H_step;
    std::vector<real_t> p_I_A_next_vacc_class;
    real_t p_I_A_progress;
    real_t p_I_C_progress;
    std::vector<real_t> p_ICU_by_age;
    std::vector<real_t> p_ICU_D_by_age;
    real_t p_ICU_D_progress;
    std::vector<real_t> p_ICU_D_step;
    real_t p_ICU_pre_progress;
    std::vector<real_t> p_ICU_step;
    real_t p_ICU_W_D_progress;
    real_t p_ICU_W_R_progress;
    std::vector<real_t> p_R_next_vacc_class;
    std::vector<real_t> p_RS;
    std::vector<real_t> p_S_next_vacc_class;
    std::vector<real_t> p_SE;
    std::vector<real_t> p_sero_pos;
    real_t p_sero_pre_1;
    std::vector<real_t> p_star_by_age;
    std::vector<real_t> p_star_step;
    real_t p_T_PCR_pos_progress;
    real_t p_T_PCR_pre_progress;
    real_t p_T_sero_pos_progress;
    std::vector<real_t> p_T_sero_pre_progress;
    real_t p_test;
    std::vector<real_t> p_W_D_by_age;
    real_t p_W_D_progress;
    std::vector<real_t> p_W_D_step;
    real_t p_W_R_progress;
    std::vector<real_t> psi_G_D;
    std::vector<real_t> psi_H;
    std::vector<real_t> psi_H_D;
    std::vector<real_t> psi_ICU;
    std::vector<real_t> psi_ICU_D;
    std::vector<real_t> psi_star;
    std::vector<real_t> psi_W_D;
    std::vector<real_t> rel_p_hosp_if_sympt;
    std::vector<real_t> rel_p_sympt;
    std::vector<real_t> rel_susceptibility;
    std::vector<real_t> s_ij;
    std::vector<real_t> strain_seed_step;
    std::vector<real_t> strain_transmission;
    real_t vaccine_daily_doses;
    std::vector<real_t> vaccine_n_candidates;
    std::vector<real_t> vaccine_population_possible;
    std::vector<real_t> vaccine_population_reluctant;
    std::vector<real_t> vaccine_progression_rate;
    std::vector<real_t> vaccine_progression_rate_base;
    std::vector<real_t> waning_rate;
  };
  carehomes(const init_t& data): internal(data) {
  }
  size_t size() {
    return 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf + internal.dim_W_D_unconf + internal.dim_W_D_conf + internal.dim_T_sero_pre + internal.dim_T_sero_pos + internal.dim_T_PCR_pre + internal.dim_T_PCR_pos;
  }
  std::vector<real_t> initial(size_t step) {
    std::vector<real_t> state(17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf + internal.dim_W_D_unconf + internal.dim_W_D_conf + internal.dim_T_sero_pre + internal.dim_T_sero_pos + internal.dim_T_PCR_pre + internal.dim_T_PCR_pos);
    state[0] = internal.initial_time;
    state[1] = internal.initial_cum_infections;
    state[2] = internal.initial_cum_admit_conf;
    state[3] = internal.initial_cum_new_conf;
    state[4] = internal.initial_beta_out;
    state[5] = internal.initial_N_tot2;
    state[6] = internal.initial_N_tot3;
    state[7] = internal.initial_ICU_tot;
    state[8] = internal.initial_general_tot;
    state[9] = internal.initial_hosp_tot;
    state[10] = internal.initial_D_hosp_tot;
    state[11] = internal.initial_D_comm_tot;
    state[12] = internal.initial_D_tot;
    state[13] = internal.initial_sero_pos;
    state[14] = internal.initial_cum_sympt_cases;
    state[15] = internal.initial_cum_sympt_cases_over25;
    state[16] = internal.initial_react_pos;
    std::copy(internal.initial_cum_infections_per_strain.begin(), internal.initial_cum_infections_per_strain.end(), state.begin() + 17);
    std::copy(internal.initial_D_hosp.begin(), internal.initial_D_hosp.end(), state.begin() + internal.offset_variable_D_hosp);
    std::copy(internal.initial_D_comm.begin(), internal.initial_D_comm.end(), state.begin() + internal.offset_variable_D_comm);
    std::copy(internal.initial_cum_admit_by_age.begin(), internal.initial_cum_admit_by_age.end(), state.begin() + internal.offset_variable_cum_admit_by_age);
    std::copy(internal.initial_N_tot.begin(), internal.initial_N_tot.end(), state.begin() + internal.offset_variable_N_tot);
    std::copy(internal.initial_cum_n_S_vaccinated.begin(), internal.initial_cum_n_S_vaccinated.end(), state.begin() + internal.offset_variable_cum_n_S_vaccinated);
    std::copy(internal.initial_cum_n_E_vaccinated.begin(), internal.initial_cum_n_E_vaccinated.end(), state.begin() + internal.offset_variable_cum_n_E_vaccinated);
    std::copy(internal.initial_cum_n_I_A_vaccinated.begin(), internal.initial_cum_n_I_A_vaccinated.end(), state.begin() + internal.offset_variable_cum_n_I_A_vaccinated);
    std::copy(internal.initial_cum_n_R_vaccinated.begin(), internal.initial_cum_n_R_vaccinated.end(), state.begin() + internal.offset_variable_cum_n_R_vaccinated);
    std::copy(internal.initial_cum_n_vaccinated.begin(), internal.initial_cum_n_vaccinated.end(), state.begin() + internal.offset_variable_cum_n_vaccinated);
    std::copy(internal.initial_S.begin(), internal.initial_S.end(), state.begin() + internal.offset_variable_S);
    std::copy(internal.initial_T_sero_neg.begin(), internal.initial_T_sero_neg.end(), state.begin() + internal.offset_variable_T_sero_neg);
    std::copy(internal.initial_R.begin(), internal.initial_R.end(), state.begin() + internal.offset_variable_R);
    std::copy(internal.initial_T_PCR_neg.begin(), internal.initial_T_PCR_neg.end(), state.begin() + internal.offset_variable_T_PCR_neg);
    std::copy(internal.initial_E.begin(), internal.initial_E.end(), state.begin() + internal.offset_variable_E);
    std::copy(internal.initial_I_A.begin(), internal.initial_I_A.end(), state.begin() + internal.offset_variable_I_A);
    std::copy(internal.initial_I_C.begin(), internal.initial_I_C.end(), state.begin() + internal.offset_variable_I_C);
    std::copy(internal.initial_G_D.begin(), internal.initial_G_D.end(), state.begin() + internal.offset_variable_G_D);
    std::copy(internal.initial_ICU_pre_unconf.begin(), internal.initial_ICU_pre_unconf.end(), state.begin() + internal.offset_variable_ICU_pre_unconf);
    std::copy(internal.initial_ICU_pre_conf.begin(), internal.initial_ICU_pre_conf.end(), state.begin() + internal.offset_variable_ICU_pre_conf);
    std::copy(internal.initial_H_R_unconf.begin(), internal.initial_H_R_unconf.end(), state.begin() + internal.offset_variable_H_R_unconf);
    std::copy(internal.initial_H_R_conf.begin(), internal.initial_H_R_conf.end(), state.begin() + internal.offset_variable_H_R_conf);
    std::copy(internal.initial_H_D_unconf.begin(), internal.initial_H_D_unconf.end(), state.begin() + internal.offset_variable_H_D_unconf);
    std::copy(internal.initial_H_D_conf.begin(), internal.initial_H_D_conf.end(), state.begin() + internal.offset_variable_H_D_conf);
    std::copy(internal.initial_ICU_W_R_unconf.begin(), internal.initial_ICU_W_R_unconf.end(), state.begin() + internal.offset_variable_ICU_W_R_unconf);
    std::copy(internal.initial_ICU_W_R_conf.begin(), internal.initial_ICU_W_R_conf.end(), state.begin() + internal.offset_variable_ICU_W_R_conf);
    std::copy(internal.initial_ICU_W_D_unconf.begin(), internal.initial_ICU_W_D_unconf.end(), state.begin() + internal.offset_variable_ICU_W_D_unconf);
    std::copy(internal.initial_ICU_W_D_conf.begin(), internal.initial_ICU_W_D_conf.end(), state.begin() + internal.offset_variable_ICU_W_D_conf);
    std::copy(internal.initial_ICU_D_unconf.begin(), internal.initial_ICU_D_unconf.end(), state.begin() + internal.offset_variable_ICU_D_unconf);
    std::copy(internal.initial_ICU_D_conf.begin(), internal.initial_ICU_D_conf.end(), state.begin() + internal.offset_variable_ICU_D_conf);
    std::copy(internal.initial_W_R_unconf.begin(), internal.initial_W_R_unconf.end(), state.begin() + internal.offset_variable_W_R_unconf);
    std::copy(internal.initial_W_R_conf.begin(), internal.initial_W_R_conf.end(), state.begin() + internal.offset_variable_W_R_conf);
    std::copy(internal.initial_W_D_unconf.begin(), internal.initial_W_D_unconf.end(), state.begin() + internal.offset_variable_W_D_unconf);
    std::copy(internal.initial_W_D_conf.begin(), internal.initial_W_D_conf.end(), state.begin() + internal.offset_variable_W_D_conf);
    std::copy(internal.initial_T_sero_pre.begin(), internal.initial_T_sero_pre.end(), state.begin() + internal.offset_variable_T_sero_pre);
    std::copy(internal.initial_T_sero_pos.begin(), internal.initial_T_sero_pos.end(), state.begin() + internal.offset_variable_T_sero_pos);
    std::copy(internal.initial_T_PCR_pre.begin(), internal.initial_T_PCR_pre.end(), state.begin() + internal.offset_variable_T_PCR_pre);
    std::copy(internal.initial_T_PCR_pos.begin(), internal.initial_T_PCR_pos.end(), state.begin() + internal.offset_variable_T_PCR_pos);
    return state;
  }
  #ifdef __NVCC__
  __device__
  #endif
  void update(size_t step, const real_t * state, dust::rng_state_t<real_t>& rng_state, real_t * state_next) {
    const real_t * cum_n_S_vaccinated = state + internal.offset_variable_cum_n_S_vaccinated;
    const real_t * cum_n_E_vaccinated = state + internal.offset_variable_cum_n_E_vaccinated;
    const real_t * cum_n_I_A_vaccinated = state + internal.offset_variable_cum_n_I_A_vaccinated;
    const real_t * cum_n_R_vaccinated = state + internal.offset_variable_cum_n_R_vaccinated;
    const real_t * S = state + internal.offset_variable_S;
    const real_t * E = state + internal.offset_variable_E;
    const real_t * I_A = state + internal.offset_variable_I_A;
    const real_t * I_C = state + internal.offset_variable_I_C;
    const real_t * G_D = state + internal.offset_variable_G_D;
    const real_t * ICU_pre_unconf = state + internal.offset_variable_ICU_pre_unconf;
    const real_t * ICU_pre_conf = state + internal.offset_variable_ICU_pre_conf;
    const real_t * H_R_unconf = state + internal.offset_variable_H_R_unconf;
    const real_t * H_R_conf = state + internal.offset_variable_H_R_conf;
    const real_t * H_D_unconf = state + internal.offset_variable_H_D_unconf;
    const real_t * H_D_conf = state + internal.offset_variable_H_D_conf;
    const real_t * ICU_W_R_unconf = state + internal.offset_variable_ICU_W_R_unconf;
    const real_t * ICU_W_R_conf = state + internal.offset_variable_ICU_W_R_conf;
    const real_t * ICU_W_D_unconf = state + internal.offset_variable_ICU_W_D_unconf;
    const real_t * ICU_W_D_conf = state + internal.offset_variable_ICU_W_D_conf;
    const real_t * ICU_D_unconf = state + internal.offset_variable_ICU_D_unconf;
    const real_t * ICU_D_conf = state + internal.offset_variable_ICU_D_conf;
    const real_t * W_R_unconf = state + internal.offset_variable_W_R_unconf;
    const real_t * W_R_conf = state + internal.offset_variable_W_R_conf;
    const real_t * W_D_unconf = state + internal.offset_variable_W_D_unconf;
    const real_t * W_D_conf = state + internal.offset_variable_W_D_conf;
    const real_t * T_sero_pre = state + internal.offset_variable_T_sero_pre;
    const real_t * T_sero_pos = state + internal.offset_variable_T_sero_pos;
    const real_t * T_sero_neg = state + internal.offset_variable_T_sero_neg;
    const real_t * R = state + internal.offset_variable_R;
    const real_t * D_hosp = state + internal.offset_variable_D_hosp;
    const real_t * D_comm = state + internal.offset_variable_D_comm;
    const real_t * T_PCR_pre = state + internal.offset_variable_T_PCR_pre;
    const real_t * T_PCR_pos = state + internal.offset_variable_T_PCR_pos;
    const real_t * T_PCR_neg = state + internal.offset_variable_T_PCR_neg;
    const real_t cum_admit_conf = state[2];
    const real_t cum_new_conf = state[3];
    const real_t * cum_admit_by_age = state + internal.offset_variable_cum_admit_by_age;
    const real_t cum_infections = state[1];
    const real_t * cum_infections_per_strain = state + 17;
    const real_t cum_sympt_cases = state[14];
    const real_t cum_sympt_cases_over25 = state[15];
    state_next[5] = odin_sum1(S, 0, internal.dim_S) + odin_sum1(T_sero_pre, 0, internal.dim_T_sero_pre) + odin_sum1(T_sero_pos, 0, internal.dim_T_sero_pos) + odin_sum1(T_sero_neg, 0, internal.dim_T_sero_neg) + odin_sum1(E, 0, internal.dim_E);
    state_next[6] = odin_sum1(S, 0, internal.dim_S) + odin_sum1(T_PCR_pre, 0, internal.dim_T_PCR_pre) + odin_sum1(T_PCR_pos, 0, internal.dim_T_PCR_pos) + odin_sum1(T_PCR_neg, 0, internal.dim_T_PCR_neg);
    state_next[0] = (step + 1) * internal.dt;
    real_t beta = (static_cast<int>(step) >= internal.dim_beta_step ? internal.beta_step[internal.dim_beta_step - 1] : internal.beta_step[step + 1 - 1]);
    real_t p_G_D = (static_cast<int>(step) >= internal.dim_p_G_D_step ? internal.p_G_D_step[internal.dim_p_G_D_step - 1] : internal.p_G_D_step[step + 1 - 1]);
    real_t p_H = (static_cast<int>(step) >= internal.dim_p_H_step ? internal.p_H_step[internal.dim_p_H_step - 1] : internal.p_H_step[step + 1 - 1]);
    real_t p_H_D = (static_cast<int>(step) >= internal.dim_p_H_D_step ? internal.p_H_D_step[internal.dim_p_H_D_step - 1] : internal.p_H_D_step[step + 1 - 1]);
    real_t p_ICU = (static_cast<int>(step) >= internal.dim_p_ICU_step ? internal.p_ICU_step[internal.dim_p_ICU_step - 1] : internal.p_ICU_step[step + 1 - 1]);
    real_t p_ICU_D = (static_cast<int>(step) >= internal.dim_p_ICU_D_step ? internal.p_ICU_D_step[internal.dim_p_ICU_D_step - 1] : internal.p_ICU_D_step[step + 1 - 1]);
    real_t p_star = (static_cast<int>(step) >= internal.dim_p_star_step ? internal.p_star_step[internal.dim_p_star_step - 1] : internal.p_star_step[step + 1 - 1]);
    real_t p_W_D = (static_cast<int>(step) >= internal.dim_p_W_D_step ? internal.p_W_D_step[internal.dim_p_W_D_step - 1] : internal.p_W_D_step[step + 1 - 1]);
    real_t strain_seed = ((static_cast<int>(step) >= internal.dim_strain_seed_step ? internal.strain_seed_step[internal.dim_strain_seed_step - 1] : internal.strain_seed_step[step + 1 - 1]));
    for (int i = 1; i <= internal.dim_p_G_D_by_age; ++i) {
      internal.p_G_D_by_age[i - 1] = p_G_D * internal.psi_G_D[i - 1];
    }
    for (int i = 1; i <= internal.dim_p_H_by_age; ++i) {
      internal.p_H_by_age[i - 1] = p_H * internal.psi_H[i - 1];
    }
    for (int i = 1; i <= internal.dim_p_H_D_by_age; ++i) {
      internal.p_H_D_by_age[i - 1] = p_H_D * internal.psi_H_D[i - 1];
    }
    for (int i = 1; i <= internal.dim_p_ICU_by_age; ++i) {
      internal.p_ICU_by_age[i - 1] = p_ICU * internal.psi_ICU[i - 1];
    }
    for (int i = 1; i <= internal.dim_p_ICU_D_by_age; ++i) {
      internal.p_ICU_D_by_age[i - 1] = p_ICU_D * internal.psi_ICU_D[i - 1];
    }
    for (int i = 1; i <= internal.dim_p_star_by_age; ++i) {
      internal.p_star_by_age[i - 1] = p_star * internal.psi_star[i - 1];
    }
    for (int i = 1; i <= internal.dim_p_W_D_by_age; ++i) {
      internal.p_W_D_by_age[i - 1] = p_W_D * internal.psi_W_D[i - 1];
    }
    state_next[4] = beta;
    for (int i = 1; i <= internal.dim_cum_n_vaccinated_1; ++i) {
      for (int j = 1; j <= internal.dim_cum_n_vaccinated_2; ++j) {
        state_next[internal.offset_variable_cum_n_vaccinated + i - 1 + internal.dim_cum_n_vaccinated_1 * (j - 1)] = cum_n_S_vaccinated[internal.dim_cum_n_S_vaccinated_1 * (j - 1) + i - 1] + cum_n_E_vaccinated[internal.dim_cum_n_E_vaccinated_1 * (j - 1) + i - 1] + cum_n_I_A_vaccinated[internal.dim_cum_n_I_A_vaccinated_1 * (j - 1) + i - 1] + cum_n_R_vaccinated[internal.dim_cum_n_R_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_N_tot; ++i) {
      state_next[internal.offset_variable_N_tot + i - 1] = odin_sum2(S, i - 1, i, 0, internal.dim_S_2, internal.dim_S_1) + odin_sum3(R, i - 1, i, 0, internal.dim_R_2, 0, internal.dim_R_3, internal.dim_R_1, internal.dim_R_12) + D_hosp[i - 1] + odin_sum4(E, i - 1, i, 0, internal.dim_E_2, 0, internal.dim_E_3, 0, internal.dim_E_4, internal.dim_E_1, internal.dim_E_12, internal.dim_E_123) + odin_sum4(I_A, i - 1, i, 0, internal.dim_I_A_2, 0, internal.dim_I_A_3, 0, internal.dim_I_A_4, internal.dim_I_A_1, internal.dim_I_A_12, internal.dim_I_A_123) + odin_sum4(I_C, i - 1, i, 0, internal.dim_I_C_2, 0, internal.dim_I_C_3, 0, internal.dim_I_C_4, internal.dim_I_C_1, internal.dim_I_C_12, internal.dim_I_C_123) + odin_sum4(ICU_pre_conf, i - 1, i, 0, internal.dim_ICU_pre_conf_2, 0, internal.dim_ICU_pre_conf_3, 0, internal.dim_ICU_pre_conf_4, internal.dim_ICU_pre_conf_1, internal.dim_ICU_pre_conf_12, internal.dim_ICU_pre_conf_123) + odin_sum4(ICU_pre_unconf, i - 1, i, 0, internal.dim_ICU_pre_unconf_2, 0, internal.dim_ICU_pre_unconf_3, 0, internal.dim_ICU_pre_unconf_4, internal.dim_ICU_pre_unconf_1, internal.dim_ICU_pre_unconf_12, internal.dim_ICU_pre_unconf_123) + odin_sum4(H_R_conf, i - 1, i, 0, internal.dim_H_R_conf_2, 0, internal.dim_H_R_conf_3, 0, internal.dim_H_R_conf_4, internal.dim_H_R_conf_1, internal.dim_H_R_conf_12, internal.dim_H_R_conf_123) + odin_sum4(H_R_unconf, i - 1, i, 0, internal.dim_H_R_unconf_2, 0, internal.dim_H_R_unconf_3, 0, internal.dim_H_R_unconf_4, internal.dim_H_R_unconf_1, internal.dim_H_R_unconf_12, internal.dim_H_R_unconf_123) + odin_sum4(H_D_conf, i - 1, i, 0, internal.dim_H_D_conf_2, 0, internal.dim_H_D_conf_3, 0, internal.dim_H_D_conf_4, internal.dim_H_D_conf_1, internal.dim_H_D_conf_12, internal.dim_H_D_conf_123) + odin_sum4(H_D_unconf, i - 1, i, 0, internal.dim_H_D_unconf_2, 0, internal.dim_H_D_unconf_3, 0, internal.dim_H_D_unconf_4, internal.dim_H_D_unconf_1, internal.dim_H_D_unconf_12, internal.dim_H_D_unconf_123) + odin_sum4(ICU_W_R_conf, i - 1, i, 0, internal.dim_ICU_W_R_conf_2, 0, internal.dim_ICU_W_R_conf_3, 0, internal.dim_ICU_W_R_conf_4, internal.dim_ICU_W_R_conf_1, internal.dim_ICU_W_R_conf_12, internal.dim_ICU_W_R_conf_123) + odin_sum4(ICU_W_R_unconf, i - 1, i, 0, internal.dim_ICU_W_R_unconf_2, 0, internal.dim_ICU_W_R_unconf_3, 0, internal.dim_ICU_W_R_unconf_4, internal.dim_ICU_W_R_unconf_1, internal.dim_ICU_W_R_unconf_12, internal.dim_ICU_W_R_unconf_123) + odin_sum4(ICU_W_D_conf, i - 1, i, 0, internal.dim_ICU_W_D_conf_2, 0, internal.dim_ICU_W_D_conf_3, 0, internal.dim_ICU_W_D_conf_4, internal.dim_ICU_W_D_conf_1, internal.dim_ICU_W_D_conf_12, internal.dim_ICU_W_D_conf_123) + odin_sum4(ICU_W_D_unconf, i - 1, i, 0, internal.dim_ICU_W_D_unconf_2, 0, internal.dim_ICU_W_D_unconf_3, 0, internal.dim_ICU_W_D_unconf_4, internal.dim_ICU_W_D_unconf_1, internal.dim_ICU_W_D_unconf_12, internal.dim_ICU_W_D_unconf_123) + odin_sum4(ICU_D_conf, i - 1, i, 0, internal.dim_ICU_D_conf_2, 0, internal.dim_ICU_D_conf_3, 0, internal.dim_ICU_D_conf_4, internal.dim_ICU_D_conf_1, internal.dim_ICU_D_conf_12, internal.dim_ICU_D_conf_123) + odin_sum4(ICU_D_unconf, i - 1, i, 0, internal.dim_ICU_D_unconf_2, 0, internal.dim_ICU_D_unconf_3, 0, internal.dim_ICU_D_unconf_4, internal.dim_ICU_D_unconf_1, internal.dim_ICU_D_unconf_12, internal.dim_ICU_D_unconf_123) + odin_sum4(W_R_conf, i - 1, i, 0, internal.dim_W_R_conf_2, 0, internal.dim_W_R_conf_3, 0, internal.dim_W_R_conf_4, internal.dim_W_R_conf_1, internal.dim_W_R_conf_12, internal.dim_W_R_conf_123) + odin_sum4(W_R_unconf, i - 1, i, 0, internal.dim_W_R_unconf_2, 0, internal.dim_W_R_unconf_3, 0, internal.dim_W_R_unconf_4, internal.dim_W_R_unconf_1, internal.dim_W_R_unconf_12, internal.dim_W_R_unconf_123) + odin_sum4(W_D_conf, i - 1, i, 0, internal.dim_W_D_conf_2, 0, internal.dim_W_D_conf_3, 0, internal.dim_W_D_conf_4, internal.dim_W_D_conf_1, internal.dim_W_D_conf_12, internal.dim_W_D_conf_123) + odin_sum4(W_D_unconf, i - 1, i, 0, internal.dim_W_D_unconf_2, 0, internal.dim_W_D_unconf_3, 0, internal.dim_W_D_unconf_4, internal.dim_W_D_unconf_1, internal.dim_W_D_unconf_12, internal.dim_W_D_unconf_123) + odin_sum4(G_D, i - 1, i, 0, internal.dim_G_D_2, 0, internal.dim_G_D_3, 0, internal.dim_G_D_4, internal.dim_G_D_1, internal.dim_G_D_12, internal.dim_G_D_123) + D_comm[i - 1];
    }
    for (int i = 1; i <= internal.dim_vaccine_n_candidates; ++i) {
      internal.vaccine_n_candidates[i - 1] = S[internal.dim_S_1 * 0 + i - 1] + odin_sum4(E, i - 1, i, 0, internal.dim_E_2, 0, internal.dim_E_3, 0, 1, internal.dim_E_1, internal.dim_E_12, internal.dim_E_123) + odin_sum4(I_A, i - 1, i, 0, internal.dim_I_A_2, 0, internal.dim_I_A_3, 0, 1, internal.dim_I_A_1, internal.dim_I_A_12, internal.dim_I_A_123) + odin_sum3(R, i - 1, i, 0, internal.dim_R_2, 0, 1, internal.dim_R_1, internal.dim_R_12);
    }
    for (int i = 1; i <= internal.dim_I_with_diff_trans_1; ++i) {
      for (int j = 1; j <= internal.dim_I_with_diff_trans_2; ++j) {
        for (int k = 1; k <= internal.dim_I_with_diff_trans_3; ++k) {
          internal.I_with_diff_trans[i - 1 + internal.dim_I_with_diff_trans_1 * (j - 1) + internal.dim_I_with_diff_trans_12 * (k - 1)] = internal.strain_transmission[j - 1] * (odin_sum4(I_A, i - 1, i, j - 1, j, 0, internal.dim_I_A_3, k - 1, k, internal.dim_I_A_1, internal.dim_I_A_12, internal.dim_I_A_123) + odin_sum4(I_C, i - 1, i, j - 1, j, 0, internal.dim_I_C_3, k - 1, k, internal.dim_I_C_1, internal.dim_I_C_12, internal.dim_I_C_123) + internal.hosp_transmission * (odin_sum4(ICU_pre_unconf, i - 1, i, j - 1, j, 0, internal.dim_ICU_pre_unconf_3, k - 1, k, internal.dim_ICU_pre_unconf_1, internal.dim_ICU_pre_unconf_12, internal.dim_ICU_pre_unconf_123) + odin_sum4(ICU_pre_conf, i - 1, i, j - 1, j, 0, internal.dim_ICU_pre_conf_3, k - 1, k, internal.dim_ICU_pre_conf_1, internal.dim_ICU_pre_conf_12, internal.dim_ICU_pre_conf_123) + odin_sum4(H_R_unconf, i - 1, i, j - 1, j, 0, internal.dim_H_R_unconf_3, k - 1, k, internal.dim_H_R_unconf_1, internal.dim_H_R_unconf_12, internal.dim_H_R_unconf_123) + odin_sum4(H_R_conf, i - 1, i, j - 1, j, 0, internal.dim_H_R_conf_3, k - 1, k, internal.dim_H_R_conf_1, internal.dim_H_R_conf_12, internal.dim_H_R_conf_123) + odin_sum4(H_D_unconf, i - 1, i, j - 1, j, 0, internal.dim_H_D_unconf_3, k - 1, k, internal.dim_H_D_unconf_1, internal.dim_H_D_unconf_12, internal.dim_H_D_unconf_123) + odin_sum4(H_D_conf, i - 1, i, j - 1, j, 0, internal.dim_H_D_conf_3, k - 1, k, internal.dim_H_D_conf_1, internal.dim_H_D_conf_12, internal.dim_H_D_conf_123)) + internal.ICU_transmission * (odin_sum4(ICU_W_R_unconf, i - 1, i, j - 1, j, 0, internal.dim_ICU_W_R_unconf_3, k - 1, k, internal.dim_ICU_W_R_unconf_1, internal.dim_ICU_W_R_unconf_12, internal.dim_ICU_W_R_unconf_123) + odin_sum4(ICU_W_R_conf, i - 1, i, j - 1, j, 0, internal.dim_ICU_W_R_conf_3, k - 1, k, internal.dim_ICU_W_R_conf_1, internal.dim_ICU_W_R_conf_12, internal.dim_ICU_W_R_conf_123) + odin_sum4(ICU_W_D_unconf, i - 1, i, j - 1, j, 0, internal.dim_ICU_W_D_unconf_3, k - 1, k, internal.dim_ICU_W_D_unconf_1, internal.dim_ICU_W_D_unconf_12, internal.dim_ICU_W_D_unconf_123) + odin_sum4(ICU_W_D_conf, i - 1, i, j - 1, j, 0, internal.dim_ICU_W_D_conf_3, k - 1, k, internal.dim_ICU_W_D_conf_1, internal.dim_ICU_W_D_conf_12, internal.dim_ICU_W_D_conf_123) + odin_sum4(ICU_D_unconf, i - 1, i, j - 1, j, 0, internal.dim_ICU_D_unconf_3, k - 1, k, internal.dim_ICU_D_unconf_1, internal.dim_ICU_D_unconf_12, internal.dim_ICU_D_unconf_123) + odin_sum4(ICU_D_conf, i - 1, i, j - 1, j, 0, internal.dim_ICU_D_conf_3, k - 1, k, internal.dim_ICU_D_conf_1, internal.dim_ICU_D_conf_12, internal.dim_ICU_D_conf_123)) + internal.G_D_transmission * odin_sum4(G_D, i - 1, i, j - 1, j, 0, internal.dim_G_D_3, k - 1, k, internal.dim_G_D_1, internal.dim_G_D_12, internal.dim_G_D_123));
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_E_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_E_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_E_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_E_progress_4; ++l) {
            internal.n_E_progress[i - 1 + internal.dim_n_E_progress_1 * (j - 1) + internal.dim_n_E_progress_12 * (k - 1) + internal.dim_n_E_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(E[internal.dim_E_123 * (l - 1) + internal.dim_E_12 * (k - 1) + internal.dim_E_1 * (j - 1) + i - 1]), internal.p_E_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_G_D_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_G_D_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_G_D_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_G_D_progress_4; ++l) {
            internal.n_G_D_progress[i - 1 + internal.dim_n_G_D_progress_1 * (j - 1) + internal.dim_n_G_D_progress_12 * (k - 1) + internal.dim_n_G_D_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(G_D[internal.dim_G_D_123 * (l - 1) + internal.dim_G_D_12 * (k - 1) + internal.dim_G_D_1 * (j - 1) + i - 1]), internal.p_G_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_H_D_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_H_D_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_H_D_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_H_D_conf_progress_4; ++l) {
            internal.n_H_D_conf_progress[i - 1 + internal.dim_n_H_D_conf_progress_1 * (j - 1) + internal.dim_n_H_D_conf_progress_12 * (k - 1) + internal.dim_n_H_D_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(H_D_conf[internal.dim_H_D_conf_123 * (l - 1) + internal.dim_H_D_conf_12 * (k - 1) + internal.dim_H_D_conf_1 * (j - 1) + i - 1]), internal.p_H_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_H_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_H_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_H_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_H_D_unconf_progress_4; ++l) {
            internal.n_H_D_unconf_progress[i - 1 + internal.dim_n_H_D_unconf_progress_1 * (j - 1) + internal.dim_n_H_D_unconf_progress_12 * (k - 1) + internal.dim_n_H_D_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(H_D_unconf[internal.dim_H_D_unconf_123 * (l - 1) + internal.dim_H_D_unconf_12 * (k - 1) + internal.dim_H_D_unconf_1 * (j - 1) + i - 1]), internal.p_H_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_H_R_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_H_R_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_H_R_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_H_R_conf_progress_4; ++l) {
            internal.n_H_R_conf_progress[i - 1 + internal.dim_n_H_R_conf_progress_1 * (j - 1) + internal.dim_n_H_R_conf_progress_12 * (k - 1) + internal.dim_n_H_R_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(H_R_conf[internal.dim_H_R_conf_123 * (l - 1) + internal.dim_H_R_conf_12 * (k - 1) + internal.dim_H_R_conf_1 * (j - 1) + i - 1]), internal.p_H_R_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_H_R_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_H_R_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_H_R_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_H_R_unconf_progress_4; ++l) {
            internal.n_H_R_unconf_progress[i - 1 + internal.dim_n_H_R_unconf_progress_1 * (j - 1) + internal.dim_n_H_R_unconf_progress_12 * (k - 1) + internal.dim_n_H_R_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(H_R_unconf[internal.dim_H_R_unconf_123 * (l - 1) + internal.dim_H_R_unconf_12 * (k - 1) + internal.dim_H_R_unconf_1 * (j - 1) + i - 1]), internal.p_H_R_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_A_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_A_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_A_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_I_A_progress_4; ++l) {
            internal.n_I_A_progress[i - 1 + internal.dim_n_I_A_progress_1 * (j - 1) + internal.dim_n_I_A_progress_12 * (k - 1) + internal.dim_n_I_A_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(I_A[internal.dim_I_A_123 * (l - 1) + internal.dim_I_A_12 * (k - 1) + internal.dim_I_A_1 * (j - 1) + i - 1]), internal.p_I_A_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_I_C_progress_4; ++l) {
            internal.n_I_C_progress[i - 1 + internal.dim_n_I_C_progress_1 * (j - 1) + internal.dim_n_I_C_progress_12 * (k - 1) + internal.dim_n_I_C_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(I_C[internal.dim_I_C_123 * (l - 1) + internal.dim_I_C_12 * (k - 1) + internal.dim_I_C_1 * (j - 1) + i - 1]), internal.p_I_C_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_D_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_D_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_D_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_D_conf_progress_4; ++l) {
            internal.n_ICU_D_conf_progress[i - 1 + internal.dim_n_ICU_D_conf_progress_1 * (j - 1) + internal.dim_n_ICU_D_conf_progress_12 * (k - 1) + internal.dim_n_ICU_D_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_D_conf[internal.dim_ICU_D_conf_123 * (l - 1) + internal.dim_ICU_D_conf_12 * (k - 1) + internal.dim_ICU_D_conf_1 * (j - 1) + i - 1]), internal.p_ICU_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_D_unconf_progress_4; ++l) {
            internal.n_ICU_D_unconf_progress[i - 1 + internal.dim_n_ICU_D_unconf_progress_1 * (j - 1) + internal.dim_n_ICU_D_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_D_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_D_unconf[internal.dim_ICU_D_unconf_123 * (l - 1) + internal.dim_ICU_D_unconf_12 * (k - 1) + internal.dim_ICU_D_unconf_1 * (j - 1) + i - 1]), internal.p_ICU_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_pre_conf_progress_4; ++l) {
            internal.n_ICU_pre_conf_progress[i - 1 + internal.dim_n_ICU_pre_conf_progress_1 * (j - 1) + internal.dim_n_ICU_pre_conf_progress_12 * (k - 1) + internal.dim_n_ICU_pre_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_pre_conf[internal.dim_ICU_pre_conf_123 * (l - 1) + internal.dim_ICU_pre_conf_12 * (k - 1) + internal.dim_ICU_pre_conf_1 * (j - 1) + i - 1]), internal.p_ICU_pre_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_pre_unconf_progress_4; ++l) {
            internal.n_ICU_pre_unconf_progress[i - 1 + internal.dim_n_ICU_pre_unconf_progress_1 * (j - 1) + internal.dim_n_ICU_pre_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_pre_unconf[internal.dim_ICU_pre_unconf_123 * (l - 1) + internal.dim_ICU_pre_unconf_12 * (k - 1) + internal.dim_ICU_pre_unconf_1 * (j - 1) + i - 1]), internal.p_ICU_pre_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_W_D_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_W_D_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_W_D_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_W_D_conf_progress_4; ++l) {
            internal.n_ICU_W_D_conf_progress[i - 1 + internal.dim_n_ICU_W_D_conf_progress_1 * (j - 1) + internal.dim_n_ICU_W_D_conf_progress_12 * (k - 1) + internal.dim_n_ICU_W_D_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_W_D_conf[internal.dim_ICU_W_D_conf_123 * (l - 1) + internal.dim_ICU_W_D_conf_12 * (k - 1) + internal.dim_ICU_W_D_conf_1 * (j - 1) + i - 1]), internal.p_ICU_W_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_W_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_W_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_W_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_W_D_unconf_progress_4; ++l) {
            internal.n_ICU_W_D_unconf_progress[i - 1 + internal.dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + internal.dim_n_ICU_W_D_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_W_D_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_W_D_unconf[internal.dim_ICU_W_D_unconf_123 * (l - 1) + internal.dim_ICU_W_D_unconf_12 * (k - 1) + internal.dim_ICU_W_D_unconf_1 * (j - 1) + i - 1]), internal.p_ICU_W_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_W_R_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_W_R_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_W_R_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_W_R_conf_progress_4; ++l) {
            internal.n_ICU_W_R_conf_progress[i - 1 + internal.dim_n_ICU_W_R_conf_progress_1 * (j - 1) + internal.dim_n_ICU_W_R_conf_progress_12 * (k - 1) + internal.dim_n_ICU_W_R_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_W_R_conf[internal.dim_ICU_W_R_conf_123 * (l - 1) + internal.dim_ICU_W_R_conf_12 * (k - 1) + internal.dim_ICU_W_R_conf_1 * (j - 1) + i - 1]), internal.p_ICU_W_R_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_W_R_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_W_R_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_W_R_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_W_R_unconf_progress_4; ++l) {
            internal.n_ICU_W_R_unconf_progress[i - 1 + internal.dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + internal.dim_n_ICU_W_R_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_W_R_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(ICU_W_R_unconf[internal.dim_ICU_W_R_unconf_123 * (l - 1) + internal.dim_ICU_W_R_unconf_12 * (k - 1) + internal.dim_ICU_W_R_unconf_1 * (j - 1) + i - 1]), internal.p_ICU_W_R_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_R_progress_tmp_1; ++i) {
      for (int j = 1; j <= internal.dim_n_R_progress_tmp_2; ++j) {
        for (int k = 1; k <= internal.dim_n_R_progress_tmp_3; ++k) {
          internal.n_R_progress_tmp[i - 1 + internal.dim_n_R_progress_tmp_1 * (j - 1) + internal.dim_n_R_progress_tmp_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(R[internal.dim_R_12 * (k - 1) + internal.dim_R_1 * (j - 1) + i - 1]), internal.p_RS[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_T_PCR_pos_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_T_PCR_pos_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_T_PCR_pos_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_T_PCR_pos_progress_4; ++l) {
            internal.n_T_PCR_pos_progress[i - 1 + internal.dim_n_T_PCR_pos_progress_1 * (j - 1) + internal.dim_n_T_PCR_pos_progress_12 * (k - 1) + internal.dim_n_T_PCR_pos_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(T_PCR_pos[internal.dim_T_PCR_pos_123 * (l - 1) + internal.dim_T_PCR_pos_12 * (k - 1) + internal.dim_T_PCR_pos_1 * (j - 1) + i - 1]), internal.p_T_PCR_pos_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_T_PCR_pre_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_T_PCR_pre_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_T_PCR_pre_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_T_PCR_pre_progress_4; ++l) {
            internal.n_T_PCR_pre_progress[i - 1 + internal.dim_n_T_PCR_pre_progress_1 * (j - 1) + internal.dim_n_T_PCR_pre_progress_12 * (k - 1) + internal.dim_n_T_PCR_pre_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(T_PCR_pre[internal.dim_T_PCR_pre_123 * (l - 1) + internal.dim_T_PCR_pre_12 * (k - 1) + internal.dim_T_PCR_pre_1 * (j - 1) + i - 1]), internal.p_T_PCR_pre_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_T_sero_pos_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_T_sero_pos_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_T_sero_pos_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_T_sero_pos_progress_4; ++l) {
            internal.n_T_sero_pos_progress[i - 1 + internal.dim_n_T_sero_pos_progress_1 * (j - 1) + internal.dim_n_T_sero_pos_progress_12 * (k - 1) + internal.dim_n_T_sero_pos_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(T_sero_pos[internal.dim_T_sero_pos_123 * (l - 1) + internal.dim_T_sero_pos_12 * (k - 1) + internal.dim_T_sero_pos_1 * (j - 1) + i - 1]), internal.p_T_sero_pos_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_W_D_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_W_D_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_W_D_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_W_D_conf_progress_4; ++l) {
            internal.n_W_D_conf_progress[i - 1 + internal.dim_n_W_D_conf_progress_1 * (j - 1) + internal.dim_n_W_D_conf_progress_12 * (k - 1) + internal.dim_n_W_D_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(W_D_conf[internal.dim_W_D_conf_123 * (l - 1) + internal.dim_W_D_conf_12 * (k - 1) + internal.dim_W_D_conf_1 * (j - 1) + i - 1]), internal.p_W_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_W_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_W_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_W_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_W_D_unconf_progress_4; ++l) {
            internal.n_W_D_unconf_progress[i - 1 + internal.dim_n_W_D_unconf_progress_1 * (j - 1) + internal.dim_n_W_D_unconf_progress_12 * (k - 1) + internal.dim_n_W_D_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(W_D_unconf[internal.dim_W_D_unconf_123 * (l - 1) + internal.dim_W_D_unconf_12 * (k - 1) + internal.dim_W_D_unconf_1 * (j - 1) + i - 1]), internal.p_W_D_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_W_R_conf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_W_R_conf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_W_R_conf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_W_R_conf_progress_4; ++l) {
            internal.n_W_R_conf_progress[i - 1 + internal.dim_n_W_R_conf_progress_1 * (j - 1) + internal.dim_n_W_R_conf_progress_12 * (k - 1) + internal.dim_n_W_R_conf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(W_R_conf[internal.dim_W_R_conf_123 * (l - 1) + internal.dim_W_R_conf_12 * (k - 1) + internal.dim_W_R_conf_1 * (j - 1) + i - 1]), internal.p_W_R_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_W_R_unconf_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_W_R_unconf_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_W_R_unconf_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_W_R_unconf_progress_4; ++l) {
            internal.n_W_R_unconf_progress[i - 1 + internal.dim_n_W_R_unconf_progress_1 * (j - 1) + internal.dim_n_W_R_unconf_progress_12 * (k - 1) + internal.dim_n_W_R_unconf_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(W_R_unconf[internal.dim_W_R_unconf_123 * (l - 1) + internal.dim_W_R_unconf_12 * (k - 1) + internal.dim_W_R_unconf_1 * (j - 1) + i - 1]), internal.p_W_R_progress);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_vaccine_population_possible; ++i) {
      internal.vaccine_population_possible[i - 1] = ((internal.vaccine_population_reluctant[i - 1] > internal.vaccine_n_candidates[i - 1] ? 0 : internal.vaccine_n_candidates[i - 1] - internal.vaccine_population_reluctant[i - 1]));
    }
    for (int i = 1; i <= internal.dim_aux_H_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_H_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_D_conf_4; ++l) {
            internal.aux_H_D_conf[i - 1 + internal.dim_aux_H_D_conf_1 * (j - 1) + internal.dim_aux_H_D_conf_12 * (k - 1) + internal.dim_aux_H_D_conf_123 * (l - 1)] = H_D_conf[internal.dim_H_D_conf_123 * (l - 1) + internal.dim_H_D_conf_12 * (k - 1) + internal.dim_H_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_D_conf_2; ++j) {
        for (int k = 2; k <= internal.k_H_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_D_conf_4; ++l) {
            internal.aux_H_D_conf[i - 1 + internal.dim_aux_H_D_conf_1 * (j - 1) + internal.dim_aux_H_D_conf_12 * (k - 1) + internal.dim_aux_H_D_conf_123 * (l - 1)] = internal.aux_H_D_conf[internal.dim_aux_H_D_conf_123 * (l - 1) + internal.dim_aux_H_D_conf_12 * (k - 1) + internal.dim_aux_H_D_conf_1 * (j - 1) + i - 1] + internal.n_H_D_conf_progress[internal.dim_n_H_D_conf_progress_123 * (l - 1) + internal.dim_n_H_D_conf_progress_12 * (k - 1 - 1) + internal.dim_n_H_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_D_conf_2; ++j) {
        for (int k = 1; k <= internal.k_H_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_D_conf_4; ++l) {
            internal.aux_H_D_conf[i - 1 + internal.dim_aux_H_D_conf_1 * (j - 1) + internal.dim_aux_H_D_conf_12 * (k - 1) + internal.dim_aux_H_D_conf_123 * (l - 1)] = internal.aux_H_D_conf[internal.dim_aux_H_D_conf_123 * (l - 1) + internal.dim_aux_H_D_conf_12 * (k - 1) + internal.dim_aux_H_D_conf_1 * (j - 1) + i - 1] - internal.n_H_D_conf_progress[internal.dim_n_H_D_conf_progress_123 * (l - 1) + internal.dim_n_H_D_conf_progress_12 * (k - 1) + internal.dim_n_H_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_H_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_D_unconf_4; ++l) {
            internal.aux_H_D_unconf[i - 1 + internal.dim_aux_H_D_unconf_1 * (j - 1) + internal.dim_aux_H_D_unconf_12 * (k - 1) + internal.dim_aux_H_D_unconf_123 * (l - 1)] = H_D_unconf[internal.dim_H_D_unconf_123 * (l - 1) + internal.dim_H_D_unconf_12 * (k - 1) + internal.dim_H_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_D_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_H_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_D_unconf_4; ++l) {
            internal.aux_H_D_unconf[i - 1 + internal.dim_aux_H_D_unconf_1 * (j - 1) + internal.dim_aux_H_D_unconf_12 * (k - 1) + internal.dim_aux_H_D_unconf_123 * (l - 1)] = internal.aux_H_D_unconf[internal.dim_aux_H_D_unconf_123 * (l - 1) + internal.dim_aux_H_D_unconf_12 * (k - 1) + internal.dim_aux_H_D_unconf_1 * (j - 1) + i - 1] + internal.n_H_D_unconf_progress[internal.dim_n_H_D_unconf_progress_123 * (l - 1) + internal.dim_n_H_D_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_H_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_H_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_D_unconf_4; ++l) {
            internal.aux_H_D_unconf[i - 1 + internal.dim_aux_H_D_unconf_1 * (j - 1) + internal.dim_aux_H_D_unconf_12 * (k - 1) + internal.dim_aux_H_D_unconf_123 * (l - 1)] = internal.aux_H_D_unconf[internal.dim_aux_H_D_unconf_123 * (l - 1) + internal.dim_aux_H_D_unconf_12 * (k - 1) + internal.dim_aux_H_D_unconf_1 * (j - 1) + i - 1] - internal.n_H_D_unconf_progress[internal.dim_n_H_D_unconf_progress_123 * (l - 1) + internal.dim_n_H_D_unconf_progress_12 * (k - 1) + internal.dim_n_H_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_H_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_R_conf_4; ++l) {
            internal.aux_H_R_conf[i - 1 + internal.dim_aux_H_R_conf_1 * (j - 1) + internal.dim_aux_H_R_conf_12 * (k - 1) + internal.dim_aux_H_R_conf_123 * (l - 1)] = H_R_conf[internal.dim_H_R_conf_123 * (l - 1) + internal.dim_H_R_conf_12 * (k - 1) + internal.dim_H_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_R_conf_2; ++j) {
        for (int k = 2; k <= internal.k_H_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_R_conf_4; ++l) {
            internal.aux_H_R_conf[i - 1 + internal.dim_aux_H_R_conf_1 * (j - 1) + internal.dim_aux_H_R_conf_12 * (k - 1) + internal.dim_aux_H_R_conf_123 * (l - 1)] = internal.aux_H_R_conf[internal.dim_aux_H_R_conf_123 * (l - 1) + internal.dim_aux_H_R_conf_12 * (k - 1) + internal.dim_aux_H_R_conf_1 * (j - 1) + i - 1] + internal.n_H_R_conf_progress[internal.dim_n_H_R_conf_progress_123 * (l - 1) + internal.dim_n_H_R_conf_progress_12 * (k - 1 - 1) + internal.dim_n_H_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_R_conf_2; ++j) {
        for (int k = 1; k <= internal.k_H_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_R_conf_4; ++l) {
            internal.aux_H_R_conf[i - 1 + internal.dim_aux_H_R_conf_1 * (j - 1) + internal.dim_aux_H_R_conf_12 * (k - 1) + internal.dim_aux_H_R_conf_123 * (l - 1)] = internal.aux_H_R_conf[internal.dim_aux_H_R_conf_123 * (l - 1) + internal.dim_aux_H_R_conf_12 * (k - 1) + internal.dim_aux_H_R_conf_1 * (j - 1) + i - 1] - internal.n_H_R_conf_progress[internal.dim_n_H_R_conf_progress_123 * (l - 1) + internal.dim_n_H_R_conf_progress_12 * (k - 1) + internal.dim_n_H_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_H_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_R_unconf_4; ++l) {
            internal.aux_H_R_unconf[i - 1 + internal.dim_aux_H_R_unconf_1 * (j - 1) + internal.dim_aux_H_R_unconf_12 * (k - 1) + internal.dim_aux_H_R_unconf_123 * (l - 1)] = H_R_unconf[internal.dim_H_R_unconf_123 * (l - 1) + internal.dim_H_R_unconf_12 * (k - 1) + internal.dim_H_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_R_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_H_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_R_unconf_4; ++l) {
            internal.aux_H_R_unconf[i - 1 + internal.dim_aux_H_R_unconf_1 * (j - 1) + internal.dim_aux_H_R_unconf_12 * (k - 1) + internal.dim_aux_H_R_unconf_123 * (l - 1)] = internal.aux_H_R_unconf[internal.dim_aux_H_R_unconf_123 * (l - 1) + internal.dim_aux_H_R_unconf_12 * (k - 1) + internal.dim_aux_H_R_unconf_1 * (j - 1) + i - 1] + internal.n_H_R_unconf_progress[internal.dim_n_H_R_unconf_progress_123 * (l - 1) + internal.dim_n_H_R_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_H_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_H_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_H_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_H_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_H_R_unconf_4; ++l) {
            internal.aux_H_R_unconf[i - 1 + internal.dim_aux_H_R_unconf_1 * (j - 1) + internal.dim_aux_H_R_unconf_12 * (k - 1) + internal.dim_aux_H_R_unconf_123 * (l - 1)] = internal.aux_H_R_unconf[internal.dim_aux_H_R_unconf_123 * (l - 1) + internal.dim_aux_H_R_unconf_12 * (k - 1) + internal.dim_aux_H_R_unconf_1 * (j - 1) + i - 1] - internal.n_H_R_unconf_progress[internal.dim_n_H_R_unconf_progress_123 * (l - 1) + internal.dim_n_H_R_unconf_progress_12 * (k - 1) + internal.dim_n_H_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_pre_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_pre_conf_4; ++l) {
            internal.aux_ICU_pre_conf[i - 1 + internal.dim_aux_ICU_pre_conf_1 * (j - 1) + internal.dim_aux_ICU_pre_conf_12 * (k - 1) + internal.dim_aux_ICU_pre_conf_123 * (l - 1)] = ICU_pre_conf[internal.dim_ICU_pre_conf_123 * (l - 1) + internal.dim_ICU_pre_conf_12 * (k - 1) + internal.dim_ICU_pre_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_pre_conf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_pre; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_pre_conf_4; ++l) {
            internal.aux_ICU_pre_conf[i - 1 + internal.dim_aux_ICU_pre_conf_1 * (j - 1) + internal.dim_aux_ICU_pre_conf_12 * (k - 1) + internal.dim_aux_ICU_pre_conf_123 * (l - 1)] = internal.aux_ICU_pre_conf[internal.dim_aux_ICU_pre_conf_123 * (l - 1) + internal.dim_aux_ICU_pre_conf_12 * (k - 1) + internal.dim_aux_ICU_pre_conf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_conf_progress[internal.dim_n_ICU_pre_conf_progress_123 * (l - 1) + internal.dim_n_ICU_pre_conf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_pre; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_pre_conf_4; ++l) {
            internal.aux_ICU_pre_conf[i - 1 + internal.dim_aux_ICU_pre_conf_1 * (j - 1) + internal.dim_aux_ICU_pre_conf_12 * (k - 1) + internal.dim_aux_ICU_pre_conf_123 * (l - 1)] = internal.aux_ICU_pre_conf[internal.dim_aux_ICU_pre_conf_123 * (l - 1) + internal.dim_aux_ICU_pre_conf_12 * (k - 1) + internal.dim_aux_ICU_pre_conf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_conf_progress[internal.dim_n_ICU_pre_conf_progress_123 * (l - 1) + internal.dim_n_ICU_pre_conf_progress_12 * (k - 1) + internal.dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_pre_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_pre_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_pre_unconf_4; ++l) {
            internal.aux_ICU_pre_unconf[i - 1 + internal.dim_aux_ICU_pre_unconf_1 * (j - 1) + internal.dim_aux_ICU_pre_unconf_12 * (k - 1) + internal.dim_aux_ICU_pre_unconf_123 * (l - 1)] = ICU_pre_unconf[internal.dim_ICU_pre_unconf_123 * (l - 1) + internal.dim_ICU_pre_unconf_12 * (k - 1) + internal.dim_ICU_pre_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_pre_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_pre; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_pre_unconf_4; ++l) {
            internal.aux_ICU_pre_unconf[i - 1 + internal.dim_aux_ICU_pre_unconf_1 * (j - 1) + internal.dim_aux_ICU_pre_unconf_12 * (k - 1) + internal.dim_aux_ICU_pre_unconf_123 * (l - 1)] = internal.aux_ICU_pre_unconf[internal.dim_aux_ICU_pre_unconf_123 * (l - 1) + internal.dim_aux_ICU_pre_unconf_12 * (k - 1) + internal.dim_aux_ICU_pre_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_unconf_progress[internal.dim_n_ICU_pre_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_pre_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_pre_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_pre; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_pre_unconf_4; ++l) {
            internal.aux_ICU_pre_unconf[i - 1 + internal.dim_aux_ICU_pre_unconf_1 * (j - 1) + internal.dim_aux_ICU_pre_unconf_12 * (k - 1) + internal.dim_aux_ICU_pre_unconf_123 * (l - 1)] = internal.aux_ICU_pre_unconf[internal.dim_aux_ICU_pre_unconf_123 * (l - 1) + internal.dim_aux_ICU_pre_unconf_12 * (k - 1) + internal.dim_aux_ICU_pre_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_progress[internal.dim_n_ICU_pre_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_pre_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_W_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_D_conf_4; ++l) {
            internal.aux_W_D_conf[i - 1 + internal.dim_aux_W_D_conf_1 * (j - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_123 * (l - 1)] = W_D_conf[internal.dim_W_D_conf_123 * (l - 1) + internal.dim_W_D_conf_12 * (k - 1) + internal.dim_W_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_W_D_conf_4; ++l) {
          internal.aux_W_D_conf[i - 1 + internal.dim_aux_W_D_conf_1 * (j - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_123 * (l - 1)] = internal.aux_W_D_conf[internal.dim_aux_W_D_conf_123 * (l - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_D_conf_progress[internal.dim_n_ICU_W_D_conf_progress_123 * (l - 1) + internal.dim_n_ICU_W_D_conf_progress_12 * (internal.k_ICU_W_D - 1) + internal.dim_n_ICU_W_D_conf_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_conf_2; ++j) {
        for (int k = 2; k <= internal.k_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_D_conf_4; ++l) {
            internal.aux_W_D_conf[i - 1 + internal.dim_aux_W_D_conf_1 * (j - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_123 * (l - 1)] = internal.aux_W_D_conf[internal.dim_aux_W_D_conf_123 * (l - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_1 * (j - 1) + i - 1] + internal.n_W_D_conf_progress[internal.dim_n_W_D_conf_progress_123 * (l - 1) + internal.dim_n_W_D_conf_progress_12 * (k - 1 - 1) + internal.dim_n_W_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.k_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_D_conf_4; ++l) {
            internal.aux_W_D_conf[i - 1 + internal.dim_aux_W_D_conf_1 * (j - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_123 * (l - 1)] = internal.aux_W_D_conf[internal.dim_aux_W_D_conf_123 * (l - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_1 * (j - 1) + i - 1] - internal.n_W_D_conf_progress[internal.dim_n_W_D_conf_progress_123 * (l - 1) + internal.dim_n_W_D_conf_progress_12 * (k - 1) + internal.dim_n_W_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_W_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_D_unconf_4; ++l) {
            internal.aux_W_D_unconf[i - 1 + internal.dim_aux_W_D_unconf_1 * (j - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_123 * (l - 1)] = W_D_unconf[internal.dim_W_D_unconf_123 * (l - 1) + internal.dim_W_D_unconf_12 * (k - 1) + internal.dim_W_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_W_D_unconf_4; ++l) {
          internal.aux_W_D_unconf[i - 1 + internal.dim_aux_W_D_unconf_1 * (j - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_123 * (l - 1)] = internal.aux_W_D_unconf[internal.dim_aux_W_D_unconf_123 * (l - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_W_D_unconf_progress[internal.dim_n_ICU_W_D_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_W_D_unconf_progress_12 * (internal.k_ICU_W_D - 1) + internal.dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_D_unconf_4; ++l) {
            internal.aux_W_D_unconf[i - 1 + internal.dim_aux_W_D_unconf_1 * (j - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_123 * (l - 1)] = internal.aux_W_D_unconf[internal.dim_aux_W_D_unconf_123 * (l - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_1 * (j - 1) + i - 1] + internal.n_W_D_unconf_progress[internal.dim_n_W_D_unconf_progress_123 * (l - 1) + internal.dim_n_W_D_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_W_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_D_unconf_4; ++l) {
            internal.aux_W_D_unconf[i - 1 + internal.dim_aux_W_D_unconf_1 * (j - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_123 * (l - 1)] = internal.aux_W_D_unconf[internal.dim_aux_W_D_unconf_123 * (l - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_1 * (j - 1) + i - 1] - internal.n_W_D_unconf_progress[internal.dim_n_W_D_unconf_progress_123 * (l - 1) + internal.dim_n_W_D_unconf_progress_12 * (k - 1) + internal.dim_n_W_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_W_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_R_conf_4; ++l) {
            internal.aux_W_R_conf[i - 1 + internal.dim_aux_W_R_conf_1 * (j - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_123 * (l - 1)] = W_R_conf[internal.dim_W_R_conf_123 * (l - 1) + internal.dim_W_R_conf_12 * (k - 1) + internal.dim_W_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_W_R_conf_4; ++l) {
          internal.aux_W_R_conf[i - 1 + internal.dim_aux_W_R_conf_1 * (j - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_123 * (l - 1)] = internal.aux_W_R_conf[internal.dim_aux_W_R_conf_123 * (l - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_R_conf_progress[internal.dim_n_ICU_W_R_conf_progress_123 * (l - 1) + internal.dim_n_ICU_W_R_conf_progress_12 * (internal.k_ICU_W_R - 1) + internal.dim_n_ICU_W_R_conf_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_conf_2; ++j) {
        for (int k = 2; k <= internal.k_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_R_conf_4; ++l) {
            internal.aux_W_R_conf[i - 1 + internal.dim_aux_W_R_conf_1 * (j - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_123 * (l - 1)] = internal.aux_W_R_conf[internal.dim_aux_W_R_conf_123 * (l - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_1 * (j - 1) + i - 1] + internal.n_W_R_conf_progress[internal.dim_n_W_R_conf_progress_123 * (l - 1) + internal.dim_n_W_R_conf_progress_12 * (k - 1 - 1) + internal.dim_n_W_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.k_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_R_conf_4; ++l) {
            internal.aux_W_R_conf[i - 1 + internal.dim_aux_W_R_conf_1 * (j - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_123 * (l - 1)] = internal.aux_W_R_conf[internal.dim_aux_W_R_conf_123 * (l - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_1 * (j - 1) + i - 1] - internal.n_W_R_conf_progress[internal.dim_n_W_R_conf_progress_123 * (l - 1) + internal.dim_n_W_R_conf_progress_12 * (k - 1) + internal.dim_n_W_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_W_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_R_unconf_4; ++l) {
            internal.aux_W_R_unconf[i - 1 + internal.dim_aux_W_R_unconf_1 * (j - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_123 * (l - 1)] = W_R_unconf[internal.dim_W_R_unconf_123 * (l - 1) + internal.dim_W_R_unconf_12 * (k - 1) + internal.dim_W_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_W_R_unconf_4; ++l) {
          internal.aux_W_R_unconf[i - 1 + internal.dim_aux_W_R_unconf_1 * (j - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_123 * (l - 1)] = internal.aux_W_R_unconf[internal.dim_aux_W_R_unconf_123 * (l - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_W_R_unconf_progress[internal.dim_n_ICU_W_R_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_W_R_unconf_progress_12 * (internal.k_ICU_W_R - 1) + internal.dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_R_unconf_4; ++l) {
            internal.aux_W_R_unconf[i - 1 + internal.dim_aux_W_R_unconf_1 * (j - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_123 * (l - 1)] = internal.aux_W_R_unconf[internal.dim_aux_W_R_unconf_123 * (l - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_1 * (j - 1) + i - 1] + internal.n_W_R_unconf_progress[internal.dim_n_W_R_unconf_progress_123 * (l - 1) + internal.dim_n_W_R_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_W_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_W_R_unconf_4; ++l) {
            internal.aux_W_R_unconf[i - 1 + internal.dim_aux_W_R_unconf_1 * (j - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_123 * (l - 1)] = internal.aux_W_R_unconf[internal.dim_aux_W_R_unconf_123 * (l - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_1 * (j - 1) + i - 1] - internal.n_W_R_unconf_progress[internal.dim_n_W_R_unconf_progress_123 * (l - 1) + internal.dim_n_W_R_unconf_progress_12 * (k - 1) + internal.dim_n_W_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_R_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_R_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_R_3; ++k) {
          internal.n_I_C_to_R[i - 1 + internal.dim_n_I_C_to_R_1 * (j - 1) + internal.dim_n_I_C_to_R_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_I_C_progress[internal.dim_n_I_C_progress_123 * (k - 1) + internal.dim_n_I_C_progress_12 * (internal.k_C - 1) + internal.dim_n_I_C_progress_1 * (j - 1) + i - 1]), 1 - internal.p_H_by_age[i - 1] * internal.rel_p_hosp_if_sympt[internal.dim_rel_p_hosp_if_sympt_1 * (k - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_conf_to_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_conf_to_ICU_D_conf_3; ++k) {
          internal.n_ICU_pre_conf_to_ICU_D_conf[i - 1 + internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + internal.dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ICU_pre_conf_progress[internal.dim_n_ICU_pre_conf_progress_123 * (k - 1) + internal.dim_n_ICU_pre_conf_progress_12 * (internal.k_ICU_pre - 1) + internal.dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1]), internal.p_ICU_D_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_3; ++k) {
          internal.n_ICU_pre_unconf_to_ICU_D_unconf[i - 1 + internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ICU_pre_unconf_progress[internal.dim_n_ICU_pre_unconf_progress_123 * (k - 1) + internal.dim_n_ICU_pre_unconf_progress_12 * (internal.k_ICU_pre - 1) + internal.dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1]), internal.p_ICU_D_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_R_progress_capped_1; ++i) {
      for (int j = 1; j <= internal.dim_n_R_progress_capped_2; ++j) {
        for (int k = 1; k <= internal.dim_n_R_progress_capped_3; ++k) {
          internal.n_R_progress_capped[i - 1 + internal.dim_n_R_progress_capped_1 * (j - 1) + internal.dim_n_R_progress_capped_12 * (k - 1)] = std::min(internal.n_R_progress_tmp[internal.dim_n_R_progress_tmp_12 * (k - 1) + internal.dim_n_R_progress_tmp_1 * (j - 1) + i - 1], std::min(T_sero_neg[internal.dim_T_sero_neg_12 * (k - 1) + internal.dim_T_sero_neg_1 * (j - 1) + i - 1], T_PCR_neg[internal.dim_T_PCR_neg_12 * (k - 1) + internal.dim_T_PCR_neg_1 * (j - 1) + i - 1]));
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_T_sero_pre_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_T_sero_pre_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_T_sero_pre_progress_3; ++k) {
          for (int l = 1; l <= internal.dim_n_T_sero_pre_progress_4; ++l) {
            internal.n_T_sero_pre_progress[i - 1 + internal.dim_n_T_sero_pre_progress_1 * (j - 1) + internal.dim_n_T_sero_pre_progress_12 * (k - 1) + internal.dim_n_T_sero_pre_progress_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(T_sero_pre[internal.dim_T_sero_pre_123 * (l - 1) + internal.dim_T_sero_pre_12 * (k - 1) + internal.dim_T_sero_pre_1 * (j - 1) + i - 1]), internal.p_T_sero_pre_progress[internal.dim_p_T_sero_pre_progress_123 * (l - 1) + internal.dim_p_T_sero_pre_progress_12 * (k - 1) + internal.dim_p_T_sero_pre_progress_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_D_comm; ++i) {
      internal.new_D_comm[i - 1] = D_comm[i - 1] + odin_sum4(internal.n_G_D_progress.data(), i - 1, i, 0, internal.dim_n_G_D_progress_2, internal.k_G_D - 1, internal.k_G_D, 0, internal.dim_n_G_D_progress_4, internal.dim_n_G_D_progress_1, internal.dim_n_G_D_progress_12, internal.dim_n_G_D_progress_123);
    }
    for (int i = 1; i <= internal.dim_new_D_hosp; ++i) {
      internal.new_D_hosp[i - 1] = D_hosp[i - 1] + odin_sum4(internal.n_H_D_unconf_progress.data(), i - 1, i, 0, internal.dim_n_H_D_unconf_progress_2, internal.k_H_D - 1, internal.k_H_D, 0, internal.dim_n_H_D_unconf_progress_4, internal.dim_n_H_D_unconf_progress_1, internal.dim_n_H_D_unconf_progress_12, internal.dim_n_H_D_unconf_progress_123) + odin_sum4(internal.n_H_D_conf_progress.data(), i - 1, i, 0, internal.dim_n_H_D_conf_progress_2, internal.k_H_D - 1, internal.k_H_D, 0, internal.dim_n_H_D_conf_progress_4, internal.dim_n_H_D_conf_progress_1, internal.dim_n_H_D_conf_progress_12, internal.dim_n_H_D_conf_progress_123) + odin_sum4(internal.n_ICU_D_unconf_progress.data(), i - 1, i, 0, internal.dim_n_ICU_D_unconf_progress_2, internal.k_ICU_D - 1, internal.k_ICU_D, 0, internal.dim_n_ICU_D_unconf_progress_4, internal.dim_n_ICU_D_unconf_progress_1, internal.dim_n_ICU_D_unconf_progress_12, internal.dim_n_ICU_D_unconf_progress_123) + odin_sum4(internal.n_ICU_D_conf_progress.data(), i - 1, i, 0, internal.dim_n_ICU_D_conf_progress_2, internal.k_ICU_D - 1, internal.k_ICU_D, 0, internal.dim_n_ICU_D_conf_progress_4, internal.dim_n_ICU_D_conf_progress_1, internal.dim_n_ICU_D_conf_progress_12, internal.dim_n_ICU_D_conf_progress_123) + odin_sum4(internal.n_W_D_unconf_progress.data(), i - 1, i, 0, internal.dim_n_W_D_unconf_progress_2, internal.k_W_D - 1, internal.k_W_D, 0, internal.dim_n_W_D_unconf_progress_4, internal.dim_n_W_D_unconf_progress_1, internal.dim_n_W_D_unconf_progress_12, internal.dim_n_W_D_unconf_progress_123) + odin_sum4(internal.n_W_D_conf_progress.data(), i - 1, i, 0, internal.dim_n_W_D_conf_progress_2, internal.k_W_D - 1, internal.k_W_D, 0, internal.dim_n_W_D_conf_progress_4, internal.dim_n_W_D_conf_progress_1, internal.dim_n_W_D_conf_progress_12, internal.dim_n_W_D_conf_progress_123);
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_pos_2; ++j) {
        for (int k = 1; k <= internal.dim_new_T_PCR_pos_3; ++k) {
          for (int l = 1; l <= internal.dim_new_T_PCR_pos_4; ++l) {
            internal.new_T_PCR_pos[i - 1 + internal.dim_new_T_PCR_pos_1 * (j - 1) + internal.dim_new_T_PCR_pos_12 * (k - 1) + internal.dim_new_T_PCR_pos_123 * (l - 1)] = T_PCR_pos[internal.dim_T_PCR_pos_123 * (l - 1) + internal.dim_T_PCR_pos_12 * (k - 1) + internal.dim_T_PCR_pos_1 * (j - 1) + i - 1] - internal.n_T_PCR_pos_progress[internal.dim_n_T_PCR_pos_progress_123 * (l - 1) + internal.dim_n_T_PCR_pos_progress_12 * (k - 1) + internal.dim_n_T_PCR_pos_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_pos_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_T_PCR_pos_4; ++l) {
          internal.new_T_PCR_pos[i - 1 + internal.dim_new_T_PCR_pos_1 * (j - 1) + internal.dim_new_T_PCR_pos_12 * (k - 1) + internal.dim_new_T_PCR_pos_123 * (l - 1)] = internal.new_T_PCR_pos[internal.dim_new_T_PCR_pos_123 * (l - 1) + internal.dim_new_T_PCR_pos_12 * 0 + internal.dim_new_T_PCR_pos_1 * (j - 1) + i - 1] + internal.n_T_PCR_pre_progress[internal.dim_n_T_PCR_pre_progress_123 * (l - 1) + internal.dim_n_T_PCR_pre_progress_12 * (internal.k_PCR_pre - 1) + internal.dim_n_T_PCR_pre_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_pos_2; ++j) {
        for (int k = 2; k <= internal.k_PCR_pos; ++k) {
          for (int l = 1; l <= internal.dim_new_T_PCR_pos_4; ++l) {
            internal.new_T_PCR_pos[i - 1 + internal.dim_new_T_PCR_pos_1 * (j - 1) + internal.dim_new_T_PCR_pos_12 * (k - 1) + internal.dim_new_T_PCR_pos_123 * (l - 1)] = internal.new_T_PCR_pos[internal.dim_new_T_PCR_pos_123 * (l - 1) + internal.dim_new_T_PCR_pos_12 * (k - 1) + internal.dim_new_T_PCR_pos_1 * (j - 1) + i - 1] + internal.n_T_PCR_pos_progress[internal.dim_n_T_PCR_pos_progress_123 * (l - 1) + internal.dim_n_T_PCR_pos_progress_12 * (k - 1 - 1) + internal.dim_n_T_PCR_pos_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_s_ij_1; ++i) {
      for (int j = 1; j <= internal.dim_s_ij_2; ++j) {
        for (int k = 1; k <= internal.dim_s_ij_3; ++k) {
          internal.s_ij[i - 1 + internal.dim_s_ij_1 * (j - 1) + internal.dim_s_ij_12 * (k - 1)] = internal.m[internal.dim_m_1 * (j - 1) + i - 1] * odin_sum3(internal.I_with_diff_trans.data(), j - 1, j, k - 1, k, 0, internal.dim_I_with_diff_trans_3, internal.dim_I_with_diff_trans_1, internal.dim_I_with_diff_trans_12);
        }
      }
    }
    for (int i = 1; i <= internal.n_age_groups; ++i) {
      for (int j = 1; j <= internal.n_groups; ++j) {
        for (int k = 1; k <= internal.dim_s_ij_3; ++k) {
          internal.s_ij[i - 1 + internal.dim_s_ij_1 * (j - 1) + internal.dim_s_ij_12 * (k - 1)] = beta * internal.s_ij[internal.dim_s_ij_12 * (k - 1) + internal.dim_s_ij_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = (internal.n_age_groups + 1); i <= internal.n_groups; ++i) {
      for (int j = 1; j <= internal.n_age_groups; ++j) {
        for (int k = 1; k <= internal.dim_s_ij_3; ++k) {
          internal.s_ij[i - 1 + internal.dim_s_ij_1 * (j - 1) + internal.dim_s_ij_12 * (k - 1)] = beta * internal.s_ij[internal.dim_s_ij_12 * (k - 1) + internal.dim_s_ij_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_vaccine_progression_rate_1; ++i) {
      int j = 1;
      internal.vaccine_progression_rate[i - 1 + internal.dim_vaccine_progression_rate_1 * (j - 1)] = vaccination_schedule(i, internal.vaccine_daily_doses, internal.dt, internal.vaccine_n_candidates, internal.vaccine_population_possible);
    }
    for (int i = 1; i <= internal.dim_vaccine_progression_rate_1; ++i) {
      for (int j = 2; j <= internal.n_vacc_classes; ++j) {
        internal.vaccine_progression_rate[i - 1 + internal.dim_vaccine_progression_rate_1 * (j - 1)] = internal.vaccine_progression_rate_base[internal.dim_vaccine_progression_rate_base_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_D_conf_4; ++l) {
            internal.aux_ICU_D_conf[i - 1 + internal.dim_aux_ICU_D_conf_1 * (j - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_123 * (l - 1)] = ICU_D_conf[internal.dim_ICU_D_conf_123 * (l - 1) + internal.dim_ICU_D_conf_12 * (k - 1) + internal.dim_ICU_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_ICU_D_conf_4; ++l) {
          internal.aux_ICU_D_conf[i - 1 + internal.dim_aux_ICU_D_conf_1 * (j - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_123 * (l - 1)] = internal.aux_ICU_D_conf[internal.dim_aux_ICU_D_conf_123 * (l - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_conf_to_ICU_D_conf[internal.dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (l - 1) + internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_conf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_D_conf_4; ++l) {
            internal.aux_ICU_D_conf[i - 1 + internal.dim_aux_ICU_D_conf_1 * (j - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_123 * (l - 1)] = internal.aux_ICU_D_conf[internal.dim_aux_ICU_D_conf_123 * (l - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_D_conf_progress[internal.dim_n_ICU_D_conf_progress_123 * (l - 1) + internal.dim_n_ICU_D_conf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_D_conf_4; ++l) {
            internal.aux_ICU_D_conf[i - 1 + internal.dim_aux_ICU_D_conf_1 * (j - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_123 * (l - 1)] = internal.aux_ICU_D_conf[internal.dim_aux_ICU_D_conf_123 * (l - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_1 * (j - 1) + i - 1] - internal.n_ICU_D_conf_progress[internal.dim_n_ICU_D_conf_progress_123 * (l - 1) + internal.dim_n_ICU_D_conf_progress_12 * (k - 1) + internal.dim_n_ICU_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_D_unconf_4; ++l) {
            internal.aux_ICU_D_unconf[i - 1 + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_123 * (l - 1)] = ICU_D_unconf[internal.dim_ICU_D_unconf_123 * (l - 1) + internal.dim_ICU_D_unconf_12 * (k - 1) + internal.dim_ICU_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_ICU_D_unconf_4; ++l) {
          internal.aux_ICU_D_unconf[i - 1 + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_123 * (l - 1)] = internal.aux_ICU_D_unconf[internal.dim_aux_ICU_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_unconf_to_ICU_D_unconf[internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (l - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_D_unconf_4; ++l) {
            internal.aux_ICU_D_unconf[i - 1 + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_123 * (l - 1)] = internal.aux_ICU_D_unconf[internal.dim_aux_ICU_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_D_unconf_progress[internal.dim_n_ICU_D_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_D_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_D_unconf_4; ++l) {
            internal.aux_ICU_D_unconf[i - 1 + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_123 * (l - 1)] = internal.aux_ICU_D_unconf[internal.dim_aux_ICU_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_D_unconf_progress[internal.dim_n_ICU_D_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_D_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_lambda_1; ++i) {
      for (int j = 1; j <= internal.dim_lambda_2; ++j) {
        internal.lambda[i - 1 + internal.dim_lambda_1 * (j - 1)] = odin_sum3(internal.s_ij.data(), i - 1, i, 0, internal.dim_s_ij_2, j - 1, j, internal.dim_s_ij_1, internal.dim_s_ij_12);
      }
    }
    for (int i = 1; i <= internal.dim_n_H_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_H_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_H_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_H_D_unconf_to_conf_4; ++l) {
            internal.n_H_D_unconf_to_conf[i - 1 + internal.dim_n_H_D_unconf_to_conf_1 * (j - 1) + internal.dim_n_H_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_H_D_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_H_D_unconf[internal.dim_aux_H_D_unconf_123 * (l - 1) + internal.dim_aux_H_D_unconf_12 * (k - 1) + internal.dim_aux_H_D_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_H_R_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_H_R_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_H_R_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_H_R_unconf_to_conf_4; ++l) {
            internal.n_H_R_unconf_to_conf[i - 1 + internal.dim_n_H_R_unconf_to_conf_1 * (j - 1) + internal.dim_n_H_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_H_R_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_H_R_unconf[internal.dim_aux_H_R_unconf_123 * (l - 1) + internal.dim_aux_H_R_unconf_12 * (k - 1) + internal.dim_aux_H_R_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_G_D_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_G_D_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_G_D_3; ++k) {
          internal.n_I_C_to_G_D[i - 1 + internal.dim_n_I_C_to_G_D_1 * (j - 1) + internal.dim_n_I_C_to_G_D_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_I_C_progress[internal.dim_n_I_C_progress_123 * (k - 1) + internal.dim_n_I_C_progress_12 * (internal.k_C - 1) + internal.dim_n_I_C_progress_1 * (j - 1) + i - 1] - internal.n_I_C_to_R[internal.dim_n_I_C_to_R_12 * (k - 1) + internal.dim_n_I_C_to_R_1 * (j - 1) + i - 1]), internal.p_G_D_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_3; ++k) {
          internal.n_ICU_pre_conf_to_ICU_W_D_conf[i - 1 + internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * (j - 1) + internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ICU_pre_conf_progress[internal.dim_n_ICU_pre_conf_progress_123 * (k - 1) + internal.dim_n_ICU_pre_conf_progress_12 * (internal.k_ICU_pre - 1) + internal.dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_conf_to_ICU_D_conf[internal.dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (k - 1) + internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + i - 1]), internal.p_W_D_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_pre_unconf_to_conf_4; ++l) {
            internal.n_ICU_pre_unconf_to_conf[i - 1 + internal.dim_n_ICU_pre_unconf_to_conf_1 * (j - 1) + internal.dim_n_ICU_pre_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_ICU_pre_unconf[internal.dim_aux_ICU_pre_unconf_123 * (l - 1) + internal.dim_aux_ICU_pre_unconf_12 * (k - 1) + internal.dim_aux_ICU_pre_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3; ++k) {
          internal.n_ICU_pre_unconf_to_ICU_W_D_unconf[i - 1 + internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * (j - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_ICU_pre_unconf_progress[internal.dim_n_ICU_pre_unconf_progress_123 * (k - 1) + internal.dim_n_ICU_pre_unconf_progress_12 * (internal.k_ICU_pre - 1) + internal.dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_ICU_D_unconf[internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + i - 1]), internal.p_W_D_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_R_progress_1; ++i) {
      for (int j = 1; j <= internal.dim_n_R_progress_2; ++j) {
        for (int k = 1; k <= internal.dim_n_R_progress_3; ++k) {
          internal.n_R_progress[i - 1 + internal.dim_n_R_progress_1 * (j - 1) + internal.dim_n_R_progress_12 * (k - 1)] = (internal.model_pcr_and_serology == 1 ? internal.n_R_progress_capped[internal.dim_n_R_progress_capped_12 * (k - 1) + internal.dim_n_R_progress_capped_1 * (j - 1) + i - 1] : internal.n_R_progress_tmp[internal.dim_n_R_progress_tmp_12 * (k - 1) + internal.dim_n_R_progress_tmp_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_T_sero_pre_to_T_sero_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_n_T_sero_pre_to_T_sero_pos_2; ++j) {
        for (int k = 1; k <= internal.dim_n_T_sero_pre_to_T_sero_pos_3; ++k) {
          internal.n_T_sero_pre_to_T_sero_pos[i - 1 + internal.dim_n_T_sero_pre_to_T_sero_pos_1 * (j - 1) + internal.dim_n_T_sero_pre_to_T_sero_pos_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(odin_sum4(internal.n_T_sero_pre_progress.data(), i - 1, i, j - 1, j, 0, internal.dim_n_T_sero_pre_progress_3, k - 1, k, internal.dim_n_T_sero_pre_progress_1, internal.dim_n_T_sero_pre_progress_12, internal.dim_n_T_sero_pre_progress_123)), internal.p_sero_pos[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_W_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_W_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_W_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_W_D_unconf_to_conf_4; ++l) {
            internal.n_W_D_unconf_to_conf[i - 1 + internal.dim_n_W_D_unconf_to_conf_1 * (j - 1) + internal.dim_n_W_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_W_D_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_W_D_unconf[internal.dim_aux_W_D_unconf_123 * (l - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_W_R_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_W_R_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_W_R_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_W_R_unconf_to_conf_4; ++l) {
            internal.n_W_R_unconf_to_conf[i - 1 + internal.dim_n_W_R_unconf_to_conf_1 * (j - 1) + internal.dim_n_W_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_W_R_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_W_R_unconf[internal.dim_aux_W_R_unconf_123 * (l - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    real_t new_D_comm_tot = odin_sum1(internal.new_D_comm.data(), 0, internal.dim_new_D_comm);
    real_t new_D_hosp_tot = odin_sum1(internal.new_D_hosp.data(), 0, internal.dim_new_D_hosp);
    for (int i = 1; i <= internal.dim_p_E_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_p_E_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_p_E_next_vacc_class_3; ++k) {
          for (int l = 1; l <= internal.dim_p_E_next_vacc_class_4; ++l) {
            internal.p_E_next_vacc_class[i - 1 + internal.dim_p_E_next_vacc_class_1 * (j - 1) + internal.dim_p_E_next_vacc_class_12 * (k - 1) + internal.dim_p_E_next_vacc_class_123 * (l - 1)] = 1 - std::exp(- internal.vaccine_progression_rate[internal.dim_vaccine_progression_rate_1 * (l - 1) + i - 1] * internal.dt);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_p_I_A_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_p_I_A_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_p_I_A_next_vacc_class_3; ++k) {
          for (int l = 1; l <= internal.dim_p_I_A_next_vacc_class_4; ++l) {
            internal.p_I_A_next_vacc_class[i - 1 + internal.dim_p_I_A_next_vacc_class_1 * (j - 1) + internal.dim_p_I_A_next_vacc_class_12 * (k - 1) + internal.dim_p_I_A_next_vacc_class_123 * (l - 1)] = 1 - std::exp(- internal.vaccine_progression_rate[internal.dim_vaccine_progression_rate_1 * (l - 1) + i - 1] * internal.dt);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_p_R_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_p_R_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_p_R_next_vacc_class_3; ++k) {
          internal.p_R_next_vacc_class[i - 1 + internal.dim_p_R_next_vacc_class_1 * (j - 1) + internal.dim_p_R_next_vacc_class_12 * (k - 1)] = 1 - std::exp(- internal.vaccine_progression_rate[internal.dim_vaccine_progression_rate_1 * (k - 1) + i - 1] * internal.dt);
        }
      }
    }
    for (int i = 1; i <= internal.dim_p_S_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_p_S_next_vacc_class_2; ++j) {
        internal.p_S_next_vacc_class[i - 1 + internal.dim_p_S_next_vacc_class_1 * (j - 1)] = 1 - std::exp(- internal.vaccine_progression_rate[internal.dim_vaccine_progression_rate_1 * (j - 1) + i - 1] * internal.dt);
      }
    }
    for (int i = 1; i <= internal.dim_D_comm; ++i) {
      state_next[internal.offset_variable_D_comm + i - 1] = internal.new_D_comm[i - 1];
    }
    for (int i = 1; i <= internal.dim_D_hosp; ++i) {
      state_next[internal.offset_variable_D_hosp + i - 1] = internal.new_D_hosp[i - 1];
    }
    state_next[16] = odin_sum4(internal.new_T_PCR_pos.data(), 1, 18, 0, internal.dim_new_T_PCR_pos_2, 0, internal.dim_new_T_PCR_pos_3, 0, internal.dim_new_T_PCR_pos_4, internal.dim_new_T_PCR_pos_1, internal.dim_new_T_PCR_pos_12, internal.dim_new_T_PCR_pos_123);
    for (int i = 1; i <= internal.dim_T_PCR_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_T_PCR_pos_2; ++j) {
        for (int k = 1; k <= internal.dim_T_PCR_pos_3; ++k) {
          for (int l = 1; l <= internal.dim_T_PCR_pos_4; ++l) {
            state_next[internal.offset_variable_T_PCR_pos + i - 1 + internal.dim_T_PCR_pos_1 * (j - 1) + internal.dim_T_PCR_pos_12 * (k - 1) + internal.dim_T_PCR_pos_123 * (l - 1)] = internal.new_T_PCR_pos[internal.dim_new_T_PCR_pos_123 * (l - 1) + internal.dim_new_T_PCR_pos_12 * (k - 1) + internal.dim_new_T_PCR_pos_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_G_D_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_G_D_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_G_D_4; ++l) {
          internal.aux_G_D[i - 1 + internal.dim_aux_G_D_1 * (j - 1) + internal.dim_aux_G_D_12 * (k - 1) + internal.dim_aux_G_D_123 * (l - 1)] = internal.n_I_C_to_G_D[internal.dim_n_I_C_to_G_D_12 * (l - 1) + internal.dim_n_I_C_to_G_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_G_D_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_G_D_2; ++j) {
        for (int k = 2; k <= internal.k_G_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_G_D_4; ++l) {
            internal.aux_G_D[i - 1 + internal.dim_aux_G_D_1 * (j - 1) + internal.dim_aux_G_D_12 * (k - 1) + internal.dim_aux_G_D_123 * (l - 1)] = internal.n_G_D_progress[internal.dim_n_G_D_progress_123 * (l - 1) + internal.dim_n_G_D_progress_12 * (k - 1 - 1) + internal.dim_n_G_D_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_G_D_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_G_D_2; ++j) {
        for (int k = 1; k <= internal.k_G_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_G_D_4; ++l) {
            internal.aux_G_D[i - 1 + internal.dim_aux_G_D_1 * (j - 1) + internal.dim_aux_G_D_12 * (k - 1) + internal.dim_aux_G_D_123 * (l - 1)] = internal.aux_G_D[internal.dim_aux_G_D_123 * (l - 1) + internal.dim_aux_G_D_12 * (k - 1) + internal.dim_aux_G_D_1 * (j - 1) + i - 1] - internal.n_G_D_progress[internal.dim_n_G_D_progress_123 * (l - 1) + internal.dim_n_G_D_progress_12 * (k - 1) + internal.dim_n_G_D_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_W_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_D_conf_4; ++l) {
            internal.aux_ICU_W_D_conf[i - 1 + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_123 * (l - 1)] = ICU_W_D_conf[internal.dim_ICU_W_D_conf_123 * (l - 1) + internal.dim_ICU_W_D_conf_12 * (k - 1) + internal.dim_ICU_W_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_ICU_W_D_conf_4; ++l) {
          internal.aux_ICU_W_D_conf[i - 1 + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_123 * (l - 1)] = internal.aux_ICU_W_D_conf[internal.dim_aux_ICU_W_D_conf_123 * (l - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_conf_to_ICU_W_D_conf[internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 * (l - 1) + internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_conf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_D_conf_4; ++l) {
            internal.aux_ICU_W_D_conf[i - 1 + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_123 * (l - 1)] = internal.aux_ICU_W_D_conf[internal.dim_aux_ICU_W_D_conf_123 * (l - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_D_conf_progress[internal.dim_n_ICU_W_D_conf_progress_123 * (l - 1) + internal.dim_n_ICU_W_D_conf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_W_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_D_conf_4; ++l) {
            internal.aux_ICU_W_D_conf[i - 1 + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_123 * (l - 1)] = internal.aux_ICU_W_D_conf[internal.dim_aux_ICU_W_D_conf_123 * (l - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + i - 1] - internal.n_ICU_W_D_conf_progress[internal.dim_n_ICU_W_D_conf_progress_123 * (l - 1) + internal.dim_n_ICU_W_D_conf_progress_12 * (k - 1) + internal.dim_n_ICU_W_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_W_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_D_unconf_4; ++l) {
            internal.aux_ICU_W_D_unconf[i - 1 + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_123 * (l - 1)] = ICU_W_D_unconf[internal.dim_ICU_W_D_unconf_123 * (l - 1) + internal.dim_ICU_W_D_unconf_12 * (k - 1) + internal.dim_ICU_W_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_ICU_W_D_unconf_4; ++l) {
          internal.aux_ICU_W_D_unconf[i - 1 + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_123 * (l - 1)] = internal.aux_ICU_W_D_unconf[internal.dim_aux_ICU_W_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_unconf_to_ICU_W_D_unconf[internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 * (l - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_D_unconf_4; ++l) {
            internal.aux_ICU_W_D_unconf[i - 1 + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_123 * (l - 1)] = internal.aux_ICU_W_D_unconf[internal.dim_aux_ICU_W_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_W_D_unconf_progress[internal.dim_n_ICU_W_D_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_W_D_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_W_D; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_D_unconf_4; ++l) {
            internal.aux_ICU_W_D_unconf[i - 1 + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_123 * (l - 1)] = internal.aux_ICU_W_D_unconf[internal.dim_aux_ICU_W_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_W_D_unconf_progress[internal.dim_n_ICU_W_D_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_W_D_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_E_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_E_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_E_next_vacc_class_3; ++k) {
          for (int l = 1; l <= internal.dim_n_E_next_vacc_class_4; ++l) {
            internal.n_E_next_vacc_class[i - 1 + internal.dim_n_E_next_vacc_class_1 * (j - 1) + internal.dim_n_E_next_vacc_class_12 * (k - 1) + internal.dim_n_E_next_vacc_class_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(E[internal.dim_E_123 * (l - 1) + internal.dim_E_12 * (k - 1) + internal.dim_E_1 * (j - 1) + i - 1] - internal.n_E_progress[internal.dim_n_E_progress_123 * (l - 1) + internal.dim_n_E_progress_12 * (k - 1) + internal.dim_n_E_progress_1 * (j - 1) + i - 1]), internal.p_E_next_vacc_class[internal.dim_p_E_next_vacc_class_123 * (l - 1) + internal.dim_p_E_next_vacc_class_12 * (k - 1) + internal.dim_p_E_next_vacc_class_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_EE_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_EE_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_EE_next_vacc_class_3; ++k) {
          for (int l = 1; l <= internal.dim_n_EE_next_vacc_class_4; ++l) {
            internal.n_EE_next_vacc_class[i - 1 + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + internal.dim_n_EE_next_vacc_class_12 * (k - 1) + internal.dim_n_EE_next_vacc_class_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_E_progress[internal.dim_n_E_progress_123 * (l - 1) + internal.dim_n_E_progress_12 * (k - 1) + internal.dim_n_E_progress_1 * (j - 1) + i - 1]), internal.p_E_next_vacc_class[internal.dim_p_E_next_vacc_class_123 * (l - 1) + internal.dim_p_E_next_vacc_class_12 * (k - 1) + internal.dim_p_E_next_vacc_class_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_A_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_A_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_A_next_vacc_class_3; ++k) {
          for (int l = 1; l <= internal.dim_n_I_A_next_vacc_class_4; ++l) {
            internal.n_I_A_next_vacc_class[i - 1 + internal.dim_n_I_A_next_vacc_class_1 * (j - 1) + internal.dim_n_I_A_next_vacc_class_12 * (k - 1) + internal.dim_n_I_A_next_vacc_class_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(I_A[internal.dim_I_A_123 * (l - 1) + internal.dim_I_A_12 * (k - 1) + internal.dim_I_A_1 * (j - 1) + i - 1] - internal.n_I_A_progress[internal.dim_n_I_A_progress_123 * (l - 1) + internal.dim_n_I_A_progress_12 * (k - 1) + internal.dim_n_I_A_progress_1 * (j - 1) + i - 1]), internal.p_I_A_next_vacc_class[internal.dim_p_I_A_next_vacc_class_123 * (l - 1) + internal.dim_p_I_A_next_vacc_class_12 * (k - 1) + internal.dim_p_I_A_next_vacc_class_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_hosp_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_hosp_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_hosp_3; ++k) {
          internal.n_I_C_to_hosp[i - 1 + internal.dim_n_I_C_to_hosp_1 * (j - 1) + internal.dim_n_I_C_to_hosp_12 * (k - 1)] = internal.n_I_C_progress[internal.dim_n_I_C_progress_123 * (k - 1) + internal.dim_n_I_C_progress_12 * (internal.k_C - 1) + internal.dim_n_I_C_progress_1 * (j - 1) + i - 1] - internal.n_I_C_to_R[internal.dim_n_I_C_to_R_12 * (k - 1) + internal.dim_n_I_C_to_R_1 * (j - 1) + i - 1] - internal.n_I_C_to_G_D[internal.dim_n_I_C_to_G_D_12 * (k - 1) + internal.dim_n_I_C_to_G_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_D_unconf_to_conf_4; ++l) {
            internal.n_ICU_D_unconf_to_conf[i - 1 + internal.dim_n_ICU_D_unconf_to_conf_1 * (j - 1) + internal.dim_n_ICU_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_D_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_ICU_D_unconf[internal.dim_aux_ICU_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_3; ++k) {
          internal.n_ICU_pre_conf_to_ICU_W_R_conf[i - 1 + internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * (j - 1) + internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_12 * (k - 1)] = internal.n_ICU_pre_conf_progress[internal.dim_n_ICU_pre_conf_progress_123 * (k - 1) + internal.dim_n_ICU_pre_conf_progress_12 * (internal.k_ICU_pre - 1) + internal.dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_conf_to_ICU_D_conf[internal.dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (k - 1) + internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_conf_to_ICU_W_D_conf[internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 * (k - 1) + internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3; ++k) {
          internal.n_ICU_pre_unconf_to_ICU_W_R_unconf[i - 1 + internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * (j - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12 * (k - 1)] = internal.n_ICU_pre_unconf_progress[internal.dim_n_ICU_pre_unconf_progress_123 * (k - 1) + internal.dim_n_ICU_pre_unconf_progress_12 * (internal.k_ICU_pre - 1) + internal.dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_ICU_D_unconf[internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_ICU_W_D_unconf[internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_II_A_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_II_A_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_II_A_next_vacc_class_3; ++k) {
          for (int l = 1; l <= internal.dim_n_II_A_next_vacc_class_4; ++l) {
            internal.n_II_A_next_vacc_class[i - 1 + internal.dim_n_II_A_next_vacc_class_1 * (j - 1) + internal.dim_n_II_A_next_vacc_class_12 * (k - 1) + internal.dim_n_II_A_next_vacc_class_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_I_A_progress[internal.dim_n_I_A_progress_123 * (l - 1) + internal.dim_n_I_A_progress_12 * (k - 1) + internal.dim_n_I_A_progress_1 * (j - 1) + i - 1]), internal.p_I_A_next_vacc_class[internal.dim_p_I_A_next_vacc_class_123 * (l - 1) + internal.dim_p_I_A_next_vacc_class_12 * (k - 1) + internal.dim_p_I_A_next_vacc_class_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_R_next_vacc_class_tmp_1; ++i) {
      for (int j = 1; j <= internal.dim_n_R_next_vacc_class_tmp_2; ++j) {
        for (int k = 1; k <= internal.dim_n_R_next_vacc_class_tmp_3; ++k) {
          internal.n_R_next_vacc_class_tmp[i - 1 + internal.dim_n_R_next_vacc_class_tmp_1 * (j - 1) + internal.dim_n_R_next_vacc_class_tmp_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(R[internal.dim_R_12 * (k - 1) + internal.dim_R_1 * (j - 1) + i - 1] - internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1]), internal.p_R_next_vacc_class[internal.dim_p_R_next_vacc_class_12 * (k - 1) + internal.dim_p_R_next_vacc_class_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_RS_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_RS_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_RS_next_vacc_class_3; ++k) {
          internal.n_RS_next_vacc_class[i - 1 + internal.dim_n_RS_next_vacc_class_1 * (j - 1) + internal.dim_n_RS_next_vacc_class_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1]), internal.p_R_next_vacc_class[internal.dim_p_R_next_vacc_class_12 * (k - 1) + internal.dim_p_R_next_vacc_class_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_sero_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_sero_pos_2; ++j) {
        for (int k = 1; k <= internal.dim_new_T_sero_pos_3; ++k) {
          for (int l = 1; l <= internal.dim_new_T_sero_pos_4; ++l) {
            internal.new_T_sero_pos[i - 1 + internal.dim_new_T_sero_pos_1 * (j - 1) + internal.dim_new_T_sero_pos_12 * (k - 1) + internal.dim_new_T_sero_pos_123 * (l - 1)] = T_sero_pos[internal.dim_T_sero_pos_123 * (l - 1) + internal.dim_T_sero_pos_12 * (k - 1) + internal.dim_T_sero_pos_1 * (j - 1) + i - 1] - internal.n_T_sero_pos_progress[internal.dim_n_T_sero_pos_progress_123 * (l - 1) + internal.dim_n_T_sero_pos_progress_12 * (k - 1) + internal.dim_n_T_sero_pos_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_sero_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_sero_pos_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_T_sero_pos_4; ++l) {
          internal.new_T_sero_pos[i - 1 + internal.dim_new_T_sero_pos_1 * (j - 1) + internal.dim_new_T_sero_pos_12 * (k - 1) + internal.dim_new_T_sero_pos_123 * (l - 1)] = internal.new_T_sero_pos[internal.dim_new_T_sero_pos_123 * (l - 1) + internal.dim_new_T_sero_pos_12 * 0 + internal.dim_new_T_sero_pos_1 * (j - 1) + i - 1] + internal.n_T_sero_pre_to_T_sero_pos[internal.dim_n_T_sero_pre_to_T_sero_pos_12 * (l - 1) + internal.dim_n_T_sero_pre_to_T_sero_pos_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_sero_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_sero_pos_2; ++j) {
        for (int k = 2; k <= internal.k_sero_pos; ++k) {
          for (int l = 1; l <= internal.dim_new_T_sero_pos_4; ++l) {
            internal.new_T_sero_pos[i - 1 + internal.dim_new_T_sero_pos_1 * (j - 1) + internal.dim_new_T_sero_pos_12 * (k - 1) + internal.dim_new_T_sero_pos_123 * (l - 1)] = internal.new_T_sero_pos[internal.dim_new_T_sero_pos_123 * (l - 1) + internal.dim_new_T_sero_pos_12 * (k - 1) + internal.dim_new_T_sero_pos_1 * (j - 1) + i - 1] + internal.n_T_sero_pos_progress[internal.dim_n_T_sero_pos_progress_123 * (l - 1) + internal.dim_n_T_sero_pos_progress_12 * (k - 1 - 1) + internal.dim_n_T_sero_pos_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_W_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_W_D_conf_4; ++l) {
            internal.new_W_D_conf[i - 1 + internal.dim_new_W_D_conf_1 * (j - 1) + internal.dim_new_W_D_conf_12 * (k - 1) + internal.dim_new_W_D_conf_123 * (l - 1)] = internal.aux_W_D_conf[internal.dim_aux_W_D_conf_123 * (l - 1) + internal.dim_aux_W_D_conf_12 * (k - 1) + internal.dim_aux_W_D_conf_1 * (j - 1) + i - 1] + internal.n_W_D_unconf_to_conf[internal.dim_n_W_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_W_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_W_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_W_D_unconf_4; ++l) {
            internal.new_W_D_unconf[i - 1 + internal.dim_new_W_D_unconf_1 * (j - 1) + internal.dim_new_W_D_unconf_12 * (k - 1) + internal.dim_new_W_D_unconf_123 * (l - 1)] = internal.aux_W_D_unconf[internal.dim_aux_W_D_unconf_123 * (l - 1) + internal.dim_aux_W_D_unconf_12 * (k - 1) + internal.dim_aux_W_D_unconf_1 * (j - 1) + i - 1] - internal.n_W_D_unconf_to_conf[internal.dim_n_W_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_W_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_W_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_W_R_conf_4; ++l) {
            internal.new_W_R_conf[i - 1 + internal.dim_new_W_R_conf_1 * (j - 1) + internal.dim_new_W_R_conf_12 * (k - 1) + internal.dim_new_W_R_conf_123 * (l - 1)] = internal.aux_W_R_conf[internal.dim_aux_W_R_conf_123 * (l - 1) + internal.dim_aux_W_R_conf_12 * (k - 1) + internal.dim_aux_W_R_conf_1 * (j - 1) + i - 1] + internal.n_W_R_unconf_to_conf[internal.dim_n_W_R_unconf_to_conf_123 * (l - 1) + internal.dim_n_W_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_W_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_W_R_unconf_4; ++l) {
            internal.new_W_R_unconf[i - 1 + internal.dim_new_W_R_unconf_1 * (j - 1) + internal.dim_new_W_R_unconf_12 * (k - 1) + internal.dim_new_W_R_unconf_123 * (l - 1)] = internal.aux_W_R_unconf[internal.dim_aux_W_R_unconf_123 * (l - 1) + internal.dim_aux_W_R_unconf_12 * (k - 1) + internal.dim_aux_W_R_unconf_1 * (j - 1) + i - 1] - internal.n_W_R_unconf_to_conf[internal.dim_n_W_R_unconf_to_conf_123 * (l - 1) + internal.dim_n_W_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_p_SE_1; ++i) {
      for (int j = 1; j <= internal.dim_p_SE_2; ++j) {
        internal.p_SE[i - 1 + internal.dim_p_SE_1 * (j - 1)] = 1 - std::exp(- odin_sum2(internal.lambda.data(), i - 1, i, 0, internal.dim_lambda_2, internal.dim_lambda_1) * internal.rel_susceptibility[internal.dim_rel_susceptibility_1 * (j - 1) + i - 1] * internal.dt);
      }
    }
    state_next[11] = new_D_comm_tot;
    state_next[10] = new_D_hosp_tot;
    state_next[12] = new_D_hosp_tot + new_D_comm_tot;
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_W_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_R_conf_4; ++l) {
            internal.aux_ICU_W_R_conf[i - 1 + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_123 * (l - 1)] = ICU_W_R_conf[internal.dim_ICU_W_R_conf_123 * (l - 1) + internal.dim_ICU_W_R_conf_12 * (k - 1) + internal.dim_ICU_W_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_ICU_W_R_conf_4; ++l) {
          internal.aux_ICU_W_R_conf[i - 1 + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_123 * (l - 1)] = internal.aux_ICU_W_R_conf[internal.dim_aux_ICU_W_R_conf_123 * (l - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_conf_to_ICU_W_R_conf[internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_12 * (l - 1) + internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_conf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_R_conf_4; ++l) {
            internal.aux_ICU_W_R_conf[i - 1 + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_123 * (l - 1)] = internal.aux_ICU_W_R_conf[internal.dim_aux_ICU_W_R_conf_123 * (l - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_R_conf_progress[internal.dim_n_ICU_W_R_conf_progress_123 * (l - 1) + internal.dim_n_ICU_W_R_conf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_W_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_R_conf_4; ++l) {
            internal.aux_ICU_W_R_conf[i - 1 + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_123 * (l - 1)] = internal.aux_ICU_W_R_conf[internal.dim_aux_ICU_W_R_conf_123 * (l - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + i - 1] - internal.n_ICU_W_R_conf_progress[internal.dim_n_ICU_W_R_conf_progress_123 * (l - 1) + internal.dim_n_ICU_W_R_conf_progress_12 * (k - 1) + internal.dim_n_ICU_W_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_ICU_W_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_R_unconf_4; ++l) {
            internal.aux_ICU_W_R_unconf[i - 1 + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_123 * (l - 1)] = ICU_W_R_unconf[internal.dim_ICU_W_R_unconf_123 * (l - 1) + internal.dim_ICU_W_R_unconf_12 * (k - 1) + internal.dim_ICU_W_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_ICU_W_R_unconf_4; ++l) {
          internal.aux_ICU_W_R_unconf[i - 1 + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_123 * (l - 1)] = internal.aux_ICU_W_R_unconf[internal.dim_aux_ICU_W_R_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_unconf_to_ICU_W_R_unconf[internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12 * (l - 1) + internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_unconf_2; ++j) {
        for (int k = 2; k <= internal.k_ICU_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_R_unconf_4; ++l) {
            internal.aux_ICU_W_R_unconf[i - 1 + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_123 * (l - 1)] = internal.aux_ICU_W_R_unconf[internal.dim_aux_ICU_W_R_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + i - 1] + internal.n_ICU_W_R_unconf_progress[internal.dim_n_ICU_W_R_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_W_R_unconf_progress_12 * (k - 1 - 1) + internal.dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.k_ICU_W_R; ++k) {
          for (int l = 1; l <= internal.dim_aux_ICU_W_R_unconf_4; ++l) {
            internal.aux_ICU_W_R_unconf[i - 1 + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_123 * (l - 1)] = internal.aux_ICU_W_R_unconf[internal.dim_aux_ICU_W_R_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_W_R_unconf_progress[internal.dim_n_ICU_W_R_unconf_progress_123 * (l - 1) + internal.dim_n_ICU_W_R_unconf_progress_12 * (k - 1) + internal.dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_EE_1; ++i) {
      for (int j = 1; j <= internal.dim_n_EE_2; ++j) {
        for (int k = 1; k <= internal.dim_n_EE_3; ++k) {
          for (int l = 1; l <= internal.dim_n_EE_4; ++l) {
            internal.n_EE[i - 1 + internal.dim_n_EE_1 * (j - 1) + internal.dim_n_EE_12 * (k - 1) + internal.dim_n_EE_123 * (l - 1)] = internal.n_E_progress[internal.dim_n_E_progress_123 * (l - 1) + internal.dim_n_E_progress_12 * (k - 1) + internal.dim_n_E_progress_1 * (j - 1) + i - 1] - internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (l - 1) + internal.dim_n_EE_next_vacc_class_12 * (k - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_EI_A_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_EI_A_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_EI_A_next_vacc_class_3; ++k) {
          internal.n_EI_A_next_vacc_class[i - 1 + internal.dim_n_EI_A_next_vacc_class_1 * (j - 1) + internal.dim_n_EI_A_next_vacc_class_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (k - 1) + internal.dim_n_EE_next_vacc_class_12 * (internal.k_E - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1]), 1 - internal.p_C[i - 1] * internal.rel_p_sympt[internal.dim_rel_p_sympt_1 * (k - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_ICU_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_ICU_pre_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_ICU_pre_3; ++k) {
          internal.n_I_C_to_ICU_pre[i - 1 + internal.dim_n_I_C_to_ICU_pre_1 * (j - 1) + internal.dim_n_I_C_to_ICU_pre_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_I_C_to_hosp[internal.dim_n_I_C_to_hosp_12 * (k - 1) + internal.dim_n_I_C_to_hosp_1 * (j - 1) + i - 1]), internal.p_ICU_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_W_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_W_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_W_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_W_D_unconf_to_conf_4; ++l) {
            internal.n_ICU_W_D_unconf_to_conf[i - 1 + internal.dim_n_ICU_W_D_unconf_to_conf_1 * (j - 1) + internal.dim_n_ICU_W_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_W_D_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_ICU_W_D_unconf[internal.dim_aux_ICU_W_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_II_A_1; ++i) {
      for (int j = 1; j <= internal.dim_n_II_A_2; ++j) {
        for (int k = 1; k <= internal.dim_n_II_A_3; ++k) {
          for (int l = 1; l <= internal.dim_n_II_A_4; ++l) {
            internal.n_II_A[i - 1 + internal.dim_n_II_A_1 * (j - 1) + internal.dim_n_II_A_12 * (k - 1) + internal.dim_n_II_A_123 * (l - 1)] = internal.n_I_A_progress[internal.dim_n_I_A_progress_123 * (l - 1) + internal.dim_n_I_A_progress_12 * (k - 1) + internal.dim_n_I_A_progress_1 * (j - 1) + i - 1] - internal.n_II_A_next_vacc_class[internal.dim_n_II_A_next_vacc_class_123 * (l - 1) + internal.dim_n_II_A_next_vacc_class_12 * (k - 1) + internal.dim_n_II_A_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_R_next_vacc_class_capped_1; ++i) {
      for (int j = 1; j <= internal.dim_n_R_next_vacc_class_capped_2; ++j) {
        for (int k = 1; k <= internal.dim_n_R_next_vacc_class_capped_3; ++k) {
          internal.n_R_next_vacc_class_capped[i - 1 + internal.dim_n_R_next_vacc_class_capped_1 * (j - 1) + internal.dim_n_R_next_vacc_class_capped_12 * (k - 1)] = std::min(internal.n_R_next_vacc_class_tmp[internal.dim_n_R_next_vacc_class_tmp_12 * (k - 1) + internal.dim_n_R_next_vacc_class_tmp_1 * (j - 1) + i - 1], std::min(T_sero_neg[internal.dim_T_sero_neg_12 * (k - 1) + internal.dim_T_sero_neg_1 * (j - 1) + i - 1] - internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1], T_PCR_neg[internal.dim_T_PCR_neg_12 * (k - 1) + internal.dim_T_PCR_neg_1 * (j - 1) + i - 1] - internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1]));
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_RS_1; ++i) {
      for (int j = 1; j <= internal.dim_n_RS_2; ++j) {
        for (int k = 1; k <= internal.dim_n_RS_3; ++k) {
          internal.n_RS[i - 1 + internal.dim_n_RS_1 * (j - 1) + internal.dim_n_RS_12 * (k - 1)] = internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1] - internal.n_RS_next_vacc_class[internal.dim_n_RS_next_vacc_class_12 * (k - 1) + internal.dim_n_RS_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_S_progress_tot_1; ++i) {
      for (int j = 1; j <= internal.dim_n_S_progress_tot_2; ++j) {
        internal.n_S_progress_tot[i - 1 + internal.dim_n_S_progress_tot_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(S[internal.dim_S_1 * (j - 1) + i - 1]), internal.p_SE[internal.dim_p_SE_1 * (j - 1) + i - 1]);
      }
    }
    for (int i = 1; i <= internal.dim_new_G_D_1; ++i) {
      for (int j = 1; j <= internal.dim_new_G_D_2; ++j) {
        for (int k = 1; k <= internal.dim_new_G_D_3; ++k) {
          for (int l = 1; l <= internal.dim_new_G_D_4; ++l) {
            internal.new_G_D[i - 1 + internal.dim_new_G_D_1 * (j - 1) + internal.dim_new_G_D_12 * (k - 1) + internal.dim_new_G_D_123 * (l - 1)] = G_D[internal.dim_G_D_123 * (l - 1) + internal.dim_G_D_12 * (k - 1) + internal.dim_G_D_1 * (j - 1) + i - 1] + internal.aux_G_D[internal.dim_aux_G_D_123 * (l - 1) + internal.dim_aux_G_D_12 * (k - 1) + internal.dim_aux_G_D_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_D_conf_4; ++l) {
            internal.new_ICU_D_conf[i - 1 + internal.dim_new_ICU_D_conf_1 * (j - 1) + internal.dim_new_ICU_D_conf_12 * (k - 1) + internal.dim_new_ICU_D_conf_123 * (l - 1)] = internal.aux_ICU_D_conf[internal.dim_aux_ICU_D_conf_123 * (l - 1) + internal.dim_aux_ICU_D_conf_12 * (k - 1) + internal.dim_aux_ICU_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_D_unconf_to_conf[internal.dim_n_ICU_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_D_unconf_4; ++l) {
            internal.new_ICU_D_unconf[i - 1 + internal.dim_new_ICU_D_unconf_1 * (j - 1) + internal.dim_new_ICU_D_unconf_12 * (k - 1) + internal.dim_new_ICU_D_unconf_123 * (l - 1)] = internal.aux_ICU_D_unconf[internal.dim_aux_ICU_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_D_unconf_to_conf[internal.dim_n_ICU_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_cum_admit_by_age; ++i) {
      state_next[internal.offset_variable_cum_admit_by_age + i - 1] = cum_admit_by_age[i - 1] + odin_sum3(internal.n_I_C_to_hosp.data(), i - 1, i, 0, internal.dim_n_I_C_to_hosp_2, 0, internal.dim_n_I_C_to_hosp_3, internal.dim_n_I_C_to_hosp_1, internal.dim_n_I_C_to_hosp_12);
    }
    for (int i = 1; i <= internal.dim_cum_n_E_vaccinated_1; ++i) {
      for (int j = 1; j <= internal.dim_cum_n_E_vaccinated_2; ++j) {
        state_next[internal.offset_variable_cum_n_E_vaccinated + i - 1 + internal.dim_cum_n_E_vaccinated_1 * (j - 1)] = cum_n_E_vaccinated[internal.dim_cum_n_E_vaccinated_1 * (j - 1) + i - 1] + odin_sum4(internal.n_E_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_E_next_vacc_class_2, 0, internal.dim_n_E_next_vacc_class_3, j - 1, j, internal.dim_n_E_next_vacc_class_1, internal.dim_n_E_next_vacc_class_12, internal.dim_n_E_next_vacc_class_123) + odin_sum4(internal.n_EE_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_EE_next_vacc_class_2, 0, internal.dim_n_EE_next_vacc_class_3, j - 1, j, internal.dim_n_EE_next_vacc_class_1, internal.dim_n_EE_next_vacc_class_12, internal.dim_n_EE_next_vacc_class_123);
      }
    }
    for (int i = 1; i <= internal.dim_cum_n_I_A_vaccinated_1; ++i) {
      for (int j = 1; j <= internal.dim_cum_n_I_A_vaccinated_2; ++j) {
        state_next[internal.offset_variable_cum_n_I_A_vaccinated + i - 1 + internal.dim_cum_n_I_A_vaccinated_1 * (j - 1)] = cum_n_I_A_vaccinated[internal.dim_cum_n_I_A_vaccinated_1 * (j - 1) + i - 1] + odin_sum4(internal.n_I_A_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_I_A_next_vacc_class_2, 0, internal.dim_n_I_A_next_vacc_class_3, j - 1, j, internal.dim_n_I_A_next_vacc_class_1, internal.dim_n_I_A_next_vacc_class_12, internal.dim_n_I_A_next_vacc_class_123) + odin_sum4(internal.n_II_A_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_II_A_next_vacc_class_2, 0, internal.dim_n_II_A_next_vacc_class_3, j - 1, j, internal.dim_n_II_A_next_vacc_class_1, internal.dim_n_II_A_next_vacc_class_12, internal.dim_n_II_A_next_vacc_class_123);
      }
    }
    state_next[13] = odin_sum4(internal.new_T_sero_pos.data(), 3, 13, 0, internal.dim_new_T_sero_pos_2, 0, internal.dim_new_T_sero_pos_3, 0, internal.dim_new_T_sero_pos_4, internal.dim_new_T_sero_pos_1, internal.dim_new_T_sero_pos_12, internal.dim_new_T_sero_pos_123);
    for (int i = 1; i <= internal.dim_T_sero_pos_1; ++i) {
      for (int j = 1; j <= internal.dim_T_sero_pos_2; ++j) {
        for (int k = 1; k <= internal.dim_T_sero_pos_3; ++k) {
          for (int l = 1; l <= internal.dim_T_sero_pos_4; ++l) {
            state_next[internal.offset_variable_T_sero_pos + i - 1 + internal.dim_T_sero_pos_1 * (j - 1) + internal.dim_T_sero_pos_12 * (k - 1) + internal.dim_T_sero_pos_123 * (l - 1)] = internal.new_T_sero_pos[internal.dim_new_T_sero_pos_123 * (l - 1) + internal.dim_new_T_sero_pos_12 * (k - 1) + internal.dim_new_T_sero_pos_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_W_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_W_D_conf_4; ++l) {
            state_next[internal.offset_variable_W_D_conf + i - 1 + internal.dim_W_D_conf_1 * (j - 1) + internal.dim_W_D_conf_12 * (k - 1) + internal.dim_W_D_conf_123 * (l - 1)] = internal.new_W_D_conf[internal.dim_new_W_D_conf_123 * (l - 1) + internal.dim_new_W_D_conf_12 * (k - 1) + internal.dim_new_W_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_W_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_W_D_unconf_4; ++l) {
            state_next[internal.offset_variable_W_D_unconf + i - 1 + internal.dim_W_D_unconf_1 * (j - 1) + internal.dim_W_D_unconf_12 * (k - 1) + internal.dim_W_D_unconf_123 * (l - 1)] = internal.new_W_D_unconf[internal.dim_new_W_D_unconf_123 * (l - 1) + internal.dim_new_W_D_unconf_12 * (k - 1) + internal.dim_new_W_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_W_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_W_R_conf_4; ++l) {
            state_next[internal.offset_variable_W_R_conf + i - 1 + internal.dim_W_R_conf_1 * (j - 1) + internal.dim_W_R_conf_12 * (k - 1) + internal.dim_W_R_conf_123 * (l - 1)] = internal.new_W_R_conf[internal.dim_new_W_R_conf_123 * (l - 1) + internal.dim_new_W_R_conf_12 * (k - 1) + internal.dim_new_W_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_W_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_W_R_unconf_4; ++l) {
            state_next[internal.offset_variable_W_R_unconf + i - 1 + internal.dim_W_R_unconf_1 * (j - 1) + internal.dim_W_R_unconf_12 * (k - 1) + internal.dim_W_R_unconf_123 * (l - 1)] = internal.new_W_R_unconf[internal.dim_new_W_R_unconf_123 * (l - 1) + internal.dim_new_W_R_unconf_12 * (k - 1) + internal.dim_new_W_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_com_to_T_sero_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_n_com_to_T_sero_pre_2; ++j) {
        int k = 1;
        int l = 1;
        internal.n_com_to_T_sero_pre[i - 1 + internal.dim_n_com_to_T_sero_pre_1 * (j - 1) + internal.dim_n_com_to_T_sero_pre_12 * (k - 1) + internal.dim_n_com_to_T_sero_pre_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_EE[internal.dim_n_EE_123 * 0 + internal.dim_n_EE_12 * (internal.k_E - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1] + internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (internal.n_vacc_classes - 1) + internal.dim_n_EE_next_vacc_class_12 * (internal.k_E - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1]), internal.p_sero_pre_1);
      }
    }
    for (int i = 1; i <= internal.dim_n_com_to_T_sero_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_n_com_to_T_sero_pre_2; ++j) {
        int k = 1;
        for (int l = 2; l <= internal.n_vacc_classes; ++l) {
          internal.n_com_to_T_sero_pre[i - 1 + internal.dim_n_com_to_T_sero_pre_1 * (j - 1) + internal.dim_n_com_to_T_sero_pre_12 * (k - 1) + internal.dim_n_com_to_T_sero_pre_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_EE[internal.dim_n_EE_123 * (l - 1) + internal.dim_n_EE_12 * (internal.k_E - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1] + internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (l - 1 - 1) + internal.dim_n_EE_next_vacc_class_12 * (internal.k_E - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1]), internal.p_sero_pre_1);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_com_to_T_sero_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_n_com_to_T_sero_pre_2; ++j) {
        int k = 2;
        int l = 1;
        internal.n_com_to_T_sero_pre[i - 1 + internal.dim_n_com_to_T_sero_pre_1 * (j - 1) + internal.dim_n_com_to_T_sero_pre_12 * (k - 1) + internal.dim_n_com_to_T_sero_pre_123 * (l - 1)] = internal.n_EE[internal.dim_n_EE_123 * 0 + internal.dim_n_EE_12 * (internal.k_E - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1] + internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (internal.n_vacc_classes - 1) + internal.dim_n_EE_next_vacc_class_12 * (internal.k_E - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1] - internal.n_com_to_T_sero_pre[internal.dim_n_com_to_T_sero_pre_123 * 0 + internal.dim_n_com_to_T_sero_pre_12 * 0 + internal.dim_n_com_to_T_sero_pre_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_n_com_to_T_sero_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_n_com_to_T_sero_pre_2; ++j) {
        int k = 2;
        for (int l = 2; l <= internal.n_vacc_classes; ++l) {
          internal.n_com_to_T_sero_pre[i - 1 + internal.dim_n_com_to_T_sero_pre_1 * (j - 1) + internal.dim_n_com_to_T_sero_pre_12 * (k - 1) + internal.dim_n_com_to_T_sero_pre_123 * (l - 1)] = internal.n_EE[internal.dim_n_EE_123 * (l - 1) + internal.dim_n_EE_12 * (internal.k_E - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1] + internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (l - 1 - 1) + internal.dim_n_EE_next_vacc_class_12 * (internal.k_E - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1] - internal.n_com_to_T_sero_pre[internal.dim_n_com_to_T_sero_pre_123 * (l - 1) + internal.dim_n_com_to_T_sero_pre_12 * 0 + internal.dim_n_com_to_T_sero_pre_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_EI_A_1; ++i) {
      for (int j = 1; j <= internal.dim_n_EI_A_2; ++j) {
        for (int k = 1; k <= internal.dim_n_EI_A_3; ++k) {
          internal.n_EI_A[i - 1 + internal.dim_n_EI_A_1 * (j - 1) + internal.dim_n_EI_A_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_EE[internal.dim_n_EE_123 * (k - 1) + internal.dim_n_EE_12 * (internal.k_E - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1]), 1 - internal.p_C[i - 1] * internal.rel_p_sympt[internal.dim_rel_p_sympt_1 * (k - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_EI_C_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_EI_C_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_EI_C_next_vacc_class_3; ++k) {
          internal.n_EI_C_next_vacc_class[i - 1 + internal.dim_n_EI_C_next_vacc_class_1 * (j - 1) + internal.dim_n_EI_C_next_vacc_class_12 * (k - 1)] = internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (k - 1) + internal.dim_n_EE_next_vacc_class_12 * (internal.k_E - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1] - internal.n_EI_A_next_vacc_class[internal.dim_n_EI_A_next_vacc_class_12 * (k - 1) + internal.dim_n_EI_A_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_hosp_non_ICU_1; ++i) {
      for (int j = 1; j <= internal.dim_n_hosp_non_ICU_2; ++j) {
        for (int k = 1; k <= internal.dim_n_hosp_non_ICU_3; ++k) {
          internal.n_hosp_non_ICU[i - 1 + internal.dim_n_hosp_non_ICU_1 * (j - 1) + internal.dim_n_hosp_non_ICU_12 * (k - 1)] = internal.n_I_C_to_hosp[internal.dim_n_I_C_to_hosp_12 * (k - 1) + internal.dim_n_I_C_to_hosp_1 * (j - 1) + i - 1] - internal.n_I_C_to_ICU_pre[internal.dim_n_I_C_to_ICU_pre_12 * (k - 1) + internal.dim_n_I_C_to_ICU_pre_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_ICU_pre_conf_3; ++k) {
          internal.n_I_C_to_ICU_pre_conf[i - 1 + internal.dim_n_I_C_to_ICU_pre_conf_1 * (j - 1) + internal.dim_n_I_C_to_ICU_pre_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_I_C_to_ICU_pre[internal.dim_n_I_C_to_ICU_pre_12 * (k - 1) + internal.dim_n_I_C_to_ICU_pre_1 * (j - 1) + i - 1]), internal.p_star_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_ICU_W_R_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_ICU_W_R_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_ICU_W_R_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_n_ICU_W_R_unconf_to_conf_4; ++l) {
            internal.n_ICU_W_R_unconf_to_conf[i - 1 + internal.dim_n_ICU_W_R_unconf_to_conf_1 * (j - 1) + internal.dim_n_ICU_W_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_W_R_unconf_to_conf_123 * (l - 1)] = dust::distr::rbinom(rng_state, std::round(internal.aux_ICU_W_R_unconf[internal.dim_aux_ICU_W_R_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + i - 1]), internal.p_test);
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_R_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_R_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_R_next_vacc_class_3; ++k) {
          internal.n_R_next_vacc_class[i - 1 + internal.dim_n_R_next_vacc_class_1 * (j - 1) + internal.dim_n_R_next_vacc_class_12 * (k - 1)] = (internal.model_pcr_and_serology == 1 ? internal.n_R_next_vacc_class_capped[internal.dim_n_R_next_vacc_class_capped_12 * (k - 1) + internal.dim_n_R_next_vacc_class_capped_1 * (j - 1) + i - 1] : internal.n_R_next_vacc_class_tmp[internal.dim_n_R_next_vacc_class_tmp_12 * (k - 1) + internal.dim_n_R_next_vacc_class_tmp_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_S_progress_1; ++i) {
      int j = 1;
      for (int k = 1; k <= internal.dim_n_S_progress_3; ++k) {
        internal.n_S_progress[i - 1 + internal.dim_n_S_progress_1 * (j - 1) + internal.dim_n_S_progress_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_S_progress_tot[internal.dim_n_S_progress_tot_1 * (k - 1) + i - 1]), internal.lambda[internal.dim_lambda_1 * 0 + i - 1] / (real_t) odin_sum2(internal.lambda.data(), i - 1, i, 0, internal.dim_lambda_2, internal.dim_lambda_1));
      }
    }
    for (int i = 1; i <= internal.dim_n_S_progress_1; ++i) {
      for (int j = 2; j <= internal.n_strains; ++j) {
        for (int k = 1; k <= internal.dim_n_S_progress_3; ++k) {
          internal.n_S_progress[i - 1 + internal.dim_n_S_progress_1 * (j - 1) + internal.dim_n_S_progress_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_S_progress_tot[internal.dim_n_S_progress_tot_1 * (k - 1) + i - 1] - odin_sum3(internal.n_S_progress.data(), i - 1, i, 0, j - 1, k - 1, k, internal.dim_n_S_progress_1, internal.dim_n_S_progress_12)), internal.lambda[internal.dim_lambda_1 * (j - 1) + i - 1] / (real_t) odin_sum2(internal.lambda.data(), i - 1, i, j - 1, internal.n_strains, internal.dim_lambda_1));
        }
      }
    }
    {
       int i = 4;
       for (int j = 2; j <= internal.n_strains; ++j) {
         int k = 1;
         internal.n_S_progress[i - 1 + internal.dim_n_S_progress_1 * (j - 1) + internal.dim_n_S_progress_12 * (k - 1)] = std::min(internal.n_S_progress[internal.dim_n_S_progress_12 * (k - 1) + internal.dim_n_S_progress_1 * (j - 1) + i - 1] + strain_seed, internal.n_S_progress[internal.dim_n_S_progress_12 * (k - 1) + internal.dim_n_S_progress_1 * (j - 1) + i - 1] + S[internal.dim_S_1 * (k - 1) + i - 1] - odin_sum3(internal.n_S_progress.data(), i - 1, i, 0, internal.dim_n_S_progress_2, k - 1, k, internal.dim_n_S_progress_1, internal.dim_n_S_progress_12));
       }
    }
    for (int i = 1; i <= internal.dim_new_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_W_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_W_D_conf_4; ++l) {
            internal.new_ICU_W_D_conf[i - 1 + internal.dim_new_ICU_W_D_conf_1 * (j - 1) + internal.dim_new_ICU_W_D_conf_12 * (k - 1) + internal.dim_new_ICU_W_D_conf_123 * (l - 1)] = internal.aux_ICU_W_D_conf[internal.dim_aux_ICU_W_D_conf_123 * (l - 1) + internal.dim_aux_ICU_W_D_conf_12 * (k - 1) + internal.dim_aux_ICU_W_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_D_unconf_to_conf[internal.dim_n_ICU_W_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_W_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_W_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_W_D_unconf_4; ++l) {
            internal.new_ICU_W_D_unconf[i - 1 + internal.dim_new_ICU_W_D_unconf_1 * (j - 1) + internal.dim_new_ICU_W_D_unconf_12 * (k - 1) + internal.dim_new_ICU_W_D_unconf_123 * (l - 1)] = internal.aux_ICU_W_D_unconf[internal.dim_aux_ICU_W_D_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_D_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_W_D_unconf_to_conf[internal.dim_n_ICU_W_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_W_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_G_D_1; ++i) {
      for (int j = 1; j <= internal.dim_G_D_2; ++j) {
        for (int k = 1; k <= internal.dim_G_D_3; ++k) {
          for (int l = 1; l <= internal.dim_G_D_4; ++l) {
            state_next[internal.offset_variable_G_D + i - 1 + internal.dim_G_D_1 * (j - 1) + internal.dim_G_D_12 * (k - 1) + internal.dim_G_D_123 * (l - 1)] = internal.new_G_D[internal.dim_new_G_D_123 * (l - 1) + internal.dim_new_G_D_12 * (k - 1) + internal.dim_new_G_D_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_D_conf_4; ++l) {
            state_next[internal.offset_variable_ICU_D_conf + i - 1 + internal.dim_ICU_D_conf_1 * (j - 1) + internal.dim_ICU_D_conf_12 * (k - 1) + internal.dim_ICU_D_conf_123 * (l - 1)] = internal.new_ICU_D_conf[internal.dim_new_ICU_D_conf_123 * (l - 1) + internal.dim_new_ICU_D_conf_12 * (k - 1) + internal.dim_new_ICU_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_D_unconf_4; ++l) {
            state_next[internal.offset_variable_ICU_D_unconf + i - 1 + internal.dim_ICU_D_unconf_1 * (j - 1) + internal.dim_ICU_D_unconf_12 * (k - 1) + internal.dim_ICU_D_unconf_123 * (l - 1)] = internal.new_ICU_D_unconf[internal.dim_new_ICU_D_unconf_123 * (l - 1) + internal.dim_new_ICU_D_unconf_12 * (k - 1) + internal.dim_new_ICU_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_I_A_4; ++l) {
          internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.n_EI_A[internal.dim_n_EI_A_12 * (l - 1) + internal.dim_n_EI_A_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        for (int k = 2; k <= internal.k_A; ++k) {
          for (int l = 1; l <= internal.dim_aux_I_A_4; ++l) {
            internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.n_II_A[internal.dim_n_II_A_123 * (l - 1) + internal.dim_n_II_A_12 * (k - 1 - 1) + internal.dim_n_II_A_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_I_A_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_I_A_4; ++l) {
            internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1] - internal.n_II_A[internal.dim_n_II_A_123 * (l - 1) + internal.dim_n_II_A_12 * (k - 1) + internal.dim_n_II_A_1 * (j - 1) + i - 1] - internal.n_II_A_next_vacc_class[internal.dim_n_II_A_next_vacc_class_123 * (l - 1) + internal.dim_n_II_A_next_vacc_class_12 * (k - 1) + internal.dim_n_II_A_next_vacc_class_1 * (j - 1) + i - 1] - internal.n_I_A_next_vacc_class[internal.dim_n_I_A_next_vacc_class_123 * (l - 1) + internal.dim_n_I_A_next_vacc_class_12 * (k - 1) + internal.dim_n_I_A_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_I_A_3; ++k) {
          int l = 1;
          internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1] + internal.n_I_A_next_vacc_class[internal.dim_n_I_A_next_vacc_class_123 * (internal.n_vacc_classes - 1) + internal.dim_n_I_A_next_vacc_class_12 * 0 + internal.dim_n_I_A_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_I_A_3; ++k) {
          for (int l = 2; l <= internal.n_vacc_classes; ++l) {
            internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1] + internal.n_I_A_next_vacc_class[internal.dim_n_I_A_next_vacc_class_123 * (l - 1 - 1) + internal.dim_n_I_A_next_vacc_class_12 * (k - 1) + internal.dim_n_I_A_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        int k = 1;
        int l = 1;
        internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1] + internal.n_EI_A_next_vacc_class[internal.dim_n_EI_A_next_vacc_class_12 * (internal.n_vacc_classes - 1) + internal.dim_n_EI_A_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        int k = 1;
        for (int l = 2; l <= internal.n_vacc_classes; ++l) {
          internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1] + internal.n_EI_A_next_vacc_class[internal.dim_n_EI_A_next_vacc_class_12 * (l - 1 - 1) + internal.dim_n_EI_A_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        for (int k = 2; k <= internal.k_A; ++k) {
          int l = 1;
          internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1] + internal.n_II_A_next_vacc_class[internal.dim_n_II_A_next_vacc_class_123 * (internal.n_vacc_classes - 1) + internal.dim_n_II_A_next_vacc_class_12 * (k - 1 - 1) + internal.dim_n_II_A_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_A_2; ++j) {
        for (int k = 2; k <= internal.k_A; ++k) {
          for (int l = 2; l <= internal.n_vacc_classes; ++l) {
            internal.aux_I_A[i - 1 + internal.dim_aux_I_A_1 * (j - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_123 * (l - 1)] = internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1] + internal.n_II_A_next_vacc_class[internal.dim_n_II_A_next_vacc_class_123 * (l - 1 - 1) + internal.dim_n_II_A_next_vacc_class_12 * (k - 1 - 1) + internal.dim_n_II_A_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_EI_C_1; ++i) {
      for (int j = 1; j <= internal.dim_n_EI_C_2; ++j) {
        for (int k = 1; k <= internal.dim_n_EI_C_3; ++k) {
          internal.n_EI_C[i - 1 + internal.dim_n_EI_C_1 * (j - 1) + internal.dim_n_EI_C_12 * (k - 1)] = internal.n_EE[internal.dim_n_EE_123 * (k - 1) + internal.dim_n_EE_12 * (internal.k_E - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1] - internal.n_EI_A[internal.dim_n_EI_A_12 * (k - 1) + internal.dim_n_EI_A_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_H_D_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_H_D_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_H_D_3; ++k) {
          internal.n_I_C_to_H_D[i - 1 + internal.dim_n_I_C_to_H_D_1 * (j - 1) + internal.dim_n_I_C_to_H_D_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_hosp_non_ICU[internal.dim_n_hosp_non_ICU_12 * (k - 1) + internal.dim_n_hosp_non_ICU_1 * (j - 1) + i - 1]), internal.p_H_D_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_S_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_S_next_vacc_class_2; ++j) {
        internal.n_S_next_vacc_class[i - 1 + internal.dim_n_S_next_vacc_class_1 * (j - 1)] = dust::distr::rbinom(rng_state, std::round(S[internal.dim_S_1 * (j - 1) + i - 1] - odin_sum3(internal.n_S_progress.data(), i - 1, i, 0, internal.dim_n_S_progress_2, j - 1, j, internal.dim_n_S_progress_1, internal.dim_n_S_progress_12)), internal.p_S_next_vacc_class[internal.dim_p_S_next_vacc_class_1 * (j - 1) + i - 1]);
      }
    }
    for (int i = 1; i <= internal.dim_n_SE_next_vacc_class_1; ++i) {
      for (int j = 1; j <= internal.dim_n_SE_next_vacc_class_2; ++j) {
        for (int k = 1; k <= internal.dim_n_SE_next_vacc_class_3; ++k) {
          internal.n_SE_next_vacc_class[i - 1 + internal.dim_n_SE_next_vacc_class_1 * (j - 1) + internal.dim_n_SE_next_vacc_class_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_S_progress[internal.dim_n_S_progress_12 * (k - 1) + internal.dim_n_S_progress_1 * (j - 1) + i - 1]), internal.p_S_next_vacc_class[internal.dim_p_S_next_vacc_class_1 * (k - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_pre_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_pre_conf_4; ++l) {
            internal.new_ICU_pre_conf[i - 1 + internal.dim_new_ICU_pre_conf_1 * (j - 1) + internal.dim_new_ICU_pre_conf_12 * (k - 1) + internal.dim_new_ICU_pre_conf_123 * (l - 1)] = internal.aux_ICU_pre_conf[internal.dim_aux_ICU_pre_conf_123 * (l - 1) + internal.dim_aux_ICU_pre_conf_12 * (k - 1) + internal.dim_aux_ICU_pre_conf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_unconf_to_conf[internal.dim_n_ICU_pre_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_pre_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_pre_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_ICU_pre_conf_4; ++l) {
          internal.new_ICU_pre_conf[i - 1 + internal.dim_new_ICU_pre_conf_1 * (j - 1) + internal.dim_new_ICU_pre_conf_12 * (k - 1) + internal.dim_new_ICU_pre_conf_123 * (l - 1)] = internal.new_ICU_pre_conf[internal.dim_new_ICU_pre_conf_123 * (l - 1) + internal.dim_new_ICU_pre_conf_12 * 0 + internal.dim_new_ICU_pre_conf_1 * (j - 1) + i - 1] + internal.n_I_C_to_ICU_pre_conf[internal.dim_n_I_C_to_ICU_pre_conf_12 * (l - 1) + internal.dim_n_I_C_to_ICU_pre_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_pre_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_pre_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_pre_unconf_4; ++l) {
            internal.new_ICU_pre_unconf[i - 1 + internal.dim_new_ICU_pre_unconf_1 * (j - 1) + internal.dim_new_ICU_pre_unconf_12 * (k - 1) + internal.dim_new_ICU_pre_unconf_123 * (l - 1)] = internal.aux_ICU_pre_unconf[internal.dim_aux_ICU_pre_unconf_123 * (l - 1) + internal.dim_aux_ICU_pre_unconf_12 * (k - 1) + internal.dim_aux_ICU_pre_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_conf[internal.dim_n_ICU_pre_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_pre_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_pre_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_pre_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_ICU_pre_unconf_4; ++l) {
          internal.new_ICU_pre_unconf[i - 1 + internal.dim_new_ICU_pre_unconf_1 * (j - 1) + internal.dim_new_ICU_pre_unconf_12 * (k - 1) + internal.dim_new_ICU_pre_unconf_123 * (l - 1)] = internal.new_ICU_pre_unconf[internal.dim_new_ICU_pre_unconf_123 * (l - 1) + internal.dim_new_ICU_pre_unconf_12 * 0 + internal.dim_new_ICU_pre_unconf_1 * (j - 1) + i - 1] + internal.n_I_C_to_ICU_pre[internal.dim_n_I_C_to_ICU_pre_12 * (l - 1) + internal.dim_n_I_C_to_ICU_pre_1 * (j - 1) + i - 1] - internal.n_I_C_to_ICU_pre_conf[internal.dim_n_I_C_to_ICU_pre_conf_12 * (l - 1) + internal.dim_n_I_C_to_ICU_pre_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_W_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_W_R_conf_4; ++l) {
            internal.new_ICU_W_R_conf[i - 1 + internal.dim_new_ICU_W_R_conf_1 * (j - 1) + internal.dim_new_ICU_W_R_conf_12 * (k - 1) + internal.dim_new_ICU_W_R_conf_123 * (l - 1)] = internal.aux_ICU_W_R_conf[internal.dim_aux_ICU_W_R_conf_123 * (l - 1) + internal.dim_aux_ICU_W_R_conf_12 * (k - 1) + internal.dim_aux_ICU_W_R_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_R_unconf_to_conf[internal.dim_n_ICU_W_R_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_W_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_ICU_W_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_ICU_W_R_unconf_4; ++l) {
            internal.new_ICU_W_R_unconf[i - 1 + internal.dim_new_ICU_W_R_unconf_1 * (j - 1) + internal.dim_new_ICU_W_R_unconf_12 * (k - 1) + internal.dim_new_ICU_W_R_unconf_123 * (l - 1)] = internal.aux_ICU_W_R_unconf[internal.dim_aux_ICU_W_R_unconf_123 * (l - 1) + internal.dim_aux_ICU_W_R_unconf_12 * (k - 1) + internal.dim_aux_ICU_W_R_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_W_R_unconf_to_conf[internal.dim_n_ICU_W_R_unconf_to_conf_123 * (l - 1) + internal.dim_n_ICU_W_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_ICU_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_R_1; ++i) {
      for (int j = 1; j <= internal.dim_new_R_2; ++j) {
        for (int k = 1; k <= internal.dim_new_R_3; ++k) {
          internal.new_R[i - 1 + internal.dim_new_R_1 * (j - 1) + internal.dim_new_R_12 * (k - 1)] = R[internal.dim_R_12 * (k - 1) + internal.dim_R_1 * (j - 1) + i - 1] + internal.n_II_A[internal.dim_n_II_A_123 * (k - 1) + internal.dim_n_II_A_12 * (internal.k_A - 1) + internal.dim_n_II_A_1 * (j - 1) + i - 1] + internal.n_I_C_to_R[internal.dim_n_I_C_to_R_12 * (k - 1) + internal.dim_n_I_C_to_R_1 * (j - 1) + i - 1] + internal.n_H_R_conf_progress[internal.dim_n_H_R_conf_progress_123 * (k - 1) + internal.dim_n_H_R_conf_progress_12 * (internal.k_H_R - 1) + internal.dim_n_H_R_conf_progress_1 * (j - 1) + i - 1] + internal.n_H_R_unconf_progress[internal.dim_n_H_R_unconf_progress_123 * (k - 1) + internal.dim_n_H_R_unconf_progress_12 * (internal.k_H_R - 1) + internal.dim_n_H_R_unconf_progress_1 * (j - 1) + i - 1] + internal.n_W_R_conf_progress[internal.dim_n_W_R_conf_progress_123 * (k - 1) + internal.dim_n_W_R_conf_progress_12 * (internal.k_W_R - 1) + internal.dim_n_W_R_conf_progress_1 * (j - 1) + i - 1] + internal.n_W_R_unconf_progress[internal.dim_n_W_R_unconf_progress_123 * (k - 1) + internal.dim_n_W_R_unconf_progress_12 * (internal.k_W_R - 1) + internal.dim_n_W_R_unconf_progress_1 * (j - 1) + i - 1] - internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1] - internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (k - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_R_1; ++i) {
      for (int j = 1; j <= internal.dim_new_R_2; ++j) {
        int k = 1;
        internal.new_R[i - 1 + internal.dim_new_R_1 * (j - 1) + internal.dim_new_R_12 * (k - 1)] = internal.new_R[internal.dim_new_R_12 * 0 + internal.dim_new_R_1 * (j - 1) + i - 1] + internal.n_II_A_next_vacc_class[internal.dim_n_II_A_next_vacc_class_123 * (internal.n_vacc_classes - 1) + internal.dim_n_II_A_next_vacc_class_12 * (internal.k_A - 1) + internal.dim_n_II_A_next_vacc_class_1 * (j - 1) + i - 1] + internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (internal.n_vacc_classes - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_new_R_1; ++i) {
      for (int j = 1; j <= internal.dim_new_R_2; ++j) {
        for (int k = 2; k <= internal.n_vacc_classes; ++k) {
          internal.new_R[i - 1 + internal.dim_new_R_1 * (j - 1) + internal.dim_new_R_12 * (k - 1)] = internal.new_R[internal.dim_new_R_12 * (k - 1) + internal.dim_new_R_1 * (j - 1) + i - 1] + internal.n_II_A_next_vacc_class[internal.dim_n_II_A_next_vacc_class_123 * (k - 1 - 1) + internal.dim_n_II_A_next_vacc_class_12 * (internal.k_A - 1) + internal.dim_n_II_A_next_vacc_class_1 * (j - 1) + i - 1] + internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (k - 1 - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_neg_2; ++j) {
        for (int k = 1; k <= internal.dim_new_T_PCR_neg_3; ++k) {
          internal.new_T_PCR_neg[i - 1 + internal.dim_new_T_PCR_neg_1 * (j - 1) + internal.dim_new_T_PCR_neg_12 * (k - 1)] = T_PCR_neg[internal.dim_T_PCR_neg_12 * (k - 1) + internal.dim_T_PCR_neg_1 * (j - 1) + i - 1] + internal.n_T_PCR_pos_progress[internal.dim_n_T_PCR_pos_progress_123 * (k - 1) + internal.dim_n_T_PCR_pos_progress_12 * (internal.k_PCR_pos - 1) + internal.dim_n_T_PCR_pos_progress_1 * (j - 1) + i - 1] - internal.model_pcr_and_serology * internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1] - internal.model_pcr_and_serology * internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (k - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_neg_2; ++j) {
        int k = 1;
        internal.new_T_PCR_neg[i - 1 + internal.dim_new_T_PCR_neg_1 * (j - 1) + internal.dim_new_T_PCR_neg_12 * (k - 1)] = internal.new_T_PCR_neg[internal.dim_new_T_PCR_neg_12 * 0 + internal.dim_new_T_PCR_neg_1 * (j - 1) + i - 1] + internal.model_pcr_and_serology * internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (internal.n_vacc_classes - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_neg_2; ++j) {
        for (int k = 2; k <= internal.n_vacc_classes; ++k) {
          internal.new_T_PCR_neg[i - 1 + internal.dim_new_T_PCR_neg_1 * (j - 1) + internal.dim_new_T_PCR_neg_12 * (k - 1)] = internal.new_T_PCR_neg[internal.dim_new_T_PCR_neg_12 * (k - 1) + internal.dim_new_T_PCR_neg_1 * (j - 1) + i - 1] + internal.model_pcr_and_serology * internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (k - 1 - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_pre_2; ++j) {
        for (int k = 1; k <= internal.dim_new_T_PCR_pre_3; ++k) {
          for (int l = 1; l <= internal.dim_new_T_PCR_pre_4; ++l) {
            internal.new_T_PCR_pre[i - 1 + internal.dim_new_T_PCR_pre_1 * (j - 1) + internal.dim_new_T_PCR_pre_12 * (k - 1) + internal.dim_new_T_PCR_pre_123 * (l - 1)] = T_PCR_pre[internal.dim_T_PCR_pre_123 * (l - 1) + internal.dim_T_PCR_pre_12 * (k - 1) + internal.dim_T_PCR_pre_1 * (j - 1) + i - 1] - internal.n_T_PCR_pre_progress[internal.dim_n_T_PCR_pre_progress_123 * (l - 1) + internal.dim_n_T_PCR_pre_progress_12 * (k - 1) + internal.dim_n_T_PCR_pre_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_pre_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_T_PCR_pre_4; ++l) {
          internal.new_T_PCR_pre[i - 1 + internal.dim_new_T_PCR_pre_1 * (j - 1) + internal.dim_new_T_PCR_pre_12 * (k - 1) + internal.dim_new_T_PCR_pre_123 * (l - 1)] = internal.new_T_PCR_pre[internal.dim_new_T_PCR_pre_123 * (l - 1) + internal.dim_new_T_PCR_pre_12 * 0 + internal.dim_new_T_PCR_pre_1 * (j - 1) + i - 1] + internal.n_S_progress[internal.dim_n_S_progress_12 * (l - 1) + internal.dim_n_S_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_PCR_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_PCR_pre_2; ++j) {
        for (int k = 2; k <= internal.k_PCR_pre; ++k) {
          for (int l = 1; l <= internal.dim_new_T_PCR_pre_4; ++l) {
            internal.new_T_PCR_pre[i - 1 + internal.dim_new_T_PCR_pre_1 * (j - 1) + internal.dim_new_T_PCR_pre_12 * (k - 1) + internal.dim_new_T_PCR_pre_123 * (l - 1)] = internal.new_T_PCR_pre[internal.dim_new_T_PCR_pre_123 * (l - 1) + internal.dim_new_T_PCR_pre_12 * (k - 1) + internal.dim_new_T_PCR_pre_1 * (j - 1) + i - 1] + internal.n_T_PCR_pre_progress[internal.dim_n_T_PCR_pre_progress_123 * (l - 1) + internal.dim_n_T_PCR_pre_progress_12 * (k - 1 - 1) + internal.dim_n_T_PCR_pre_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_sero_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_sero_neg_2; ++j) {
        for (int k = 1; k <= internal.dim_new_T_sero_neg_3; ++k) {
          internal.new_T_sero_neg[i - 1 + internal.dim_new_T_sero_neg_1 * (j - 1) + internal.dim_new_T_sero_neg_12 * (k - 1)] = T_sero_neg[internal.dim_T_sero_neg_12 * (k - 1) + internal.dim_T_sero_neg_1 * (j - 1) + i - 1] + odin_sum4(internal.n_T_sero_pre_progress.data(), i - 1, i, j - 1, j, 0, internal.dim_n_T_sero_pre_progress_3, k - 1, k, internal.dim_n_T_sero_pre_progress_1, internal.dim_n_T_sero_pre_progress_12, internal.dim_n_T_sero_pre_progress_123) - internal.n_T_sero_pre_to_T_sero_pos[internal.dim_n_T_sero_pre_to_T_sero_pos_12 * (k - 1) + internal.dim_n_T_sero_pre_to_T_sero_pos_1 * (j - 1) + i - 1] + internal.n_T_sero_pos_progress[internal.dim_n_T_sero_pos_progress_123 * (k - 1) + internal.dim_n_T_sero_pos_progress_12 * (internal.k_sero_pos - 1) + internal.dim_n_T_sero_pos_progress_1 * (j - 1) + i - 1] - internal.model_pcr_and_serology * internal.n_R_progress[internal.dim_n_R_progress_12 * (k - 1) + internal.dim_n_R_progress_1 * (j - 1) + i - 1] - internal.model_pcr_and_serology * internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (k - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_sero_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_sero_neg_2; ++j) {
        int k = 1;
        internal.new_T_sero_neg[i - 1 + internal.dim_new_T_sero_neg_1 * (j - 1) + internal.dim_new_T_sero_neg_12 * (k - 1)] = internal.new_T_sero_neg[internal.dim_new_T_sero_neg_12 * 0 + internal.dim_new_T_sero_neg_1 * (j - 1) + i - 1] + internal.model_pcr_and_serology * internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (internal.n_vacc_classes - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_new_T_sero_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_sero_neg_2; ++j) {
        for (int k = 2; k <= internal.n_vacc_classes; ++k) {
          internal.new_T_sero_neg[i - 1 + internal.dim_new_T_sero_neg_1 * (j - 1) + internal.dim_new_T_sero_neg_12 * (k - 1)] = internal.new_T_sero_neg[internal.dim_new_T_sero_neg_12 * (k - 1) + internal.dim_new_T_sero_neg_1 * (j - 1) + i - 1] + internal.model_pcr_and_serology * internal.n_R_next_vacc_class[internal.dim_n_R_next_vacc_class_12 * (k - 1 - 1) + internal.dim_n_R_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_T_sero_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_new_T_sero_pre_2; ++j) {
        for (int k = 1; k <= internal.dim_new_T_sero_pre_3; ++k) {
          for (int l = 1; l <= internal.dim_new_T_sero_pre_4; ++l) {
            internal.new_T_sero_pre[i - 1 + internal.dim_new_T_sero_pre_1 * (j - 1) + internal.dim_new_T_sero_pre_12 * (k - 1) + internal.dim_new_T_sero_pre_123 * (l - 1)] = T_sero_pre[internal.dim_T_sero_pre_123 * (l - 1) + internal.dim_T_sero_pre_12 * (k - 1) + internal.dim_T_sero_pre_1 * (j - 1) + i - 1] + internal.n_com_to_T_sero_pre[internal.dim_n_com_to_T_sero_pre_123 * (l - 1) + internal.dim_n_com_to_T_sero_pre_12 * (k - 1) + internal.dim_n_com_to_T_sero_pre_1 * (j - 1) + i - 1] - internal.n_T_sero_pre_progress[internal.dim_n_T_sero_pre_progress_123 * (l - 1) + internal.dim_n_T_sero_pre_progress_12 * (k - 1) + internal.dim_n_T_sero_pre_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    state_next[1] = cum_infections + odin_sum1(internal.n_S_progress.data(), 0, internal.dim_n_S_progress);
    for (int i = 1; i <= internal.dim_cum_infections_per_strain; ++i) {
      state_next[17 + i - 1] = cum_infections_per_strain[i - 1] + odin_sum3(internal.n_S_progress.data(), 0, internal.dim_n_S_progress_1, i - 1, i, 0, internal.dim_n_S_progress_3, internal.dim_n_S_progress_1, internal.dim_n_S_progress_12);
    }
    for (int i = 1; i <= internal.dim_cum_n_R_vaccinated_1; ++i) {
      for (int j = 1; j <= internal.dim_cum_n_R_vaccinated_2; ++j) {
        state_next[internal.offset_variable_cum_n_R_vaccinated + i - 1 + internal.dim_cum_n_R_vaccinated_1 * (j - 1)] = cum_n_R_vaccinated[internal.dim_cum_n_R_vaccinated_1 * (j - 1) + i - 1] + odin_sum3(internal.n_R_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_R_next_vacc_class_2, j - 1, j, internal.dim_n_R_next_vacc_class_1, internal.dim_n_R_next_vacc_class_12) + odin_sum3(internal.n_RS_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_RS_next_vacc_class_2, j - 1, j, internal.dim_n_RS_next_vacc_class_1, internal.dim_n_RS_next_vacc_class_12);
      }
    }
    state_next[3] = cum_new_conf + odin_sum1(internal.n_H_D_unconf_to_conf.data(), 0, internal.dim_n_H_D_unconf_to_conf) + odin_sum1(internal.n_H_R_unconf_to_conf.data(), 0, internal.dim_n_H_R_unconf_to_conf) + odin_sum1(internal.n_ICU_pre_unconf_to_conf.data(), 0, internal.dim_n_ICU_pre_unconf_to_conf) + odin_sum1(internal.n_ICU_D_unconf_to_conf.data(), 0, internal.dim_n_ICU_D_unconf_to_conf) + odin_sum1(internal.n_ICU_W_R_unconf_to_conf.data(), 0, internal.dim_n_ICU_W_R_unconf_to_conf) + odin_sum1(internal.n_ICU_W_D_unconf_to_conf.data(), 0, internal.dim_n_ICU_W_D_unconf_to_conf) + odin_sum1(internal.n_W_R_unconf_to_conf.data(), 0, internal.dim_n_W_R_unconf_to_conf) + odin_sum1(internal.n_W_D_unconf_to_conf.data(), 0, internal.dim_n_W_D_unconf_to_conf);
    for (int i = 1; i <= internal.dim_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_W_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_W_D_conf_4; ++l) {
            state_next[internal.offset_variable_ICU_W_D_conf + i - 1 + internal.dim_ICU_W_D_conf_1 * (j - 1) + internal.dim_ICU_W_D_conf_12 * (k - 1) + internal.dim_ICU_W_D_conf_123 * (l - 1)] = internal.new_ICU_W_D_conf[internal.dim_new_ICU_W_D_conf_123 * (l - 1) + internal.dim_new_ICU_W_D_conf_12 * (k - 1) + internal.dim_new_ICU_W_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_W_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_W_D_unconf_4; ++l) {
            state_next[internal.offset_variable_ICU_W_D_unconf + i - 1 + internal.dim_ICU_W_D_unconf_1 * (j - 1) + internal.dim_ICU_W_D_unconf_12 * (k - 1) + internal.dim_ICU_W_D_unconf_123 * (l - 1)] = internal.new_ICU_W_D_unconf[internal.dim_new_ICU_W_D_unconf_123 * (l - 1) + internal.dim_new_ICU_W_D_unconf_12 * (k - 1) + internal.dim_new_ICU_W_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_C_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_C_2; ++j) {
        int k = 1;
        int l = 1;
        internal.aux_I_C[i - 1 + internal.dim_aux_I_C_1 * (j - 1) + internal.dim_aux_I_C_12 * (k - 1) + internal.dim_aux_I_C_123 * (l - 1)] = internal.n_EI_C[internal.dim_n_EI_C_12 * 0 + internal.dim_n_EI_C_1 * (j - 1) + i - 1] + internal.n_EI_C_next_vacc_class[internal.dim_n_EI_C_next_vacc_class_12 * (internal.n_vacc_classes - 1) + internal.dim_n_EI_C_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_C_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_C_2; ++j) {
        int k = 1;
        for (int l = 2; l <= internal.n_vacc_classes; ++l) {
          internal.aux_I_C[i - 1 + internal.dim_aux_I_C_1 * (j - 1) + internal.dim_aux_I_C_12 * (k - 1) + internal.dim_aux_I_C_123 * (l - 1)] = internal.n_EI_C[internal.dim_n_EI_C_12 * (l - 1) + internal.dim_n_EI_C_1 * (j - 1) + i - 1] + internal.n_EI_C_next_vacc_class[internal.dim_n_EI_C_next_vacc_class_12 * (l - 1 - 1) + internal.dim_n_EI_C_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_C_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_C_2; ++j) {
        for (int k = 2; k <= internal.k_C; ++k) {
          for (int l = 1; l <= internal.dim_aux_I_C_4; ++l) {
            internal.aux_I_C[i - 1 + internal.dim_aux_I_C_1 * (j - 1) + internal.dim_aux_I_C_12 * (k - 1) + internal.dim_aux_I_C_123 * (l - 1)] = internal.n_I_C_progress[internal.dim_n_I_C_progress_123 * (l - 1) + internal.dim_n_I_C_progress_12 * (k - 1 - 1) + internal.dim_n_I_C_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_I_C_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_I_C_2; ++j) {
        for (int k = 1; k <= internal.k_C; ++k) {
          for (int l = 1; l <= internal.dim_aux_I_C_4; ++l) {
            internal.aux_I_C[i - 1 + internal.dim_aux_I_C_1 * (j - 1) + internal.dim_aux_I_C_12 * (k - 1) + internal.dim_aux_I_C_123 * (l - 1)] = internal.aux_I_C[internal.dim_aux_I_C_123 * (l - 1) + internal.dim_aux_I_C_12 * (k - 1) + internal.dim_aux_I_C_1 * (j - 1) + i - 1] - internal.n_I_C_progress[internal.dim_n_I_C_progress_123 * (l - 1) + internal.dim_n_I_C_progress_12 * (k - 1) + internal.dim_n_I_C_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_H_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_H_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_H_D_conf_3; ++k) {
          internal.n_I_C_to_H_D_conf[i - 1 + internal.dim_n_I_C_to_H_D_conf_1 * (j - 1) + internal.dim_n_I_C_to_H_D_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_I_C_to_H_D[internal.dim_n_I_C_to_H_D_12 * (k - 1) + internal.dim_n_I_C_to_H_D_1 * (j - 1) + i - 1]), internal.p_star_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_H_R_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_H_R_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_H_R_3; ++k) {
          internal.n_I_C_to_H_R[i - 1 + internal.dim_n_I_C_to_H_R_1 * (j - 1) + internal.dim_n_I_C_to_H_R_12 * (k - 1)] = internal.n_hosp_non_ICU[internal.dim_n_hosp_non_ICU_12 * (k - 1) + internal.dim_n_hosp_non_ICU_1 * (j - 1) + i - 1] - internal.n_I_C_to_H_D[internal.dim_n_I_C_to_H_D_12 * (k - 1) + internal.dim_n_I_C_to_H_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_SE_1; ++i) {
      for (int j = 1; j <= internal.dim_n_SE_2; ++j) {
        for (int k = 1; k <= internal.n_vacc_classes; ++k) {
          internal.n_SE[i - 1 + internal.dim_n_SE_1 * (j - 1) + internal.dim_n_SE_12 * (k - 1)] = internal.n_S_progress[internal.dim_n_S_progress_12 * (k - 1) + internal.dim_n_S_progress_1 * (j - 1) + i - 1] - internal.n_SE_next_vacc_class[internal.dim_n_SE_next_vacc_class_12 * (k - 1) + internal.dim_n_SE_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_new_I_A_2; ++j) {
        for (int k = 1; k <= internal.dim_new_I_A_3; ++k) {
          for (int l = 1; l <= internal.dim_new_I_A_4; ++l) {
            internal.new_I_A[i - 1 + internal.dim_new_I_A_1 * (j - 1) + internal.dim_new_I_A_12 * (k - 1) + internal.dim_new_I_A_123 * (l - 1)] = I_A[internal.dim_I_A_123 * (l - 1) + internal.dim_I_A_12 * (k - 1) + internal.dim_I_A_1 * (j - 1) + i - 1] + internal.aux_I_A[internal.dim_aux_I_A_123 * (l - 1) + internal.dim_aux_I_A_12 * (k - 1) + internal.dim_aux_I_A_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    real_t new_ICU_tot = odin_sum1(internal.new_ICU_W_R_conf.data(), 0, internal.dim_new_ICU_W_R_conf) + odin_sum1(internal.new_ICU_W_D_conf.data(), 0, internal.dim_new_ICU_W_D_conf) + odin_sum1(internal.new_ICU_D_conf.data(), 0, internal.dim_new_ICU_D_conf);
    for (int i = 1; i <= internal.dim_new_S_1; ++i) {
      for (int j = 1; j <= internal.dim_new_S_2; ++j) {
        internal.new_S[i - 1 + internal.dim_new_S_1 * (j - 1)] = S[internal.dim_S_1 * (j - 1) + i - 1] + odin_sum3(internal.n_RS.data(), i - 1, i, 0, internal.dim_n_RS_2, j - 1, j, internal.dim_n_RS_1, internal.dim_n_RS_12) - odin_sum3(internal.n_S_progress.data(), i - 1, i, 0, internal.dim_n_S_progress_2, j - 1, j, internal.dim_n_S_progress_1, internal.dim_n_S_progress_12) - internal.n_S_next_vacc_class[internal.dim_n_S_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_new_S_1; ++i) {
      int j = 1;
      internal.new_S[i - 1 + internal.dim_new_S_1 * (j - 1)] = internal.new_S[internal.dim_new_S_1 * 0 + i - 1] + internal.n_S_next_vacc_class[internal.dim_n_S_next_vacc_class_1 * (internal.n_vacc_classes - 1) + i - 1] + odin_sum3(internal.n_RS_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_RS_next_vacc_class_2, internal.n_vacc_classes - 1, internal.n_vacc_classes, internal.dim_n_RS_next_vacc_class_1, internal.dim_n_RS_next_vacc_class_12);
    }
    for (int i = 1; i <= internal.dim_new_S_1; ++i) {
      for (int j = 2; j <= internal.n_vacc_classes; ++j) {
        internal.new_S[i - 1 + internal.dim_new_S_1 * (j - 1)] = internal.new_S[internal.dim_new_S_1 * (j - 1) + i - 1] + internal.n_S_next_vacc_class[internal.dim_n_S_next_vacc_class_1 * (j - 1 - 1) + i - 1] + odin_sum3(internal.n_RS_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_RS_next_vacc_class_2, j - 1 - 1, j - 1, internal.dim_n_RS_next_vacc_class_1, internal.dim_n_RS_next_vacc_class_12);
      }
    }
    for (int i = 1; i <= internal.dim_cum_n_S_vaccinated_1; ++i) {
      for (int j = 1; j <= internal.dim_cum_n_S_vaccinated_2; ++j) {
        state_next[internal.offset_variable_cum_n_S_vaccinated + i - 1 + internal.dim_cum_n_S_vaccinated_1 * (j - 1)] = cum_n_S_vaccinated[internal.dim_cum_n_S_vaccinated_1 * (j - 1) + i - 1] + internal.n_S_next_vacc_class[internal.dim_n_S_next_vacc_class_1 * (j - 1) + i - 1] + odin_sum3(internal.n_SE_next_vacc_class.data(), i - 1, i, 0, internal.dim_n_SE_next_vacc_class_2, j - 1, j, internal.dim_n_SE_next_vacc_class_1, internal.dim_n_SE_next_vacc_class_12);
      }
    }
    state_next[14] = cum_sympt_cases + odin_sum1(internal.n_EI_C.data(), 0, internal.dim_n_EI_C);
    state_next[15] = cum_sympt_cases_over25 + odin_sum3(internal.n_EI_C.data(), 5, internal.n_groups, 0, internal.dim_n_EI_C_2, 0, internal.dim_n_EI_C_3, internal.dim_n_EI_C_1, internal.dim_n_EI_C_12);
    for (int i = 1; i <= internal.dim_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_pre_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_pre_conf_4; ++l) {
            state_next[internal.offset_variable_ICU_pre_conf + i - 1 + internal.dim_ICU_pre_conf_1 * (j - 1) + internal.dim_ICU_pre_conf_12 * (k - 1) + internal.dim_ICU_pre_conf_123 * (l - 1)] = internal.new_ICU_pre_conf[internal.dim_new_ICU_pre_conf_123 * (l - 1) + internal.dim_new_ICU_pre_conf_12 * (k - 1) + internal.dim_new_ICU_pre_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_pre_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_pre_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_pre_unconf_4; ++l) {
            state_next[internal.offset_variable_ICU_pre_unconf + i - 1 + internal.dim_ICU_pre_unconf_1 * (j - 1) + internal.dim_ICU_pre_unconf_12 * (k - 1) + internal.dim_ICU_pre_unconf_123 * (l - 1)] = internal.new_ICU_pre_unconf[internal.dim_new_ICU_pre_unconf_123 * (l - 1) + internal.dim_new_ICU_pre_unconf_12 * (k - 1) + internal.dim_new_ICU_pre_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_W_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_W_R_conf_4; ++l) {
            state_next[internal.offset_variable_ICU_W_R_conf + i - 1 + internal.dim_ICU_W_R_conf_1 * (j - 1) + internal.dim_ICU_W_R_conf_12 * (k - 1) + internal.dim_ICU_W_R_conf_123 * (l - 1)] = internal.new_ICU_W_R_conf[internal.dim_new_ICU_W_R_conf_123 * (l - 1) + internal.dim_new_ICU_W_R_conf_12 * (k - 1) + internal.dim_new_ICU_W_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_ICU_W_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_ICU_W_R_unconf_4; ++l) {
            state_next[internal.offset_variable_ICU_W_R_unconf + i - 1 + internal.dim_ICU_W_R_unconf_1 * (j - 1) + internal.dim_ICU_W_R_unconf_12 * (k - 1) + internal.dim_ICU_W_R_unconf_123 * (l - 1)] = internal.new_ICU_W_R_unconf[internal.dim_new_ICU_W_R_unconf_123 * (l - 1) + internal.dim_new_ICU_W_R_unconf_12 * (k - 1) + internal.dim_new_ICU_W_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_R_1; ++i) {
      for (int j = 1; j <= internal.dim_R_2; ++j) {
        for (int k = 1; k <= internal.dim_R_3; ++k) {
          state_next[internal.offset_variable_R + i - 1 + internal.dim_R_1 * (j - 1) + internal.dim_R_12 * (k - 1)] = internal.new_R[internal.dim_new_R_12 * (k - 1) + internal.dim_new_R_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_T_PCR_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_T_PCR_neg_2; ++j) {
        for (int k = 1; k <= internal.dim_T_PCR_neg_3; ++k) {
          state_next[internal.offset_variable_T_PCR_neg + i - 1 + internal.dim_T_PCR_neg_1 * (j - 1) + internal.dim_T_PCR_neg_12 * (k - 1)] = internal.new_T_PCR_neg[internal.dim_new_T_PCR_neg_12 * (k - 1) + internal.dim_new_T_PCR_neg_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_T_PCR_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_T_PCR_pre_2; ++j) {
        for (int k = 1; k <= internal.dim_T_PCR_pre_3; ++k) {
          for (int l = 1; l <= internal.dim_T_PCR_pre_4; ++l) {
            state_next[internal.offset_variable_T_PCR_pre + i - 1 + internal.dim_T_PCR_pre_1 * (j - 1) + internal.dim_T_PCR_pre_12 * (k - 1) + internal.dim_T_PCR_pre_123 * (l - 1)] = internal.new_T_PCR_pre[internal.dim_new_T_PCR_pre_123 * (l - 1) + internal.dim_new_T_PCR_pre_12 * (k - 1) + internal.dim_new_T_PCR_pre_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_T_sero_neg_1; ++i) {
      for (int j = 1; j <= internal.dim_T_sero_neg_2; ++j) {
        for (int k = 1; k <= internal.dim_T_sero_neg_3; ++k) {
          state_next[internal.offset_variable_T_sero_neg + i - 1 + internal.dim_T_sero_neg_1 * (j - 1) + internal.dim_T_sero_neg_12 * (k - 1)] = internal.new_T_sero_neg[internal.dim_new_T_sero_neg_12 * (k - 1) + internal.dim_new_T_sero_neg_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_T_sero_pre_1; ++i) {
      for (int j = 1; j <= internal.dim_T_sero_pre_2; ++j) {
        for (int k = 1; k <= internal.dim_T_sero_pre_3; ++k) {
          for (int l = 1; l <= internal.dim_T_sero_pre_4; ++l) {
            state_next[internal.offset_variable_T_sero_pre + i - 1 + internal.dim_T_sero_pre_1 * (j - 1) + internal.dim_T_sero_pre_12 * (k - 1) + internal.dim_T_sero_pre_123 * (l - 1)] = internal.new_T_sero_pre[internal.dim_new_T_sero_pre_123 * (l - 1) + internal.dim_new_T_sero_pre_12 * (k - 1) + internal.dim_new_T_sero_pre_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_aux_E_4; ++l) {
          internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.n_SE[internal.dim_n_SE_12 * (l - 1) + internal.dim_n_SE_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        for (int k = 2; k <= internal.k_E; ++k) {
          for (int l = 1; l <= internal.dim_aux_E_4; ++l) {
            internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.n_EE[internal.dim_n_EE_123 * (l - 1) + internal.dim_n_EE_12 * (k - 1 - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_E_3; ++k) {
          for (int l = 1; l <= internal.dim_aux_E_4; ++l) {
            internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.aux_E[internal.dim_aux_E_123 * (l - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_1 * (j - 1) + i - 1] - internal.n_EE[internal.dim_n_EE_123 * (l - 1) + internal.dim_n_EE_12 * (k - 1) + internal.dim_n_EE_1 * (j - 1) + i - 1] - internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (l - 1) + internal.dim_n_EE_next_vacc_class_12 * (k - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1] - internal.n_E_next_vacc_class[internal.dim_n_E_next_vacc_class_123 * (l - 1) + internal.dim_n_E_next_vacc_class_12 * (k - 1) + internal.dim_n_E_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_E_3; ++k) {
          int l = 1;
          internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.aux_E[internal.dim_aux_E_123 * 0 + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_1 * (j - 1) + i - 1] + internal.n_E_next_vacc_class[internal.dim_n_E_next_vacc_class_123 * (internal.n_vacc_classes - 1) + internal.dim_n_E_next_vacc_class_12 * (k - 1) + internal.dim_n_E_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        for (int k = 1; k <= internal.dim_aux_E_3; ++k) {
          for (int l = 2; l <= internal.n_vacc_classes; ++l) {
            internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.aux_E[internal.dim_aux_E_123 * (l - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_1 * (j - 1) + i - 1] + internal.n_E_next_vacc_class[internal.dim_n_E_next_vacc_class_123 * (l - 1 - 1) + internal.dim_n_E_next_vacc_class_12 * (k - 1) + internal.dim_n_E_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        int k = 1;
        int l = 1;
        internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.aux_E[internal.dim_aux_E_123 * 0 + internal.dim_aux_E_12 * 0 + internal.dim_aux_E_1 * (j - 1) + i - 1] + internal.n_SE_next_vacc_class[internal.dim_n_SE_next_vacc_class_12 * (internal.n_vacc_classes - 1) + internal.dim_n_SE_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        int k = 1;
        for (int l = 2; l <= internal.n_vacc_classes; ++l) {
          internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.aux_E[internal.dim_aux_E_123 * (l - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_1 * (j - 1) + i - 1] + internal.n_SE_next_vacc_class[internal.dim_n_SE_next_vacc_class_12 * (l - 1 - 1) + internal.dim_n_SE_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        for (int k = 2; k <= internal.k_E; ++k) {
          int l = 1;
          internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.aux_E[internal.dim_aux_E_123 * (l - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_1 * (j - 1) + i - 1] + internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (internal.n_vacc_classes - 1) + internal.dim_n_EE_next_vacc_class_12 * (k - 1 - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_aux_E_1; ++i) {
      for (int j = 1; j <= internal.dim_aux_E_2; ++j) {
        for (int k = 2; k <= internal.k_E; ++k) {
          for (int l = 2; l <= internal.n_vacc_classes; ++l) {
            internal.aux_E[i - 1 + internal.dim_aux_E_1 * (j - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_123 * (l - 1)] = internal.aux_E[internal.dim_aux_E_123 * (l - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_1 * (j - 1) + i - 1] + internal.n_EE_next_vacc_class[internal.dim_n_EE_next_vacc_class_123 * (l - 1 - 1) + internal.dim_n_EE_next_vacc_class_12 * (k - 1 - 1) + internal.dim_n_EE_next_vacc_class_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_n_I_C_to_H_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_n_I_C_to_H_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_n_I_C_to_H_R_conf_3; ++k) {
          internal.n_I_C_to_H_R_conf[i - 1 + internal.dim_n_I_C_to_H_R_conf_1 * (j - 1) + internal.dim_n_I_C_to_H_R_conf_12 * (k - 1)] = dust::distr::rbinom(rng_state, std::round(internal.n_I_C_to_H_R[internal.dim_n_I_C_to_H_R_12 * (k - 1) + internal.dim_n_I_C_to_H_R_1 * (j - 1) + i - 1]), internal.p_star_by_age[i - 1]);
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_H_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_H_D_conf_4; ++l) {
            internal.new_H_D_conf[i - 1 + internal.dim_new_H_D_conf_1 * (j - 1) + internal.dim_new_H_D_conf_12 * (k - 1) + internal.dim_new_H_D_conf_123 * (l - 1)] = internal.aux_H_D_conf[internal.dim_aux_H_D_conf_123 * (l - 1) + internal.dim_aux_H_D_conf_12 * (k - 1) + internal.dim_aux_H_D_conf_1 * (j - 1) + i - 1] + internal.n_H_D_unconf_to_conf[internal.dim_n_H_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_H_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_H_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_D_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_H_D_conf_4; ++l) {
          internal.new_H_D_conf[i - 1 + internal.dim_new_H_D_conf_1 * (j - 1) + internal.dim_new_H_D_conf_12 * (k - 1) + internal.dim_new_H_D_conf_123 * (l - 1)] = internal.new_H_D_conf[internal.dim_new_H_D_conf_123 * (l - 1) + internal.dim_new_H_D_conf_12 * 0 + internal.dim_new_H_D_conf_1 * (j - 1) + i - 1] + internal.n_I_C_to_H_D_conf[internal.dim_n_I_C_to_H_D_conf_12 * (l - 1) + internal.dim_n_I_C_to_H_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_H_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_H_D_unconf_4; ++l) {
            internal.new_H_D_unconf[i - 1 + internal.dim_new_H_D_unconf_1 * (j - 1) + internal.dim_new_H_D_unconf_12 * (k - 1) + internal.dim_new_H_D_unconf_123 * (l - 1)] = internal.aux_H_D_unconf[internal.dim_aux_H_D_unconf_123 * (l - 1) + internal.dim_aux_H_D_unconf_12 * (k - 1) + internal.dim_aux_H_D_unconf_1 * (j - 1) + i - 1] - internal.n_H_D_unconf_to_conf[internal.dim_n_H_D_unconf_to_conf_123 * (l - 1) + internal.dim_n_H_D_unconf_to_conf_12 * (k - 1) + internal.dim_n_H_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_D_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_H_D_unconf_4; ++l) {
          internal.new_H_D_unconf[i - 1 + internal.dim_new_H_D_unconf_1 * (j - 1) + internal.dim_new_H_D_unconf_12 * (k - 1) + internal.dim_new_H_D_unconf_123 * (l - 1)] = internal.new_H_D_unconf[internal.dim_new_H_D_unconf_123 * (l - 1) + internal.dim_new_H_D_unconf_12 * 0 + internal.dim_new_H_D_unconf_1 * (j - 1) + i - 1] + internal.n_I_C_to_H_D[internal.dim_n_I_C_to_H_D_12 * (l - 1) + internal.dim_n_I_C_to_H_D_1 * (j - 1) + i - 1] - internal.n_I_C_to_H_D_conf[internal.dim_n_I_C_to_H_D_conf_12 * (l - 1) + internal.dim_n_I_C_to_H_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_I_C_1; ++i) {
      for (int j = 1; j <= internal.dim_new_I_C_2; ++j) {
        for (int k = 1; k <= internal.dim_new_I_C_3; ++k) {
          for (int l = 1; l <= internal.dim_new_I_C_4; ++l) {
            internal.new_I_C[i - 1 + internal.dim_new_I_C_1 * (j - 1) + internal.dim_new_I_C_12 * (k - 1) + internal.dim_new_I_C_123 * (l - 1)] = I_C[internal.dim_I_C_123 * (l - 1) + internal.dim_I_C_12 * (k - 1) + internal.dim_I_C_1 * (j - 1) + i - 1] + internal.aux_I_C[internal.dim_aux_I_C_123 * (l - 1) + internal.dim_aux_I_C_12 * (k - 1) + internal.dim_aux_I_C_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_I_A_1; ++i) {
      for (int j = 1; j <= internal.dim_I_A_2; ++j) {
        for (int k = 1; k <= internal.dim_I_A_3; ++k) {
          for (int l = 1; l <= internal.dim_I_A_4; ++l) {
            state_next[internal.offset_variable_I_A + i - 1 + internal.dim_I_A_1 * (j - 1) + internal.dim_I_A_12 * (k - 1) + internal.dim_I_A_123 * (l - 1)] = internal.new_I_A[internal.dim_new_I_A_123 * (l - 1) + internal.dim_new_I_A_12 * (k - 1) + internal.dim_new_I_A_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    state_next[7] = new_ICU_tot;
    for (int i = 1; i <= internal.dim_S_1; ++i) {
      for (int j = 1; j <= internal.dim_S_2; ++j) {
        state_next[internal.offset_variable_S + i - 1 + internal.dim_S_1 * (j - 1)] = internal.new_S[internal.dim_new_S_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= internal.dim_new_E_1; ++i) {
      for (int j = 1; j <= internal.dim_new_E_2; ++j) {
        for (int k = 1; k <= internal.dim_new_E_3; ++k) {
          for (int l = 1; l <= internal.dim_new_E_4; ++l) {
            internal.new_E[i - 1 + internal.dim_new_E_1 * (j - 1) + internal.dim_new_E_12 * (k - 1) + internal.dim_new_E_123 * (l - 1)] = E[internal.dim_E_123 * (l - 1) + internal.dim_E_12 * (k - 1) + internal.dim_E_1 * (j - 1) + i - 1] + internal.aux_E[internal.dim_aux_E_123 * (l - 1) + internal.dim_aux_E_12 * (k - 1) + internal.dim_aux_E_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_H_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_H_R_conf_4; ++l) {
            internal.new_H_R_conf[i - 1 + internal.dim_new_H_R_conf_1 * (j - 1) + internal.dim_new_H_R_conf_12 * (k - 1) + internal.dim_new_H_R_conf_123 * (l - 1)] = internal.aux_H_R_conf[internal.dim_aux_H_R_conf_123 * (l - 1) + internal.dim_aux_H_R_conf_12 * (k - 1) + internal.dim_aux_H_R_conf_1 * (j - 1) + i - 1] + internal.n_H_R_unconf_to_conf[internal.dim_n_H_R_unconf_to_conf_123 * (l - 1) + internal.dim_n_H_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_H_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_R_conf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_H_R_conf_4; ++l) {
          internal.new_H_R_conf[i - 1 + internal.dim_new_H_R_conf_1 * (j - 1) + internal.dim_new_H_R_conf_12 * (k - 1) + internal.dim_new_H_R_conf_123 * (l - 1)] = internal.new_H_R_conf[internal.dim_new_H_R_conf_123 * (l - 1) + internal.dim_new_H_R_conf_12 * 0 + internal.dim_new_H_R_conf_1 * (j - 1) + i - 1] + internal.n_I_C_to_H_R_conf[internal.dim_n_I_C_to_H_R_conf_12 * (l - 1) + internal.dim_n_I_C_to_H_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_new_H_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_new_H_R_unconf_4; ++l) {
            internal.new_H_R_unconf[i - 1 + internal.dim_new_H_R_unconf_1 * (j - 1) + internal.dim_new_H_R_unconf_12 * (k - 1) + internal.dim_new_H_R_unconf_123 * (l - 1)] = internal.aux_H_R_unconf[internal.dim_aux_H_R_unconf_123 * (l - 1) + internal.dim_aux_H_R_unconf_12 * (k - 1) + internal.dim_aux_H_R_unconf_1 * (j - 1) + i - 1] - internal.n_H_R_unconf_to_conf[internal.dim_n_H_R_unconf_to_conf_123 * (l - 1) + internal.dim_n_H_R_unconf_to_conf_12 * (k - 1) + internal.dim_n_H_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_new_H_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_new_H_R_unconf_2; ++j) {
        int k = 1;
        for (int l = 1; l <= internal.dim_new_H_R_unconf_4; ++l) {
          internal.new_H_R_unconf[i - 1 + internal.dim_new_H_R_unconf_1 * (j - 1) + internal.dim_new_H_R_unconf_12 * (k - 1) + internal.dim_new_H_R_unconf_123 * (l - 1)] = internal.new_H_R_unconf[internal.dim_new_H_R_unconf_123 * (l - 1) + internal.dim_new_H_R_unconf_12 * 0 + internal.dim_new_H_R_unconf_1 * (j - 1) + i - 1] + internal.n_I_C_to_H_R[internal.dim_n_I_C_to_H_R_12 * (l - 1) + internal.dim_n_I_C_to_H_R_1 * (j - 1) + i - 1] - internal.n_I_C_to_H_R_conf[internal.dim_n_I_C_to_H_R_conf_12 * (l - 1) + internal.dim_n_I_C_to_H_R_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    state_next[2] = cum_admit_conf + odin_sum1(internal.n_I_C_to_H_D_conf.data(), 0, internal.dim_n_I_C_to_H_D_conf) + odin_sum1(internal.n_I_C_to_H_R_conf.data(), 0, internal.dim_n_I_C_to_H_R_conf) + odin_sum1(internal.n_I_C_to_ICU_pre_conf.data(), 0, internal.dim_n_I_C_to_ICU_pre_conf);
    for (int i = 1; i <= internal.dim_H_D_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_H_D_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_H_D_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_H_D_conf_4; ++l) {
            state_next[internal.offset_variable_H_D_conf + i - 1 + internal.dim_H_D_conf_1 * (j - 1) + internal.dim_H_D_conf_12 * (k - 1) + internal.dim_H_D_conf_123 * (l - 1)] = internal.new_H_D_conf[internal.dim_new_H_D_conf_123 * (l - 1) + internal.dim_new_H_D_conf_12 * (k - 1) + internal.dim_new_H_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_H_D_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_H_D_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_H_D_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_H_D_unconf_4; ++l) {
            state_next[internal.offset_variable_H_D_unconf + i - 1 + internal.dim_H_D_unconf_1 * (j - 1) + internal.dim_H_D_unconf_12 * (k - 1) + internal.dim_H_D_unconf_123 * (l - 1)] = internal.new_H_D_unconf[internal.dim_new_H_D_unconf_123 * (l - 1) + internal.dim_new_H_D_unconf_12 * (k - 1) + internal.dim_new_H_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_I_C_1; ++i) {
      for (int j = 1; j <= internal.dim_I_C_2; ++j) {
        for (int k = 1; k <= internal.dim_I_C_3; ++k) {
          for (int l = 1; l <= internal.dim_I_C_4; ++l) {
            state_next[internal.offset_variable_I_C + i - 1 + internal.dim_I_C_1 * (j - 1) + internal.dim_I_C_12 * (k - 1) + internal.dim_I_C_123 * (l - 1)] = internal.new_I_C[internal.dim_new_I_C_123 * (l - 1) + internal.dim_new_I_C_12 * (k - 1) + internal.dim_new_I_C_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    real_t new_general_tot = odin_sum1(internal.new_ICU_pre_conf.data(), 0, internal.dim_new_ICU_pre_conf) + odin_sum1(internal.new_H_R_conf.data(), 0, internal.dim_new_H_R_conf) + odin_sum1(internal.new_H_D_conf.data(), 0, internal.dim_new_H_D_conf) + odin_sum1(internal.new_W_R_conf.data(), 0, internal.dim_new_W_R_conf) + odin_sum1(internal.new_W_D_conf.data(), 0, internal.dim_new_W_D_conf);
    for (int i = 1; i <= internal.dim_E_1; ++i) {
      for (int j = 1; j <= internal.dim_E_2; ++j) {
        for (int k = 1; k <= internal.dim_E_3; ++k) {
          for (int l = 1; l <= internal.dim_E_4; ++l) {
            state_next[internal.offset_variable_E + i - 1 + internal.dim_E_1 * (j - 1) + internal.dim_E_12 * (k - 1) + internal.dim_E_123 * (l - 1)] = internal.new_E[internal.dim_new_E_123 * (l - 1) + internal.dim_new_E_12 * (k - 1) + internal.dim_new_E_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_H_R_conf_1; ++i) {
      for (int j = 1; j <= internal.dim_H_R_conf_2; ++j) {
        for (int k = 1; k <= internal.dim_H_R_conf_3; ++k) {
          for (int l = 1; l <= internal.dim_H_R_conf_4; ++l) {
            state_next[internal.offset_variable_H_R_conf + i - 1 + internal.dim_H_R_conf_1 * (j - 1) + internal.dim_H_R_conf_12 * (k - 1) + internal.dim_H_R_conf_123 * (l - 1)] = internal.new_H_R_conf[internal.dim_new_H_R_conf_123 * (l - 1) + internal.dim_new_H_R_conf_12 * (k - 1) + internal.dim_new_H_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= internal.dim_H_R_unconf_1; ++i) {
      for (int j = 1; j <= internal.dim_H_R_unconf_2; ++j) {
        for (int k = 1; k <= internal.dim_H_R_unconf_3; ++k) {
          for (int l = 1; l <= internal.dim_H_R_unconf_4; ++l) {
            state_next[internal.offset_variable_H_R_unconf + i - 1 + internal.dim_H_R_unconf_1 * (j - 1) + internal.dim_H_R_unconf_12 * (k - 1) + internal.dim_H_R_unconf_123 * (l - 1)] = internal.new_H_R_unconf[internal.dim_new_H_R_unconf_123 * (l - 1) + internal.dim_new_H_R_unconf_12 * (k - 1) + internal.dim_new_H_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    state_next[8] = new_general_tot;
    state_next[9] = new_ICU_tot + new_general_tot;
  }
private:
  init_t internal;
};
template <typename real_t>
real_t odin_sum2(const real_t * x, int from_i, int to_i, int from_j, int to_j, int dim_x_1) {
  real_t tot = 0.0;
  for (int j = from_j; j < to_j; ++j) {
    int jj = j * dim_x_1;
    for (int i = from_i; i < to_i; ++i) {
      tot += x[i + jj];
    }
  }
  return tot;
}
template <typename real_t>
real_t odin_sum3(const real_t * x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int dim_x_1, int dim_x_12) {
  real_t tot = 0.0;
  for (int k = from_k; k < to_k; ++k) {
    int kk = k * dim_x_12;
    for (int j = from_j; j < to_j; ++j) {
      int jj = j * dim_x_1 + kk;
      for (int i = from_i; i < to_i; ++i) {
        tot += x[i + jj];
      }
    }
  }
  return tot;
}
template <typename real_t>
real_t odin_sum4(const real_t * x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int from_l, int to_l, int dim_x_1, int dim_x_12, int dim_x_123) {
  real_t tot = 0.0;
  for (int l = from_l; l < to_l; ++l) {
    int ll = l * dim_x_123;
    for (int k = from_k; k < to_k; ++k) {
      int kk = k * dim_x_12 + ll;
      for (int j = from_j; j < to_j; ++j) {
        int jj = j * dim_x_1 + kk;
        for (int i = from_i; i < to_i; ++i) {
          tot += x[i + jj];
        }
      }
    }
  }
  return tot;
}
#include <array>
#include <cpp11/R.hpp>
#include <cpp11/sexp.hpp>
#include <cpp11/doubles.hpp>
#include <cpp11/integers.hpp>
#include <cpp11/list.hpp>
#include <cpp11/strings.hpp>
#include <vector>

// These would be nice to make constexpr but the way that NA values
// are defined in R's include files do not allow it.
template <typename T>
inline T na_value();

template <>
inline int na_value<int>() {
  return NA_INTEGER;
}

template <>
inline double na_value<double>() {
  return NA_REAL;
}

template <typename T>
inline bool is_na(T x);

template <>
inline bool is_na(int x) {
  return x == NA_INTEGER;
}

template <>
inline bool is_na(double x) {
  return ISNA(x);
}

inline size_t object_length(cpp11::sexp x) {
  return ::Rf_xlength(x);
}

template <typename T>
void user_check_value(T value, const char *name, T min, T max) {
  if (ISNA(value)) {
    cpp11::stop("'%s' must not be NA", name);
  }
  if (min != na_value<T>() && value < min) {
    cpp11::stop("Expected '%s' to be at least %g", name, (double) min);
  }
  if (max != na_value<T>() && value > max) {
    cpp11::stop("Expected '%s' to be at most %g", name, (double) max);
  }
}

template <typename T>
void user_check_array_value(const std::vector<T>& value, const char *name,
                            T min, T max) {
  for (auto& x : value) {
    user_check_value(x, name, min, max);
  }
}

inline size_t user_get_array_rank(cpp11::sexp x) {
  if (!::Rf_isArray(x)) {
    return 1;
  } else {
    cpp11::integers dim = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
    return dim.size();
  }
}

template <size_t N>
void user_check_array_rank(cpp11::sexp x, const char *name) {
  size_t rank = user_get_array_rank(x);
  if (rank != N) {
    if (N == 1) {
      cpp11::stop("Expected a vector for '%s'", name);
    } else if (N == 2) {
      cpp11::stop("Expected a matrix for '%s'", name);
    } else {
      cpp11::stop("Expected an array of rank %d for '%s'", N, name);
    }
  }
}

template <size_t N>
void user_check_array_dim(cpp11::sexp x, const char *name,
                          const std::array<int, N>& dim_expected) {
  cpp11::integers dim = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
  for (size_t i = 0; i < N; ++i) {
    if (dim[(int)i] != dim_expected[i]) {
      Rf_error("Incorrect size of dimension %d of '%s' (expected %d)",
               i + 1, name, dim_expected[i]);
    }
  }
}

template <>
inline void user_check_array_dim<1>(cpp11::sexp x, const char *name,
                                    const std::array<int, 1>& dim_expected) {
  if ((int)object_length(x) != dim_expected[0]) {
    cpp11::stop("Expected length %d value for '%s'", dim_expected[0], name);
  }
}

template <size_t N>
void user_set_array_dim(cpp11::sexp x, const char *name,
                        std::array<int, N>& dim) {
  cpp11::integers dim_given = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
  std::copy(dim_given.begin(), dim_given.end(), dim.begin());
}

template <>
inline void user_set_array_dim<1>(cpp11::sexp x, const char *name,
                                  std::array<int, 1>& dim) {
  dim[0] = object_length(x);
}

template <typename T>
T user_get_scalar(cpp11::list user, const char *name,
                  const T previous, T min, T max) {
  T ret = previous;
  cpp11::sexp x = user[name];
  if (x != R_NilValue) {
    if (object_length(x) != 1) {
      cpp11::stop("Expected a scalar numeric for '%s'", name);
    }
    // TODO: when we're getting out an integer this is a bit too relaxed
    if (TYPEOF(x) == REALSXP) {
      ret = cpp11::as_cpp<T>(x);
    } else if (TYPEOF(x) == INTSXP) {
      ret = cpp11::as_cpp<T>(x);
    } else {
      cpp11::stop("Expected a numeric value for %s", name);
    }
  }

  if (is_na(ret)) {
    cpp11::stop("Expected a value for '%s'", name);
  }
  user_check_value<T>(ret, name, min, max);
  return ret;
}

// This is not actually really enough to work generally as there's an
// issue with what to do with checking previous, min and max against
// NA_REAL -- which is not going to be the correct value for float
// rather than double.  Further, this is not extendable to the vector
// cases because we hit issues around partial template specification.
//
// We can make the latter go away by replacing std::array<T, N> with
// std::vector<T> - the cost is not great.  But the NA issues remain
// and will require further thought. However, this template
// specialisation and the tests that use it ensure that the core code
// generation is at least compatible with floats.
//
// See #6
template <>
inline float user_get_scalar<float>(cpp11::list user, const char *name,
                                    const float previous, float min, float max) {
  double value = user_get_scalar<double>(user, name, previous, min, max);
  return static_cast<float>(value);
}

template <typename T, size_t N>
std::vector<T> user_get_array_fixed(cpp11::list user, const char *name,
                                    const std::vector<T> previous,
                                    const std::array<int, N>& dim,
                                    T min, T max) {
  cpp11::sexp x = user[name];
  if (x == R_NilValue) {
    if (previous.size() == 0) {
      cpp11::stop("Expected a value for '%s'", name);
    }
    return previous;
  }

  user_check_array_rank<N>(x, name);
  user_check_array_dim<N>(x, name, dim);

  std::vector<T> ret = cpp11::as_cpp<std::vector<T>>(x);
  user_check_array_value(ret, name, min, max);

  return ret;
}

template <typename T, size_t N>
std::vector<T> user_get_array_variable(cpp11::list user, const char *name,
                                       std::vector<T> previous,
                                       std::array<int, N>& dim,
                                       T min, T max) {
  cpp11::sexp x = user[name];
  if (x == R_NilValue) {
    if (previous.size() == 0) {
      cpp11::stop("Expected a value for '%s'", name);
    }
    return previous;
  }

  user_check_array_rank<N>(x, name);
  user_set_array_dim<N>(x, name, dim);

  std::vector<T> ret = cpp11::as_cpp<std::vector<T>>(x);
  user_check_array_value(ret, name, min, max);

  return ret;
}

// This is sum with inclusive "from", exclusive "to", following the
// same function in odin
template <typename T>
#ifdef __NVCC__
__host__ __device__
#endif
T odin_sum1(const T * x, size_t from, size_t to) {
  T tot = 0.0;
  for (size_t i = from; i < to; ++i) {
    tot += x[i];
  }
  return tot;
}


inline cpp11::writable::integers integer_sequence(size_t from, size_t len) {
  cpp11::writable::integers ret(len);
  int* data = INTEGER(ret);
  for (size_t i = 0, j = from; i < len; ++i, ++j) {
    data[i] = j;
  }
  return ret;
}
template<>
carehomes::init_t dust_data<carehomes>(cpp11::list user) {
  typedef typename carehomes::real_t real_t;
  carehomes::init_t internal;
  internal.dim_gamma_sero_pre = 2;
  internal.initial_cum_admit_conf = 0;
  internal.initial_cum_infections = 0;
  internal.initial_cum_new_conf = 0;
  internal.initial_cum_sympt_cases = 0;
  internal.initial_cum_sympt_cases_over25 = 0;
  internal.initial_D_comm_tot = 0;
  internal.initial_D_hosp_tot = 0;
  internal.initial_D_tot = 0;
  internal.initial_general_tot = 0;
  internal.initial_hosp_tot = 0;
  internal.initial_ICU_tot = 0;
  internal.initial_N_tot2 = 0;
  internal.initial_N_tot3 = 0;
  internal.initial_react_pos = 0;
  internal.initial_sero_pos = 0;
  internal.initial_time = 0;
  internal.gamma_sero_pre = std::vector<real_t>(internal.dim_gamma_sero_pre);
  internal.dt = NA_REAL;
  internal.G_D_transmission = NA_REAL;
  internal.hosp_transmission = NA_REAL;
  internal.ICU_transmission = NA_REAL;
  internal.k_A = NA_INTEGER;
  internal.k_C = NA_INTEGER;
  internal.k_E = NA_INTEGER;
  internal.k_G_D = NA_INTEGER;
  internal.k_H_D = NA_INTEGER;
  internal.k_H_R = NA_INTEGER;
  internal.k_ICU_D = NA_INTEGER;
  internal.k_ICU_pre = NA_INTEGER;
  internal.k_ICU_W_D = NA_INTEGER;
  internal.k_ICU_W_R = NA_INTEGER;
  internal.k_PCR_pos = NA_INTEGER;
  internal.k_PCR_pre = NA_INTEGER;
  internal.k_sero_pos = NA_INTEGER;
  internal.k_W_D = NA_INTEGER;
  internal.k_W_R = NA_INTEGER;
  internal.n_age_groups = NA_INTEGER;
  internal.n_groups = NA_INTEGER;
  internal.gamma_A = 0.10000000000000001;
  internal.gamma_C = 0.10000000000000001;
  internal.gamma_E = 0.10000000000000001;
  internal.gamma_G_D = 0.10000000000000001;
  internal.gamma_H_D = 0.10000000000000001;
  internal.gamma_H_R = 0.10000000000000001;
  internal.gamma_ICU_D = 0.10000000000000001;
  internal.gamma_ICU_pre = 0.10000000000000001;
  internal.gamma_ICU_W_D = 0.10000000000000001;
  internal.gamma_ICU_W_R = 0.10000000000000001;
  internal.gamma_PCR_pos = 0.10000000000000001;
  internal.gamma_PCR_pre = 0.10000000000000001;
  internal.gamma_sero_pos = 0.10000000000000001;
  internal.gamma_sero_pre_1 = 0.10000000000000001;
  internal.gamma_sero_pre_2 = 0.10000000000000001;
  internal.gamma_U = 0.10000000000000001;
  internal.gamma_W_D = 0.10000000000000001;
  internal.gamma_W_R = 0.10000000000000001;
  internal.model_pcr_and_serology_user = 1;
  internal.p_sero_pre_1 = 0.5;
  internal.vaccine_daily_doses = 0;
  std::array <int, 1> dim_beta_step;
  internal.beta_step = user_get_array_variable<real_t, 1>(user, "beta_step", internal.beta_step, dim_beta_step, NA_REAL, NA_REAL);
  internal.dim_beta_step = internal.beta_step.size();
  internal.dt = user_get_scalar<real_t>(user, "dt", internal.dt, NA_REAL, NA_REAL);
  internal.G_D_transmission = user_get_scalar<real_t>(user, "G_D_transmission", internal.G_D_transmission, NA_REAL, NA_REAL);
  internal.gamma_A = user_get_scalar<real_t>(user, "gamma_A", internal.gamma_A, NA_REAL, NA_REAL);
  internal.gamma_C = user_get_scalar<real_t>(user, "gamma_C", internal.gamma_C, NA_REAL, NA_REAL);
  internal.gamma_E = user_get_scalar<real_t>(user, "gamma_E", internal.gamma_E, NA_REAL, NA_REAL);
  internal.gamma_G_D = user_get_scalar<real_t>(user, "gamma_G_D", internal.gamma_G_D, NA_REAL, NA_REAL);
  internal.gamma_H_D = user_get_scalar<real_t>(user, "gamma_H_D", internal.gamma_H_D, NA_REAL, NA_REAL);
  internal.gamma_H_R = user_get_scalar<real_t>(user, "gamma_H_R", internal.gamma_H_R, NA_REAL, NA_REAL);
  internal.gamma_ICU_D = user_get_scalar<real_t>(user, "gamma_ICU_D", internal.gamma_ICU_D, NA_REAL, NA_REAL);
  internal.gamma_ICU_pre = user_get_scalar<real_t>(user, "gamma_ICU_pre", internal.gamma_ICU_pre, NA_REAL, NA_REAL);
  internal.gamma_ICU_W_D = user_get_scalar<real_t>(user, "gamma_ICU_W_D", internal.gamma_ICU_W_D, NA_REAL, NA_REAL);
  internal.gamma_ICU_W_R = user_get_scalar<real_t>(user, "gamma_ICU_W_R", internal.gamma_ICU_W_R, NA_REAL, NA_REAL);
  internal.gamma_PCR_pos = user_get_scalar<real_t>(user, "gamma_PCR_pos", internal.gamma_PCR_pos, NA_REAL, NA_REAL);
  internal.gamma_PCR_pre = user_get_scalar<real_t>(user, "gamma_PCR_pre", internal.gamma_PCR_pre, NA_REAL, NA_REAL);
  internal.gamma_sero_pos = user_get_scalar<real_t>(user, "gamma_sero_pos", internal.gamma_sero_pos, NA_REAL, NA_REAL);
  internal.gamma_sero_pre_1 = user_get_scalar<real_t>(user, "gamma_sero_pre_1", internal.gamma_sero_pre_1, NA_REAL, NA_REAL);
  internal.gamma_sero_pre_2 = user_get_scalar<real_t>(user, "gamma_sero_pre_2", internal.gamma_sero_pre_2, NA_REAL, NA_REAL);
  internal.gamma_U = user_get_scalar<real_t>(user, "gamma_U", internal.gamma_U, NA_REAL, NA_REAL);
  internal.gamma_W_D = user_get_scalar<real_t>(user, "gamma_W_D", internal.gamma_W_D, NA_REAL, NA_REAL);
  internal.gamma_W_R = user_get_scalar<real_t>(user, "gamma_W_R", internal.gamma_W_R, NA_REAL, NA_REAL);
  internal.hosp_transmission = user_get_scalar<real_t>(user, "hosp_transmission", internal.hosp_transmission, NA_REAL, NA_REAL);
  internal.ICU_transmission = user_get_scalar<real_t>(user, "ICU_transmission", internal.ICU_transmission, NA_REAL, NA_REAL);
  internal.k_A = user_get_scalar<int>(user, "k_A", internal.k_A, NA_REAL, NA_REAL);
  internal.k_C = user_get_scalar<int>(user, "k_C", internal.k_C, NA_REAL, NA_REAL);
  internal.k_E = user_get_scalar<int>(user, "k_E", internal.k_E, NA_REAL, NA_REAL);
  internal.k_G_D = user_get_scalar<int>(user, "k_G_D", internal.k_G_D, NA_REAL, NA_REAL);
  internal.k_H_D = user_get_scalar<int>(user, "k_H_D", internal.k_H_D, NA_REAL, NA_REAL);
  internal.k_H_R = user_get_scalar<int>(user, "k_H_R", internal.k_H_R, NA_REAL, NA_REAL);
  internal.k_ICU_D = user_get_scalar<int>(user, "k_ICU_D", internal.k_ICU_D, NA_REAL, NA_REAL);
  internal.k_ICU_pre = user_get_scalar<int>(user, "k_ICU_pre", internal.k_ICU_pre, NA_REAL, NA_REAL);
  internal.k_ICU_W_D = user_get_scalar<int>(user, "k_ICU_W_D", internal.k_ICU_W_D, NA_REAL, NA_REAL);
  internal.k_ICU_W_R = user_get_scalar<int>(user, "k_ICU_W_R", internal.k_ICU_W_R, NA_REAL, NA_REAL);
  internal.k_PCR_pos = user_get_scalar<int>(user, "k_PCR_pos", internal.k_PCR_pos, NA_REAL, NA_REAL);
  internal.k_PCR_pre = user_get_scalar<int>(user, "k_PCR_pre", internal.k_PCR_pre, NA_REAL, NA_REAL);
  internal.k_sero_pos = user_get_scalar<int>(user, "k_sero_pos", internal.k_sero_pos, NA_REAL, NA_REAL);
  internal.k_W_D = user_get_scalar<int>(user, "k_W_D", internal.k_W_D, NA_REAL, NA_REAL);
  internal.k_W_R = user_get_scalar<int>(user, "k_W_R", internal.k_W_R, NA_REAL, NA_REAL);
  internal.model_pcr_and_serology_user = user_get_scalar<real_t>(user, "model_pcr_and_serology_user", internal.model_pcr_and_serology_user, NA_REAL, NA_REAL);
  internal.n_age_groups = user_get_scalar<int>(user, "n_age_groups", internal.n_age_groups, NA_REAL, NA_REAL);
  internal.n_groups = user_get_scalar<int>(user, "n_groups", internal.n_groups, NA_REAL, NA_REAL);
  std::array <int, 1> dim_p_G_D_step;
  internal.p_G_D_step = user_get_array_variable<real_t, 1>(user, "p_G_D_step", internal.p_G_D_step, dim_p_G_D_step, NA_REAL, NA_REAL);
  internal.dim_p_G_D_step = internal.p_G_D_step.size();
  std::array <int, 1> dim_p_H_D_step;
  internal.p_H_D_step = user_get_array_variable<real_t, 1>(user, "p_H_D_step", internal.p_H_D_step, dim_p_H_D_step, NA_REAL, NA_REAL);
  internal.dim_p_H_D_step = internal.p_H_D_step.size();
  std::array <int, 1> dim_p_H_step;
  internal.p_H_step = user_get_array_variable<real_t, 1>(user, "p_H_step", internal.p_H_step, dim_p_H_step, NA_REAL, NA_REAL);
  internal.dim_p_H_step = internal.p_H_step.size();
  std::array <int, 1> dim_p_ICU_D_step;
  internal.p_ICU_D_step = user_get_array_variable<real_t, 1>(user, "p_ICU_D_step", internal.p_ICU_D_step, dim_p_ICU_D_step, NA_REAL, NA_REAL);
  internal.dim_p_ICU_D_step = internal.p_ICU_D_step.size();
  std::array <int, 1> dim_p_ICU_step;
  internal.p_ICU_step = user_get_array_variable<real_t, 1>(user, "p_ICU_step", internal.p_ICU_step, dim_p_ICU_step, NA_REAL, NA_REAL);
  internal.dim_p_ICU_step = internal.p_ICU_step.size();
  internal.p_sero_pre_1 = user_get_scalar<real_t>(user, "p_sero_pre_1", internal.p_sero_pre_1, NA_REAL, NA_REAL);
  std::array <int, 1> dim_p_star_step;
  internal.p_star_step = user_get_array_variable<real_t, 1>(user, "p_star_step", internal.p_star_step, dim_p_star_step, NA_REAL, NA_REAL);
  internal.dim_p_star_step = internal.p_star_step.size();
  std::array <int, 1> dim_p_W_D_step;
  internal.p_W_D_step = user_get_array_variable<real_t, 1>(user, "p_W_D_step", internal.p_W_D_step, dim_p_W_D_step, NA_REAL, NA_REAL);
  internal.dim_p_W_D_step = internal.p_W_D_step.size();
  std::array <int, 2> dim_rel_susceptibility;
  internal.rel_susceptibility = user_get_array_variable<real_t, 2>(user, "rel_susceptibility", internal.rel_susceptibility, dim_rel_susceptibility, NA_REAL, NA_REAL);
  internal.dim_rel_susceptibility = internal.rel_susceptibility.size();
  internal.dim_rel_susceptibility_1 = dim_rel_susceptibility[0];
  internal.dim_rel_susceptibility_2 = dim_rel_susceptibility[1];
  std::array <int, 1> dim_strain_seed_step;
  internal.strain_seed_step = user_get_array_variable<real_t, 1>(user, "strain_seed_step", internal.strain_seed_step, dim_strain_seed_step, NA_REAL, NA_REAL);
  internal.dim_strain_seed_step = internal.strain_seed_step.size();
  std::array <int, 1> dim_strain_transmission;
  internal.strain_transmission = user_get_array_variable<real_t, 1>(user, "strain_transmission", internal.strain_transmission, dim_strain_transmission, NA_REAL, NA_REAL);
  internal.dim_strain_transmission = internal.strain_transmission.size();
  internal.vaccine_daily_doses = user_get_scalar<real_t>(user, "vaccine_daily_doses", internal.vaccine_daily_doses, NA_REAL, NA_REAL);
  internal.dim_cum_admit_by_age = internal.n_groups;
  internal.dim_D_comm = internal.n_groups;
  internal.dim_D_hosp = internal.n_groups;
  internal.dim_m_1 = internal.n_groups;
  internal.dim_m_2 = internal.n_groups;
  internal.dim_N_tot = internal.n_groups;
  internal.dim_new_D_comm = internal.n_groups;
  internal.dim_new_D_hosp = internal.n_groups;
  internal.dim_p_C = internal.n_groups;
  internal.dim_p_G_D_by_age = internal.n_groups;
  internal.dim_p_H_by_age = internal.n_groups;
  internal.dim_p_H_D_by_age = internal.n_groups;
  internal.dim_p_ICU_by_age = internal.n_groups;
  internal.dim_p_ICU_D_by_age = internal.n_groups;
  internal.dim_p_RS = internal.n_groups;
  internal.dim_p_sero_pos = internal.n_groups;
  internal.dim_p_star_by_age = internal.n_groups;
  internal.dim_p_W_D_by_age = internal.n_groups;
  internal.dim_psi_G_D = internal.n_groups;
  internal.dim_psi_H = internal.n_groups;
  internal.dim_psi_H_D = internal.n_groups;
  internal.dim_psi_ICU = internal.n_groups;
  internal.dim_psi_ICU_D = internal.n_groups;
  internal.dim_psi_star = internal.n_groups;
  internal.dim_psi_W_D = internal.n_groups;
  internal.dim_vaccine_n_candidates = internal.n_groups;
  internal.dim_vaccine_population_possible = internal.n_groups;
  internal.dim_vaccine_population_reluctant = internal.n_groups;
  internal.dim_waning_rate = internal.n_groups;
  internal.initial_beta_out = internal.beta_step[0];
  internal.model_pcr_and_serology = (internal.model_pcr_and_serology_user == 1 ? 1 : 0);
  internal.p_E_progress = 1 - std::exp(- internal.gamma_E * internal.dt);
  internal.p_G_D_progress = 1 - std::exp(- internal.gamma_G_D * internal.dt);
  internal.p_H_D_progress = 1 - std::exp(- internal.gamma_H_D * internal.dt);
  internal.p_H_R_progress = 1 - std::exp(- internal.gamma_H_R * internal.dt);
  internal.p_I_A_progress = 1 - std::exp(- internal.gamma_A * internal.dt);
  internal.p_I_C_progress = 1 - std::exp(- internal.gamma_C * internal.dt);
  internal.p_ICU_D_progress = 1 - std::exp(- internal.gamma_ICU_D * internal.dt);
  internal.p_ICU_pre_progress = 1 - std::exp(- internal.gamma_ICU_pre * internal.dt);
  internal.p_ICU_W_D_progress = 1 - std::exp(- internal.gamma_ICU_W_D * internal.dt);
  internal.p_ICU_W_R_progress = 1 - std::exp(- internal.gamma_ICU_W_R * internal.dt);
  internal.p_T_PCR_pos_progress = 1 - std::exp(- internal.gamma_PCR_pos * internal.dt);
  internal.p_T_PCR_pre_progress = 1 - std::exp(- internal.gamma_PCR_pre * internal.dt);
  internal.p_T_sero_pos_progress = 1 - std::exp(- internal.gamma_sero_pos * internal.dt);
  internal.p_test = 1 - std::exp(- internal.gamma_U * internal.dt);
  internal.p_W_D_progress = 1 - std::exp(- internal.gamma_W_D * internal.dt);
  internal.p_W_R_progress = 1 - std::exp(- internal.gamma_W_R * internal.dt);
  internal.initial_cum_admit_by_age = std::vector<real_t>(internal.dim_cum_admit_by_age);
  internal.initial_D_comm = std::vector<real_t>(internal.dim_D_comm);
  internal.initial_D_hosp = std::vector<real_t>(internal.dim_D_hosp);
  internal.initial_N_tot = std::vector<real_t>(internal.dim_N_tot);
  internal.new_D_comm = std::vector<real_t>(internal.dim_new_D_comm);
  internal.new_D_hosp = std::vector<real_t>(internal.dim_new_D_hosp);
  internal.p_G_D_by_age = std::vector<real_t>(internal.dim_p_G_D_by_age);
  internal.p_H_by_age = std::vector<real_t>(internal.dim_p_H_by_age);
  internal.p_H_D_by_age = std::vector<real_t>(internal.dim_p_H_D_by_age);
  internal.p_ICU_by_age = std::vector<real_t>(internal.dim_p_ICU_by_age);
  internal.p_ICU_D_by_age = std::vector<real_t>(internal.dim_p_ICU_D_by_age);
  internal.p_RS = std::vector<real_t>(internal.dim_p_RS);
  internal.p_star_by_age = std::vector<real_t>(internal.dim_p_star_by_age);
  internal.p_W_D_by_age = std::vector<real_t>(internal.dim_p_W_D_by_age);
  internal.vaccine_n_candidates = std::vector<real_t>(internal.dim_vaccine_n_candidates);
  internal.vaccine_population_possible = std::vector<real_t>(internal.dim_vaccine_population_possible);
  internal.dim_m = internal.dim_m_1 * internal.dim_m_2;
  {
     int i = 1;
     internal.gamma_sero_pre[i - 1] = internal.gamma_sero_pre_1;
  }
  {
     int i = 2;
     internal.gamma_sero_pre[i - 1] = internal.gamma_sero_pre_2;
  }
  for (int i = 1; i <= internal.dim_cum_admit_by_age; ++i) {
    internal.initial_cum_admit_by_age[i - 1] = 0;
  }
  for (int i = 1; i <= internal.dim_D_comm; ++i) {
    internal.initial_D_comm[i - 1] = 0;
  }
  for (int i = 1; i <= internal.dim_D_hosp; ++i) {
    internal.initial_D_hosp[i - 1] = 0;
  }
  for (int i = 1; i <= internal.dim_N_tot; ++i) {
    internal.initial_N_tot[i - 1] = 0;
  }
  internal.n_strains = internal.dim_strain_transmission;
  internal.p_C = user_get_array_fixed<real_t, 1>(user, "p_C", internal.p_C, {internal.dim_p_C}, NA_REAL, NA_REAL);
  internal.p_sero_pos = user_get_array_fixed<real_t, 1>(user, "p_sero_pos", internal.p_sero_pos, {internal.dim_p_sero_pos}, NA_REAL, NA_REAL);
  internal.psi_G_D = user_get_array_fixed<real_t, 1>(user, "psi_G_D", internal.psi_G_D, {internal.dim_psi_G_D}, NA_REAL, NA_REAL);
  internal.psi_H = user_get_array_fixed<real_t, 1>(user, "psi_H", internal.psi_H, {internal.dim_psi_H}, NA_REAL, NA_REAL);
  internal.psi_H_D = user_get_array_fixed<real_t, 1>(user, "psi_H_D", internal.psi_H_D, {internal.dim_psi_H_D}, NA_REAL, NA_REAL);
  internal.psi_ICU = user_get_array_fixed<real_t, 1>(user, "psi_ICU", internal.psi_ICU, {internal.dim_psi_ICU}, NA_REAL, NA_REAL);
  internal.psi_ICU_D = user_get_array_fixed<real_t, 1>(user, "psi_ICU_D", internal.psi_ICU_D, {internal.dim_psi_ICU_D}, NA_REAL, NA_REAL);
  internal.psi_star = user_get_array_fixed<real_t, 1>(user, "psi_star", internal.psi_star, {internal.dim_psi_star}, NA_REAL, NA_REAL);
  internal.psi_W_D = user_get_array_fixed<real_t, 1>(user, "psi_W_D", internal.psi_W_D, {internal.dim_psi_W_D}, NA_REAL, NA_REAL);
  internal.vaccine_population_reluctant = user_get_array_fixed<real_t, 1>(user, "vaccine_population_reluctant", internal.vaccine_population_reluctant, {internal.dim_vaccine_population_reluctant}, NA_REAL, NA_REAL);
  internal.waning_rate = user_get_array_fixed<real_t, 1>(user, "waning_rate", internal.waning_rate, {internal.dim_waning_rate}, NA_REAL, NA_REAL);
  internal.dim_cum_infections_per_strain = internal.n_strains;
  internal.dim_lambda_1 = internal.n_groups;
  internal.dim_lambda_2 = internal.n_strains;
  internal.dim_s_ij_1 = internal.n_groups;
  internal.dim_s_ij_2 = internal.n_groups;
  internal.dim_s_ij_3 = internal.n_strains;
  internal.m = user_get_array_fixed<real_t, 2>(user, "m", internal.m, {internal.dim_m_1, internal.dim_m_2}, NA_REAL, NA_REAL);
  internal.n_vacc_classes = internal.dim_rel_susceptibility_2;
  for (int i = 1; i <= internal.dim_p_RS; ++i) {
    internal.p_RS[i - 1] = 1 - std::exp(- internal.waning_rate[i - 1] * internal.dt);
  }
  internal.initial_cum_infections_per_strain = std::vector<real_t>(internal.dim_cum_infections_per_strain);
  internal.dim_aux_E_1 = internal.n_groups;
  internal.dim_aux_E_2 = internal.n_strains;
  internal.dim_aux_E_3 = internal.k_E;
  internal.dim_aux_E_4 = internal.n_vacc_classes;
  internal.dim_aux_G_D_1 = internal.n_groups;
  internal.dim_aux_G_D_2 = internal.n_strains;
  internal.dim_aux_G_D_3 = internal.k_G_D;
  internal.dim_aux_G_D_4 = internal.n_vacc_classes;
  internal.dim_aux_H_D_conf_1 = internal.n_groups;
  internal.dim_aux_H_D_conf_2 = internal.n_strains;
  internal.dim_aux_H_D_conf_3 = internal.k_H_D;
  internal.dim_aux_H_D_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_H_D_unconf_1 = internal.n_groups;
  internal.dim_aux_H_D_unconf_2 = internal.n_strains;
  internal.dim_aux_H_D_unconf_3 = internal.k_H_D;
  internal.dim_aux_H_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_aux_H_R_conf_1 = internal.n_groups;
  internal.dim_aux_H_R_conf_2 = internal.n_strains;
  internal.dim_aux_H_R_conf_3 = internal.k_H_R;
  internal.dim_aux_H_R_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_H_R_unconf_1 = internal.n_groups;
  internal.dim_aux_H_R_unconf_2 = internal.n_strains;
  internal.dim_aux_H_R_unconf_3 = internal.k_H_R;
  internal.dim_aux_H_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_aux_I_A_1 = internal.n_groups;
  internal.dim_aux_I_A_2 = internal.n_strains;
  internal.dim_aux_I_A_3 = internal.k_A;
  internal.dim_aux_I_A_4 = internal.n_vacc_classes;
  internal.dim_aux_I_C_1 = internal.n_groups;
  internal.dim_aux_I_C_2 = internal.n_strains;
  internal.dim_aux_I_C_3 = internal.k_C;
  internal.dim_aux_I_C_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_D_conf_1 = internal.n_groups;
  internal.dim_aux_ICU_D_conf_2 = internal.n_strains;
  internal.dim_aux_ICU_D_conf_3 = internal.k_ICU_D;
  internal.dim_aux_ICU_D_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_D_unconf_1 = internal.n_groups;
  internal.dim_aux_ICU_D_unconf_2 = internal.n_strains;
  internal.dim_aux_ICU_D_unconf_3 = internal.k_ICU_D;
  internal.dim_aux_ICU_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_pre_conf_1 = internal.n_groups;
  internal.dim_aux_ICU_pre_conf_2 = internal.n_strains;
  internal.dim_aux_ICU_pre_conf_3 = internal.k_ICU_pre;
  internal.dim_aux_ICU_pre_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_pre_unconf_1 = internal.n_groups;
  internal.dim_aux_ICU_pre_unconf_2 = internal.n_strains;
  internal.dim_aux_ICU_pre_unconf_3 = internal.k_ICU_pre;
  internal.dim_aux_ICU_pre_unconf_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_W_D_conf_1 = internal.n_groups;
  internal.dim_aux_ICU_W_D_conf_2 = internal.n_strains;
  internal.dim_aux_ICU_W_D_conf_3 = internal.k_ICU_W_D;
  internal.dim_aux_ICU_W_D_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_W_D_unconf_1 = internal.n_groups;
  internal.dim_aux_ICU_W_D_unconf_2 = internal.n_strains;
  internal.dim_aux_ICU_W_D_unconf_3 = internal.k_ICU_W_D;
  internal.dim_aux_ICU_W_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_W_R_conf_1 = internal.n_groups;
  internal.dim_aux_ICU_W_R_conf_2 = internal.n_strains;
  internal.dim_aux_ICU_W_R_conf_3 = internal.k_ICU_W_R;
  internal.dim_aux_ICU_W_R_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_ICU_W_R_unconf_1 = internal.n_groups;
  internal.dim_aux_ICU_W_R_unconf_2 = internal.n_strains;
  internal.dim_aux_ICU_W_R_unconf_3 = internal.k_ICU_W_R;
  internal.dim_aux_ICU_W_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_aux_W_D_conf_1 = internal.n_groups;
  internal.dim_aux_W_D_conf_2 = internal.n_strains;
  internal.dim_aux_W_D_conf_3 = internal.k_W_D;
  internal.dim_aux_W_D_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_W_D_unconf_1 = internal.n_groups;
  internal.dim_aux_W_D_unconf_2 = internal.n_strains;
  internal.dim_aux_W_D_unconf_3 = internal.k_W_D;
  internal.dim_aux_W_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_aux_W_R_conf_1 = internal.n_groups;
  internal.dim_aux_W_R_conf_2 = internal.n_strains;
  internal.dim_aux_W_R_conf_3 = internal.k_W_R;
  internal.dim_aux_W_R_conf_4 = internal.n_vacc_classes;
  internal.dim_aux_W_R_unconf_1 = internal.n_groups;
  internal.dim_aux_W_R_unconf_2 = internal.n_strains;
  internal.dim_aux_W_R_unconf_3 = internal.k_W_R;
  internal.dim_aux_W_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_cum_n_E_vaccinated_1 = internal.n_groups;
  internal.dim_cum_n_E_vaccinated_2 = internal.n_vacc_classes;
  internal.dim_cum_n_I_A_vaccinated_1 = internal.n_groups;
  internal.dim_cum_n_I_A_vaccinated_2 = internal.n_vacc_classes;
  internal.dim_cum_n_R_vaccinated_1 = internal.n_groups;
  internal.dim_cum_n_R_vaccinated_2 = internal.n_vacc_classes;
  internal.dim_cum_n_S_vaccinated_1 = internal.n_groups;
  internal.dim_cum_n_S_vaccinated_2 = internal.n_vacc_classes;
  internal.dim_cum_n_vaccinated_1 = internal.n_groups;
  internal.dim_cum_n_vaccinated_2 = internal.n_vacc_classes;
  internal.dim_E_1 = internal.n_groups;
  internal.dim_E_2 = internal.n_strains;
  internal.dim_E_3 = internal.k_E;
  internal.dim_E_4 = internal.n_vacc_classes;
  internal.dim_G_D_1 = internal.n_groups;
  internal.dim_G_D_2 = internal.n_strains;
  internal.dim_G_D_3 = internal.k_G_D;
  internal.dim_G_D_4 = internal.n_vacc_classes;
  internal.dim_H_D_conf_1 = internal.n_groups;
  internal.dim_H_D_conf_2 = internal.n_strains;
  internal.dim_H_D_conf_3 = internal.k_H_D;
  internal.dim_H_D_conf_4 = internal.n_vacc_classes;
  internal.dim_H_D_unconf_1 = internal.n_groups;
  internal.dim_H_D_unconf_2 = internal.n_strains;
  internal.dim_H_D_unconf_3 = internal.k_H_D;
  internal.dim_H_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_H_R_conf_1 = internal.n_groups;
  internal.dim_H_R_conf_2 = internal.n_strains;
  internal.dim_H_R_conf_3 = internal.k_H_R;
  internal.dim_H_R_conf_4 = internal.n_vacc_classes;
  internal.dim_H_R_unconf_1 = internal.n_groups;
  internal.dim_H_R_unconf_2 = internal.n_strains;
  internal.dim_H_R_unconf_3 = internal.k_H_R;
  internal.dim_H_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_I_A_1 = internal.n_groups;
  internal.dim_I_A_2 = internal.n_strains;
  internal.dim_I_A_3 = internal.k_A;
  internal.dim_I_A_4 = internal.n_vacc_classes;
  internal.dim_I_C_1 = internal.n_groups;
  internal.dim_I_C_2 = internal.n_strains;
  internal.dim_I_C_3 = internal.k_C;
  internal.dim_I_C_4 = internal.n_vacc_classes;
  internal.dim_I_with_diff_trans_1 = internal.n_groups;
  internal.dim_I_with_diff_trans_2 = internal.n_strains;
  internal.dim_I_with_diff_trans_3 = internal.n_vacc_classes;
  internal.dim_ICU_D_conf_1 = internal.n_groups;
  internal.dim_ICU_D_conf_2 = internal.n_strains;
  internal.dim_ICU_D_conf_3 = internal.k_ICU_D;
  internal.dim_ICU_D_conf_4 = internal.n_vacc_classes;
  internal.dim_ICU_D_unconf_1 = internal.n_groups;
  internal.dim_ICU_D_unconf_2 = internal.n_strains;
  internal.dim_ICU_D_unconf_3 = internal.k_ICU_D;
  internal.dim_ICU_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_ICU_pre_conf_1 = internal.n_groups;
  internal.dim_ICU_pre_conf_2 = internal.n_strains;
  internal.dim_ICU_pre_conf_3 = internal.k_ICU_pre;
  internal.dim_ICU_pre_conf_4 = internal.n_vacc_classes;
  internal.dim_ICU_pre_unconf_1 = internal.n_groups;
  internal.dim_ICU_pre_unconf_2 = internal.n_strains;
  internal.dim_ICU_pre_unconf_3 = internal.k_ICU_pre;
  internal.dim_ICU_pre_unconf_4 = internal.n_vacc_classes;
  internal.dim_ICU_W_D_conf_1 = internal.n_groups;
  internal.dim_ICU_W_D_conf_2 = internal.n_strains;
  internal.dim_ICU_W_D_conf_3 = internal.k_ICU_W_D;
  internal.dim_ICU_W_D_conf_4 = internal.n_vacc_classes;
  internal.dim_ICU_W_D_unconf_1 = internal.n_groups;
  internal.dim_ICU_W_D_unconf_2 = internal.n_strains;
  internal.dim_ICU_W_D_unconf_3 = internal.k_ICU_W_D;
  internal.dim_ICU_W_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_ICU_W_R_conf_1 = internal.n_groups;
  internal.dim_ICU_W_R_conf_2 = internal.n_strains;
  internal.dim_ICU_W_R_conf_3 = internal.k_ICU_W_R;
  internal.dim_ICU_W_R_conf_4 = internal.n_vacc_classes;
  internal.dim_ICU_W_R_unconf_1 = internal.n_groups;
  internal.dim_ICU_W_R_unconf_2 = internal.n_strains;
  internal.dim_ICU_W_R_unconf_3 = internal.k_ICU_W_R;
  internal.dim_ICU_W_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_lambda = internal.dim_lambda_1 * internal.dim_lambda_2;
  internal.dim_n_com_to_T_sero_pre_1 = internal.n_groups;
  internal.dim_n_com_to_T_sero_pre_2 = internal.n_strains;
  internal.dim_n_com_to_T_sero_pre_3 = 2;
  internal.dim_n_com_to_T_sero_pre_4 = internal.n_vacc_classes;
  internal.dim_n_E_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_E_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_E_next_vacc_class_3 = internal.k_E;
  internal.dim_n_E_next_vacc_class_4 = internal.n_vacc_classes;
  internal.dim_n_E_progress_1 = internal.n_groups;
  internal.dim_n_E_progress_2 = internal.n_strains;
  internal.dim_n_E_progress_3 = internal.k_E;
  internal.dim_n_E_progress_4 = internal.n_vacc_classes;
  internal.dim_n_EE_1 = internal.n_groups;
  internal.dim_n_EE_2 = internal.n_strains;
  internal.dim_n_EE_3 = internal.k_E;
  internal.dim_n_EE_4 = internal.n_vacc_classes;
  internal.dim_n_EE_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_EE_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_EE_next_vacc_class_3 = internal.k_E;
  internal.dim_n_EE_next_vacc_class_4 = internal.n_vacc_classes;
  internal.dim_n_EI_A_1 = internal.n_groups;
  internal.dim_n_EI_A_2 = internal.n_strains;
  internal.dim_n_EI_A_3 = internal.n_vacc_classes;
  internal.dim_n_EI_A_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_EI_A_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_EI_A_next_vacc_class_3 = internal.n_vacc_classes;
  internal.dim_n_EI_C_1 = internal.n_groups;
  internal.dim_n_EI_C_2 = internal.n_strains;
  internal.dim_n_EI_C_3 = internal.n_vacc_classes;
  internal.dim_n_EI_C_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_EI_C_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_EI_C_next_vacc_class_3 = internal.n_vacc_classes;
  internal.dim_n_G_D_progress_1 = internal.n_groups;
  internal.dim_n_G_D_progress_2 = internal.n_strains;
  internal.dim_n_G_D_progress_3 = internal.k_G_D;
  internal.dim_n_G_D_progress_4 = internal.n_vacc_classes;
  internal.dim_n_H_D_conf_progress_1 = internal.n_groups;
  internal.dim_n_H_D_conf_progress_2 = internal.n_strains;
  internal.dim_n_H_D_conf_progress_3 = internal.k_H_D;
  internal.dim_n_H_D_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_H_D_unconf_progress_1 = internal.n_groups;
  internal.dim_n_H_D_unconf_progress_2 = internal.n_strains;
  internal.dim_n_H_D_unconf_progress_3 = internal.k_H_D;
  internal.dim_n_H_D_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_H_D_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_H_D_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_H_D_unconf_to_conf_3 = internal.k_H_D;
  internal.dim_n_H_D_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_n_H_R_conf_progress_1 = internal.n_groups;
  internal.dim_n_H_R_conf_progress_2 = internal.n_strains;
  internal.dim_n_H_R_conf_progress_3 = internal.k_H_R;
  internal.dim_n_H_R_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_H_R_unconf_progress_1 = internal.n_groups;
  internal.dim_n_H_R_unconf_progress_2 = internal.n_strains;
  internal.dim_n_H_R_unconf_progress_3 = internal.k_H_R;
  internal.dim_n_H_R_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_H_R_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_H_R_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_H_R_unconf_to_conf_3 = internal.k_H_R;
  internal.dim_n_H_R_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_n_hosp_non_ICU_1 = internal.n_groups;
  internal.dim_n_hosp_non_ICU_2 = internal.n_strains;
  internal.dim_n_hosp_non_ICU_3 = internal.n_vacc_classes;
  internal.dim_n_I_A_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_I_A_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_I_A_next_vacc_class_3 = internal.k_A;
  internal.dim_n_I_A_next_vacc_class_4 = internal.n_vacc_classes;
  internal.dim_n_I_A_progress_1 = internal.n_groups;
  internal.dim_n_I_A_progress_2 = internal.n_strains;
  internal.dim_n_I_A_progress_3 = internal.k_A;
  internal.dim_n_I_A_progress_4 = internal.n_vacc_classes;
  internal.dim_n_I_C_progress_1 = internal.n_groups;
  internal.dim_n_I_C_progress_2 = internal.n_strains;
  internal.dim_n_I_C_progress_3 = internal.k_C;
  internal.dim_n_I_C_progress_4 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_G_D_1 = internal.n_groups;
  internal.dim_n_I_C_to_G_D_2 = internal.n_strains;
  internal.dim_n_I_C_to_G_D_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_H_D_1 = internal.n_groups;
  internal.dim_n_I_C_to_H_D_2 = internal.n_strains;
  internal.dim_n_I_C_to_H_D_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_H_D_conf_1 = internal.n_groups;
  internal.dim_n_I_C_to_H_D_conf_2 = internal.n_strains;
  internal.dim_n_I_C_to_H_D_conf_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_H_R_1 = internal.n_groups;
  internal.dim_n_I_C_to_H_R_2 = internal.n_strains;
  internal.dim_n_I_C_to_H_R_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_H_R_conf_1 = internal.n_groups;
  internal.dim_n_I_C_to_H_R_conf_2 = internal.n_strains;
  internal.dim_n_I_C_to_H_R_conf_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_hosp_1 = internal.n_groups;
  internal.dim_n_I_C_to_hosp_2 = internal.n_strains;
  internal.dim_n_I_C_to_hosp_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_ICU_pre_1 = internal.n_groups;
  internal.dim_n_I_C_to_ICU_pre_2 = internal.n_strains;
  internal.dim_n_I_C_to_ICU_pre_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_ICU_pre_conf_1 = internal.n_groups;
  internal.dim_n_I_C_to_ICU_pre_conf_2 = internal.n_strains;
  internal.dim_n_I_C_to_ICU_pre_conf_3 = internal.n_vacc_classes;
  internal.dim_n_I_C_to_R_1 = internal.n_groups;
  internal.dim_n_I_C_to_R_2 = internal.n_strains;
  internal.dim_n_I_C_to_R_3 = internal.n_vacc_classes;
  internal.dim_n_ICU_D_conf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_D_conf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_D_conf_progress_3 = internal.k_ICU_D;
  internal.dim_n_ICU_D_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_D_unconf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_D_unconf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_D_unconf_progress_3 = internal.k_ICU_D;
  internal.dim_n_ICU_D_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_D_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_ICU_D_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_ICU_D_unconf_to_conf_3 = internal.k_ICU_D;
  internal.dim_n_ICU_D_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_conf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_pre_conf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_pre_conf_progress_3 = internal.k_ICU_pre;
  internal.dim_n_ICU_pre_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1 = internal.n_groups;
  internal.dim_n_ICU_pre_conf_to_ICU_D_conf_2 = internal.n_strains;
  internal.dim_n_ICU_pre_conf_to_ICU_D_conf_3 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 = internal.n_groups;
  internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_2 = internal.n_strains;
  internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_3 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 = internal.n_groups;
  internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_2 = internal.n_strains;
  internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_3 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_unconf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_pre_unconf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_pre_unconf_progress_3 = internal.k_ICU_pre;
  internal.dim_n_ICU_pre_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_ICU_pre_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_ICU_pre_unconf_to_conf_3 = internal.k_ICU_pre;
  internal.dim_n_ICU_pre_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 = internal.n_groups;
  internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_2 = internal.n_strains;
  internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_3 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 = internal.n_groups;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2 = internal.n_strains;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3 = internal.n_vacc_classes;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 = internal.n_groups;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2 = internal.n_strains;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3 = internal.n_vacc_classes;
  internal.dim_n_ICU_W_D_conf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_W_D_conf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_W_D_conf_progress_3 = internal.k_ICU_W_D;
  internal.dim_n_ICU_W_D_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_W_D_unconf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_W_D_unconf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_W_D_unconf_progress_3 = internal.k_ICU_W_D;
  internal.dim_n_ICU_W_D_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_W_D_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_ICU_W_D_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_ICU_W_D_unconf_to_conf_3 = internal.k_ICU_W_D;
  internal.dim_n_ICU_W_D_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_W_R_conf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_W_R_conf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_W_R_conf_progress_3 = internal.k_ICU_W_R;
  internal.dim_n_ICU_W_R_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_W_R_unconf_progress_1 = internal.n_groups;
  internal.dim_n_ICU_W_R_unconf_progress_2 = internal.n_strains;
  internal.dim_n_ICU_W_R_unconf_progress_3 = internal.k_ICU_W_R;
  internal.dim_n_ICU_W_R_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_ICU_W_R_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_ICU_W_R_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_ICU_W_R_unconf_to_conf_3 = internal.k_ICU_W_R;
  internal.dim_n_ICU_W_R_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_n_II_A_1 = internal.n_groups;
  internal.dim_n_II_A_2 = internal.n_strains;
  internal.dim_n_II_A_3 = internal.k_A;
  internal.dim_n_II_A_4 = internal.n_vacc_classes;
  internal.dim_n_II_A_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_II_A_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_II_A_next_vacc_class_3 = internal.k_A;
  internal.dim_n_II_A_next_vacc_class_4 = internal.n_vacc_classes;
  internal.dim_n_R_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_R_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_R_next_vacc_class_3 = internal.n_vacc_classes;
  internal.dim_n_R_next_vacc_class_capped_1 = internal.n_groups;
  internal.dim_n_R_next_vacc_class_capped_2 = internal.n_strains;
  internal.dim_n_R_next_vacc_class_capped_3 = internal.n_vacc_classes;
  internal.dim_n_R_next_vacc_class_tmp_1 = internal.n_groups;
  internal.dim_n_R_next_vacc_class_tmp_2 = internal.n_strains;
  internal.dim_n_R_next_vacc_class_tmp_3 = internal.n_vacc_classes;
  internal.dim_n_R_progress_1 = internal.n_groups;
  internal.dim_n_R_progress_2 = internal.n_strains;
  internal.dim_n_R_progress_3 = internal.n_vacc_classes;
  internal.dim_n_R_progress_capped_1 = internal.n_groups;
  internal.dim_n_R_progress_capped_2 = internal.n_strains;
  internal.dim_n_R_progress_capped_3 = internal.n_vacc_classes;
  internal.dim_n_R_progress_tmp_1 = internal.n_groups;
  internal.dim_n_R_progress_tmp_2 = internal.n_strains;
  internal.dim_n_R_progress_tmp_3 = internal.n_vacc_classes;
  internal.dim_n_RS_1 = internal.n_groups;
  internal.dim_n_RS_2 = internal.n_strains;
  internal.dim_n_RS_3 = internal.n_vacc_classes;
  internal.dim_n_RS_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_RS_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_RS_next_vacc_class_3 = internal.n_vacc_classes;
  internal.dim_n_S_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_S_next_vacc_class_2 = internal.n_vacc_classes;
  internal.dim_n_S_progress_1 = internal.n_groups;
  internal.dim_n_S_progress_2 = internal.n_strains;
  internal.dim_n_S_progress_3 = internal.n_vacc_classes;
  internal.dim_n_S_progress_tot_1 = internal.n_groups;
  internal.dim_n_S_progress_tot_2 = internal.n_vacc_classes;
  internal.dim_n_SE_1 = internal.n_groups;
  internal.dim_n_SE_2 = internal.n_strains;
  internal.dim_n_SE_3 = internal.n_vacc_classes;
  internal.dim_n_SE_next_vacc_class_1 = internal.n_groups;
  internal.dim_n_SE_next_vacc_class_2 = internal.n_strains;
  internal.dim_n_SE_next_vacc_class_3 = internal.n_vacc_classes;
  internal.dim_n_T_PCR_pos_progress_1 = internal.n_groups;
  internal.dim_n_T_PCR_pos_progress_2 = internal.n_strains;
  internal.dim_n_T_PCR_pos_progress_3 = internal.k_PCR_pos;
  internal.dim_n_T_PCR_pos_progress_4 = internal.n_vacc_classes;
  internal.dim_n_T_PCR_pre_progress_1 = internal.n_groups;
  internal.dim_n_T_PCR_pre_progress_2 = internal.n_strains;
  internal.dim_n_T_PCR_pre_progress_3 = internal.k_PCR_pre;
  internal.dim_n_T_PCR_pre_progress_4 = internal.n_vacc_classes;
  internal.dim_n_T_sero_pos_progress_1 = internal.n_groups;
  internal.dim_n_T_sero_pos_progress_2 = internal.n_strains;
  internal.dim_n_T_sero_pos_progress_3 = internal.k_sero_pos;
  internal.dim_n_T_sero_pos_progress_4 = internal.n_vacc_classes;
  internal.dim_n_T_sero_pre_progress_1 = internal.n_groups;
  internal.dim_n_T_sero_pre_progress_2 = internal.n_strains;
  internal.dim_n_T_sero_pre_progress_3 = 2;
  internal.dim_n_T_sero_pre_progress_4 = internal.n_vacc_classes;
  internal.dim_n_T_sero_pre_to_T_sero_pos_1 = internal.n_groups;
  internal.dim_n_T_sero_pre_to_T_sero_pos_2 = internal.n_strains;
  internal.dim_n_T_sero_pre_to_T_sero_pos_3 = internal.n_vacc_classes;
  internal.dim_n_W_D_conf_progress_1 = internal.n_groups;
  internal.dim_n_W_D_conf_progress_2 = internal.n_strains;
  internal.dim_n_W_D_conf_progress_3 = internal.k_W_D;
  internal.dim_n_W_D_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_W_D_unconf_progress_1 = internal.n_groups;
  internal.dim_n_W_D_unconf_progress_2 = internal.n_strains;
  internal.dim_n_W_D_unconf_progress_3 = internal.k_W_D;
  internal.dim_n_W_D_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_W_D_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_W_D_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_W_D_unconf_to_conf_3 = internal.k_W_D;
  internal.dim_n_W_D_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_n_W_R_conf_progress_1 = internal.n_groups;
  internal.dim_n_W_R_conf_progress_2 = internal.n_strains;
  internal.dim_n_W_R_conf_progress_3 = internal.k_W_R;
  internal.dim_n_W_R_conf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_W_R_unconf_progress_1 = internal.n_groups;
  internal.dim_n_W_R_unconf_progress_2 = internal.n_strains;
  internal.dim_n_W_R_unconf_progress_3 = internal.k_W_R;
  internal.dim_n_W_R_unconf_progress_4 = internal.n_vacc_classes;
  internal.dim_n_W_R_unconf_to_conf_1 = internal.n_groups;
  internal.dim_n_W_R_unconf_to_conf_2 = internal.n_strains;
  internal.dim_n_W_R_unconf_to_conf_3 = internal.k_W_R;
  internal.dim_n_W_R_unconf_to_conf_4 = internal.n_vacc_classes;
  internal.dim_new_E_1 = internal.n_groups;
  internal.dim_new_E_2 = internal.n_strains;
  internal.dim_new_E_3 = internal.k_E;
  internal.dim_new_E_4 = internal.n_vacc_classes;
  internal.dim_new_G_D_1 = internal.n_groups;
  internal.dim_new_G_D_2 = internal.n_strains;
  internal.dim_new_G_D_3 = internal.k_G_D;
  internal.dim_new_G_D_4 = internal.n_vacc_classes;
  internal.dim_new_H_D_conf_1 = internal.n_groups;
  internal.dim_new_H_D_conf_2 = internal.n_strains;
  internal.dim_new_H_D_conf_3 = internal.k_H_D;
  internal.dim_new_H_D_conf_4 = internal.n_vacc_classes;
  internal.dim_new_H_D_unconf_1 = internal.n_groups;
  internal.dim_new_H_D_unconf_2 = internal.n_strains;
  internal.dim_new_H_D_unconf_3 = internal.k_H_D;
  internal.dim_new_H_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_new_H_R_conf_1 = internal.n_groups;
  internal.dim_new_H_R_conf_2 = internal.n_strains;
  internal.dim_new_H_R_conf_3 = internal.k_H_R;
  internal.dim_new_H_R_conf_4 = internal.n_vacc_classes;
  internal.dim_new_H_R_unconf_1 = internal.n_groups;
  internal.dim_new_H_R_unconf_2 = internal.n_strains;
  internal.dim_new_H_R_unconf_3 = internal.k_H_R;
  internal.dim_new_H_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_new_I_A_1 = internal.n_groups;
  internal.dim_new_I_A_2 = internal.n_strains;
  internal.dim_new_I_A_3 = internal.k_A;
  internal.dim_new_I_A_4 = internal.n_vacc_classes;
  internal.dim_new_I_C_1 = internal.n_groups;
  internal.dim_new_I_C_2 = internal.n_strains;
  internal.dim_new_I_C_3 = internal.k_C;
  internal.dim_new_I_C_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_D_conf_1 = internal.n_groups;
  internal.dim_new_ICU_D_conf_2 = internal.n_strains;
  internal.dim_new_ICU_D_conf_3 = internal.k_ICU_D;
  internal.dim_new_ICU_D_conf_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_D_unconf_1 = internal.n_groups;
  internal.dim_new_ICU_D_unconf_2 = internal.n_strains;
  internal.dim_new_ICU_D_unconf_3 = internal.k_ICU_D;
  internal.dim_new_ICU_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_pre_conf_1 = internal.n_groups;
  internal.dim_new_ICU_pre_conf_2 = internal.n_strains;
  internal.dim_new_ICU_pre_conf_3 = internal.k_ICU_pre;
  internal.dim_new_ICU_pre_conf_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_pre_unconf_1 = internal.n_groups;
  internal.dim_new_ICU_pre_unconf_2 = internal.n_strains;
  internal.dim_new_ICU_pre_unconf_3 = internal.k_ICU_pre;
  internal.dim_new_ICU_pre_unconf_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_W_D_conf_1 = internal.n_groups;
  internal.dim_new_ICU_W_D_conf_2 = internal.n_strains;
  internal.dim_new_ICU_W_D_conf_3 = internal.k_ICU_W_D;
  internal.dim_new_ICU_W_D_conf_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_W_D_unconf_1 = internal.n_groups;
  internal.dim_new_ICU_W_D_unconf_2 = internal.n_strains;
  internal.dim_new_ICU_W_D_unconf_3 = internal.k_ICU_W_D;
  internal.dim_new_ICU_W_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_W_R_conf_1 = internal.n_groups;
  internal.dim_new_ICU_W_R_conf_2 = internal.n_strains;
  internal.dim_new_ICU_W_R_conf_3 = internal.k_ICU_W_R;
  internal.dim_new_ICU_W_R_conf_4 = internal.n_vacc_classes;
  internal.dim_new_ICU_W_R_unconf_1 = internal.n_groups;
  internal.dim_new_ICU_W_R_unconf_2 = internal.n_strains;
  internal.dim_new_ICU_W_R_unconf_3 = internal.k_ICU_W_R;
  internal.dim_new_ICU_W_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_new_R_1 = internal.n_groups;
  internal.dim_new_R_2 = internal.n_strains;
  internal.dim_new_R_3 = internal.n_vacc_classes;
  internal.dim_new_S_1 = internal.n_groups;
  internal.dim_new_S_2 = internal.n_vacc_classes;
  internal.dim_new_T_PCR_neg_1 = internal.n_groups;
  internal.dim_new_T_PCR_neg_2 = internal.n_strains;
  internal.dim_new_T_PCR_neg_3 = internal.n_vacc_classes;
  internal.dim_new_T_PCR_pos_1 = internal.n_groups;
  internal.dim_new_T_PCR_pos_2 = internal.n_strains;
  internal.dim_new_T_PCR_pos_3 = internal.k_PCR_pos;
  internal.dim_new_T_PCR_pos_4 = internal.n_vacc_classes;
  internal.dim_new_T_PCR_pre_1 = internal.n_groups;
  internal.dim_new_T_PCR_pre_2 = internal.n_strains;
  internal.dim_new_T_PCR_pre_3 = internal.k_PCR_pre;
  internal.dim_new_T_PCR_pre_4 = internal.n_vacc_classes;
  internal.dim_new_T_sero_neg_1 = internal.n_groups;
  internal.dim_new_T_sero_neg_2 = internal.n_strains;
  internal.dim_new_T_sero_neg_3 = internal.n_vacc_classes;
  internal.dim_new_T_sero_pos_1 = internal.n_groups;
  internal.dim_new_T_sero_pos_2 = internal.n_strains;
  internal.dim_new_T_sero_pos_3 = internal.k_sero_pos;
  internal.dim_new_T_sero_pos_4 = internal.n_vacc_classes;
  internal.dim_new_T_sero_pre_1 = internal.n_groups;
  internal.dim_new_T_sero_pre_2 = internal.n_strains;
  internal.dim_new_T_sero_pre_3 = 2;
  internal.dim_new_T_sero_pre_4 = internal.n_vacc_classes;
  internal.dim_new_W_D_conf_1 = internal.n_groups;
  internal.dim_new_W_D_conf_2 = internal.n_strains;
  internal.dim_new_W_D_conf_3 = internal.k_W_D;
  internal.dim_new_W_D_conf_4 = internal.n_vacc_classes;
  internal.dim_new_W_D_unconf_1 = internal.n_groups;
  internal.dim_new_W_D_unconf_2 = internal.n_strains;
  internal.dim_new_W_D_unconf_3 = internal.k_W_D;
  internal.dim_new_W_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_new_W_R_conf_1 = internal.n_groups;
  internal.dim_new_W_R_conf_2 = internal.n_strains;
  internal.dim_new_W_R_conf_3 = internal.k_W_R;
  internal.dim_new_W_R_conf_4 = internal.n_vacc_classes;
  internal.dim_new_W_R_unconf_1 = internal.n_groups;
  internal.dim_new_W_R_unconf_2 = internal.n_strains;
  internal.dim_new_W_R_unconf_3 = internal.k_W_R;
  internal.dim_new_W_R_unconf_4 = internal.n_vacc_classes;
  internal.dim_p_E_next_vacc_class_1 = internal.n_groups;
  internal.dim_p_E_next_vacc_class_2 = internal.n_strains;
  internal.dim_p_E_next_vacc_class_3 = internal.k_E;
  internal.dim_p_E_next_vacc_class_4 = internal.n_vacc_classes;
  internal.dim_p_I_A_next_vacc_class_1 = internal.n_groups;
  internal.dim_p_I_A_next_vacc_class_2 = internal.n_strains;
  internal.dim_p_I_A_next_vacc_class_3 = internal.k_A;
  internal.dim_p_I_A_next_vacc_class_4 = internal.n_vacc_classes;
  internal.dim_p_R_next_vacc_class_1 = internal.n_groups;
  internal.dim_p_R_next_vacc_class_2 = internal.n_strains;
  internal.dim_p_R_next_vacc_class_3 = internal.n_vacc_classes;
  internal.dim_p_S_next_vacc_class_1 = internal.n_groups;
  internal.dim_p_S_next_vacc_class_2 = internal.n_vacc_classes;
  internal.dim_p_SE_1 = internal.n_groups;
  internal.dim_p_SE_2 = internal.n_vacc_classes;
  internal.dim_p_T_sero_pre_progress_1 = internal.n_groups;
  internal.dim_p_T_sero_pre_progress_2 = internal.n_strains;
  internal.dim_p_T_sero_pre_progress_3 = 2;
  internal.dim_p_T_sero_pre_progress_4 = internal.n_vacc_classes;
  internal.dim_R_1 = internal.n_groups;
  internal.dim_R_2 = internal.n_strains;
  internal.dim_R_3 = internal.n_vacc_classes;
  internal.dim_rel_p_hosp_if_sympt_1 = internal.n_groups;
  internal.dim_rel_p_hosp_if_sympt_2 = internal.n_vacc_classes;
  internal.dim_rel_p_sympt_1 = internal.n_groups;
  internal.dim_rel_p_sympt_2 = internal.n_vacc_classes;
  internal.dim_S_1 = internal.n_groups;
  internal.dim_S_2 = internal.n_vacc_classes;
  internal.dim_s_ij = internal.dim_s_ij_1 * internal.dim_s_ij_2 * internal.dim_s_ij_3;
  internal.dim_s_ij_12 = internal.dim_s_ij_1 * internal.dim_s_ij_2;
  internal.dim_T_PCR_neg_1 = internal.n_groups;
  internal.dim_T_PCR_neg_2 = internal.n_strains;
  internal.dim_T_PCR_neg_3 = internal.n_vacc_classes;
  internal.dim_T_PCR_pos_1 = internal.n_groups;
  internal.dim_T_PCR_pos_2 = internal.n_strains;
  internal.dim_T_PCR_pos_3 = internal.k_PCR_pos;
  internal.dim_T_PCR_pos_4 = internal.n_vacc_classes;
  internal.dim_T_PCR_pre_1 = internal.n_groups;
  internal.dim_T_PCR_pre_2 = internal.n_strains;
  internal.dim_T_PCR_pre_3 = internal.k_PCR_pre;
  internal.dim_T_PCR_pre_4 = internal.n_vacc_classes;
  internal.dim_T_sero_neg_1 = internal.n_groups;
  internal.dim_T_sero_neg_2 = internal.n_strains;
  internal.dim_T_sero_neg_3 = internal.n_vacc_classes;
  internal.dim_T_sero_pos_1 = internal.n_groups;
  internal.dim_T_sero_pos_2 = internal.n_strains;
  internal.dim_T_sero_pos_3 = internal.k_sero_pos;
  internal.dim_T_sero_pos_4 = internal.n_vacc_classes;
  internal.dim_T_sero_pre_1 = internal.n_groups;
  internal.dim_T_sero_pre_2 = internal.n_strains;
  internal.dim_T_sero_pre_3 = 2;
  internal.dim_T_sero_pre_4 = internal.n_vacc_classes;
  internal.dim_vaccine_progression_rate_1 = internal.n_groups;
  internal.dim_vaccine_progression_rate_2 = internal.n_vacc_classes;
  internal.dim_vaccine_progression_rate_base_1 = internal.n_groups;
  internal.dim_vaccine_progression_rate_base_2 = internal.n_vacc_classes;
  internal.dim_W_D_conf_1 = internal.n_groups;
  internal.dim_W_D_conf_2 = internal.n_strains;
  internal.dim_W_D_conf_3 = internal.k_W_D;
  internal.dim_W_D_conf_4 = internal.n_vacc_classes;
  internal.dim_W_D_unconf_1 = internal.n_groups;
  internal.dim_W_D_unconf_2 = internal.n_strains;
  internal.dim_W_D_unconf_3 = internal.k_W_D;
  internal.dim_W_D_unconf_4 = internal.n_vacc_classes;
  internal.dim_W_R_conf_1 = internal.n_groups;
  internal.dim_W_R_conf_2 = internal.n_strains;
  internal.dim_W_R_conf_3 = internal.k_W_R;
  internal.dim_W_R_conf_4 = internal.n_vacc_classes;
  internal.dim_W_R_unconf_1 = internal.n_groups;
  internal.dim_W_R_unconf_2 = internal.n_strains;
  internal.dim_W_R_unconf_3 = internal.k_W_R;
  internal.dim_W_R_unconf_4 = internal.n_vacc_classes;
  for (int i = 1; i <= internal.dim_cum_infections_per_strain; ++i) {
    internal.initial_cum_infections_per_strain[i - 1] = 0;
  }
  internal.offset_variable_cum_admit_by_age = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm;
  internal.offset_variable_cum_n_S_vaccinated = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot;
  internal.offset_variable_D_comm = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp;
  internal.offset_variable_D_hosp = 17 + internal.dim_cum_infections_per_strain;
  internal.offset_variable_N_tot = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age;
  internal.lambda = std::vector<real_t>(internal.dim_lambda);
  internal.s_ij = std::vector<real_t>(internal.dim_s_ij);
  internal.dim_aux_E = internal.dim_aux_E_1 * internal.dim_aux_E_2 * internal.dim_aux_E_3 * internal.dim_aux_E_4;
  internal.dim_aux_E_12 = internal.dim_aux_E_1 * internal.dim_aux_E_2;
  internal.dim_aux_E_123 = internal.dim_aux_E_1 * internal.dim_aux_E_2 * internal.dim_aux_E_3;
  internal.dim_aux_G_D = internal.dim_aux_G_D_1 * internal.dim_aux_G_D_2 * internal.dim_aux_G_D_3 * internal.dim_aux_G_D_4;
  internal.dim_aux_G_D_12 = internal.dim_aux_G_D_1 * internal.dim_aux_G_D_2;
  internal.dim_aux_G_D_123 = internal.dim_aux_G_D_1 * internal.dim_aux_G_D_2 * internal.dim_aux_G_D_3;
  internal.dim_aux_H_D_conf = internal.dim_aux_H_D_conf_1 * internal.dim_aux_H_D_conf_2 * internal.dim_aux_H_D_conf_3 * internal.dim_aux_H_D_conf_4;
  internal.dim_aux_H_D_conf_12 = internal.dim_aux_H_D_conf_1 * internal.dim_aux_H_D_conf_2;
  internal.dim_aux_H_D_conf_123 = internal.dim_aux_H_D_conf_1 * internal.dim_aux_H_D_conf_2 * internal.dim_aux_H_D_conf_3;
  internal.dim_aux_H_D_unconf = internal.dim_aux_H_D_unconf_1 * internal.dim_aux_H_D_unconf_2 * internal.dim_aux_H_D_unconf_3 * internal.dim_aux_H_D_unconf_4;
  internal.dim_aux_H_D_unconf_12 = internal.dim_aux_H_D_unconf_1 * internal.dim_aux_H_D_unconf_2;
  internal.dim_aux_H_D_unconf_123 = internal.dim_aux_H_D_unconf_1 * internal.dim_aux_H_D_unconf_2 * internal.dim_aux_H_D_unconf_3;
  internal.dim_aux_H_R_conf = internal.dim_aux_H_R_conf_1 * internal.dim_aux_H_R_conf_2 * internal.dim_aux_H_R_conf_3 * internal.dim_aux_H_R_conf_4;
  internal.dim_aux_H_R_conf_12 = internal.dim_aux_H_R_conf_1 * internal.dim_aux_H_R_conf_2;
  internal.dim_aux_H_R_conf_123 = internal.dim_aux_H_R_conf_1 * internal.dim_aux_H_R_conf_2 * internal.dim_aux_H_R_conf_3;
  internal.dim_aux_H_R_unconf = internal.dim_aux_H_R_unconf_1 * internal.dim_aux_H_R_unconf_2 * internal.dim_aux_H_R_unconf_3 * internal.dim_aux_H_R_unconf_4;
  internal.dim_aux_H_R_unconf_12 = internal.dim_aux_H_R_unconf_1 * internal.dim_aux_H_R_unconf_2;
  internal.dim_aux_H_R_unconf_123 = internal.dim_aux_H_R_unconf_1 * internal.dim_aux_H_R_unconf_2 * internal.dim_aux_H_R_unconf_3;
  internal.dim_aux_I_A = internal.dim_aux_I_A_1 * internal.dim_aux_I_A_2 * internal.dim_aux_I_A_3 * internal.dim_aux_I_A_4;
  internal.dim_aux_I_A_12 = internal.dim_aux_I_A_1 * internal.dim_aux_I_A_2;
  internal.dim_aux_I_A_123 = internal.dim_aux_I_A_1 * internal.dim_aux_I_A_2 * internal.dim_aux_I_A_3;
  internal.dim_aux_I_C = internal.dim_aux_I_C_1 * internal.dim_aux_I_C_2 * internal.dim_aux_I_C_3 * internal.dim_aux_I_C_4;
  internal.dim_aux_I_C_12 = internal.dim_aux_I_C_1 * internal.dim_aux_I_C_2;
  internal.dim_aux_I_C_123 = internal.dim_aux_I_C_1 * internal.dim_aux_I_C_2 * internal.dim_aux_I_C_3;
  internal.dim_aux_ICU_D_conf = internal.dim_aux_ICU_D_conf_1 * internal.dim_aux_ICU_D_conf_2 * internal.dim_aux_ICU_D_conf_3 * internal.dim_aux_ICU_D_conf_4;
  internal.dim_aux_ICU_D_conf_12 = internal.dim_aux_ICU_D_conf_1 * internal.dim_aux_ICU_D_conf_2;
  internal.dim_aux_ICU_D_conf_123 = internal.dim_aux_ICU_D_conf_1 * internal.dim_aux_ICU_D_conf_2 * internal.dim_aux_ICU_D_conf_3;
  internal.dim_aux_ICU_D_unconf = internal.dim_aux_ICU_D_unconf_1 * internal.dim_aux_ICU_D_unconf_2 * internal.dim_aux_ICU_D_unconf_3 * internal.dim_aux_ICU_D_unconf_4;
  internal.dim_aux_ICU_D_unconf_12 = internal.dim_aux_ICU_D_unconf_1 * internal.dim_aux_ICU_D_unconf_2;
  internal.dim_aux_ICU_D_unconf_123 = internal.dim_aux_ICU_D_unconf_1 * internal.dim_aux_ICU_D_unconf_2 * internal.dim_aux_ICU_D_unconf_3;
  internal.dim_aux_ICU_pre_conf = internal.dim_aux_ICU_pre_conf_1 * internal.dim_aux_ICU_pre_conf_2 * internal.dim_aux_ICU_pre_conf_3 * internal.dim_aux_ICU_pre_conf_4;
  internal.dim_aux_ICU_pre_conf_12 = internal.dim_aux_ICU_pre_conf_1 * internal.dim_aux_ICU_pre_conf_2;
  internal.dim_aux_ICU_pre_conf_123 = internal.dim_aux_ICU_pre_conf_1 * internal.dim_aux_ICU_pre_conf_2 * internal.dim_aux_ICU_pre_conf_3;
  internal.dim_aux_ICU_pre_unconf = internal.dim_aux_ICU_pre_unconf_1 * internal.dim_aux_ICU_pre_unconf_2 * internal.dim_aux_ICU_pre_unconf_3 * internal.dim_aux_ICU_pre_unconf_4;
  internal.dim_aux_ICU_pre_unconf_12 = internal.dim_aux_ICU_pre_unconf_1 * internal.dim_aux_ICU_pre_unconf_2;
  internal.dim_aux_ICU_pre_unconf_123 = internal.dim_aux_ICU_pre_unconf_1 * internal.dim_aux_ICU_pre_unconf_2 * internal.dim_aux_ICU_pre_unconf_3;
  internal.dim_aux_ICU_W_D_conf = internal.dim_aux_ICU_W_D_conf_1 * internal.dim_aux_ICU_W_D_conf_2 * internal.dim_aux_ICU_W_D_conf_3 * internal.dim_aux_ICU_W_D_conf_4;
  internal.dim_aux_ICU_W_D_conf_12 = internal.dim_aux_ICU_W_D_conf_1 * internal.dim_aux_ICU_W_D_conf_2;
  internal.dim_aux_ICU_W_D_conf_123 = internal.dim_aux_ICU_W_D_conf_1 * internal.dim_aux_ICU_W_D_conf_2 * internal.dim_aux_ICU_W_D_conf_3;
  internal.dim_aux_ICU_W_D_unconf = internal.dim_aux_ICU_W_D_unconf_1 * internal.dim_aux_ICU_W_D_unconf_2 * internal.dim_aux_ICU_W_D_unconf_3 * internal.dim_aux_ICU_W_D_unconf_4;
  internal.dim_aux_ICU_W_D_unconf_12 = internal.dim_aux_ICU_W_D_unconf_1 * internal.dim_aux_ICU_W_D_unconf_2;
  internal.dim_aux_ICU_W_D_unconf_123 = internal.dim_aux_ICU_W_D_unconf_1 * internal.dim_aux_ICU_W_D_unconf_2 * internal.dim_aux_ICU_W_D_unconf_3;
  internal.dim_aux_ICU_W_R_conf = internal.dim_aux_ICU_W_R_conf_1 * internal.dim_aux_ICU_W_R_conf_2 * internal.dim_aux_ICU_W_R_conf_3 * internal.dim_aux_ICU_W_R_conf_4;
  internal.dim_aux_ICU_W_R_conf_12 = internal.dim_aux_ICU_W_R_conf_1 * internal.dim_aux_ICU_W_R_conf_2;
  internal.dim_aux_ICU_W_R_conf_123 = internal.dim_aux_ICU_W_R_conf_1 * internal.dim_aux_ICU_W_R_conf_2 * internal.dim_aux_ICU_W_R_conf_3;
  internal.dim_aux_ICU_W_R_unconf = internal.dim_aux_ICU_W_R_unconf_1 * internal.dim_aux_ICU_W_R_unconf_2 * internal.dim_aux_ICU_W_R_unconf_3 * internal.dim_aux_ICU_W_R_unconf_4;
  internal.dim_aux_ICU_W_R_unconf_12 = internal.dim_aux_ICU_W_R_unconf_1 * internal.dim_aux_ICU_W_R_unconf_2;
  internal.dim_aux_ICU_W_R_unconf_123 = internal.dim_aux_ICU_W_R_unconf_1 * internal.dim_aux_ICU_W_R_unconf_2 * internal.dim_aux_ICU_W_R_unconf_3;
  internal.dim_aux_W_D_conf = internal.dim_aux_W_D_conf_1 * internal.dim_aux_W_D_conf_2 * internal.dim_aux_W_D_conf_3 * internal.dim_aux_W_D_conf_4;
  internal.dim_aux_W_D_conf_12 = internal.dim_aux_W_D_conf_1 * internal.dim_aux_W_D_conf_2;
  internal.dim_aux_W_D_conf_123 = internal.dim_aux_W_D_conf_1 * internal.dim_aux_W_D_conf_2 * internal.dim_aux_W_D_conf_3;
  internal.dim_aux_W_D_unconf = internal.dim_aux_W_D_unconf_1 * internal.dim_aux_W_D_unconf_2 * internal.dim_aux_W_D_unconf_3 * internal.dim_aux_W_D_unconf_4;
  internal.dim_aux_W_D_unconf_12 = internal.dim_aux_W_D_unconf_1 * internal.dim_aux_W_D_unconf_2;
  internal.dim_aux_W_D_unconf_123 = internal.dim_aux_W_D_unconf_1 * internal.dim_aux_W_D_unconf_2 * internal.dim_aux_W_D_unconf_3;
  internal.dim_aux_W_R_conf = internal.dim_aux_W_R_conf_1 * internal.dim_aux_W_R_conf_2 * internal.dim_aux_W_R_conf_3 * internal.dim_aux_W_R_conf_4;
  internal.dim_aux_W_R_conf_12 = internal.dim_aux_W_R_conf_1 * internal.dim_aux_W_R_conf_2;
  internal.dim_aux_W_R_conf_123 = internal.dim_aux_W_R_conf_1 * internal.dim_aux_W_R_conf_2 * internal.dim_aux_W_R_conf_3;
  internal.dim_aux_W_R_unconf = internal.dim_aux_W_R_unconf_1 * internal.dim_aux_W_R_unconf_2 * internal.dim_aux_W_R_unconf_3 * internal.dim_aux_W_R_unconf_4;
  internal.dim_aux_W_R_unconf_12 = internal.dim_aux_W_R_unconf_1 * internal.dim_aux_W_R_unconf_2;
  internal.dim_aux_W_R_unconf_123 = internal.dim_aux_W_R_unconf_1 * internal.dim_aux_W_R_unconf_2 * internal.dim_aux_W_R_unconf_3;
  internal.dim_cum_n_E_vaccinated = internal.dim_cum_n_E_vaccinated_1 * internal.dim_cum_n_E_vaccinated_2;
  internal.dim_cum_n_I_A_vaccinated = internal.dim_cum_n_I_A_vaccinated_1 * internal.dim_cum_n_I_A_vaccinated_2;
  internal.dim_cum_n_R_vaccinated = internal.dim_cum_n_R_vaccinated_1 * internal.dim_cum_n_R_vaccinated_2;
  internal.dim_cum_n_S_vaccinated = internal.dim_cum_n_S_vaccinated_1 * internal.dim_cum_n_S_vaccinated_2;
  internal.dim_cum_n_vaccinated = internal.dim_cum_n_vaccinated_1 * internal.dim_cum_n_vaccinated_2;
  internal.dim_E = internal.dim_E_1 * internal.dim_E_2 * internal.dim_E_3 * internal.dim_E_4;
  internal.dim_E_12 = internal.dim_E_1 * internal.dim_E_2;
  internal.dim_E_123 = internal.dim_E_1 * internal.dim_E_2 * internal.dim_E_3;
  internal.dim_G_D = internal.dim_G_D_1 * internal.dim_G_D_2 * internal.dim_G_D_3 * internal.dim_G_D_4;
  internal.dim_G_D_12 = internal.dim_G_D_1 * internal.dim_G_D_2;
  internal.dim_G_D_123 = internal.dim_G_D_1 * internal.dim_G_D_2 * internal.dim_G_D_3;
  internal.dim_H_D_conf = internal.dim_H_D_conf_1 * internal.dim_H_D_conf_2 * internal.dim_H_D_conf_3 * internal.dim_H_D_conf_4;
  internal.dim_H_D_conf_12 = internal.dim_H_D_conf_1 * internal.dim_H_D_conf_2;
  internal.dim_H_D_conf_123 = internal.dim_H_D_conf_1 * internal.dim_H_D_conf_2 * internal.dim_H_D_conf_3;
  internal.dim_H_D_unconf = internal.dim_H_D_unconf_1 * internal.dim_H_D_unconf_2 * internal.dim_H_D_unconf_3 * internal.dim_H_D_unconf_4;
  internal.dim_H_D_unconf_12 = internal.dim_H_D_unconf_1 * internal.dim_H_D_unconf_2;
  internal.dim_H_D_unconf_123 = internal.dim_H_D_unconf_1 * internal.dim_H_D_unconf_2 * internal.dim_H_D_unconf_3;
  internal.dim_H_R_conf = internal.dim_H_R_conf_1 * internal.dim_H_R_conf_2 * internal.dim_H_R_conf_3 * internal.dim_H_R_conf_4;
  internal.dim_H_R_conf_12 = internal.dim_H_R_conf_1 * internal.dim_H_R_conf_2;
  internal.dim_H_R_conf_123 = internal.dim_H_R_conf_1 * internal.dim_H_R_conf_2 * internal.dim_H_R_conf_3;
  internal.dim_H_R_unconf = internal.dim_H_R_unconf_1 * internal.dim_H_R_unconf_2 * internal.dim_H_R_unconf_3 * internal.dim_H_R_unconf_4;
  internal.dim_H_R_unconf_12 = internal.dim_H_R_unconf_1 * internal.dim_H_R_unconf_2;
  internal.dim_H_R_unconf_123 = internal.dim_H_R_unconf_1 * internal.dim_H_R_unconf_2 * internal.dim_H_R_unconf_3;
  internal.dim_I_A = internal.dim_I_A_1 * internal.dim_I_A_2 * internal.dim_I_A_3 * internal.dim_I_A_4;
  internal.dim_I_A_12 = internal.dim_I_A_1 * internal.dim_I_A_2;
  internal.dim_I_A_123 = internal.dim_I_A_1 * internal.dim_I_A_2 * internal.dim_I_A_3;
  internal.dim_I_C = internal.dim_I_C_1 * internal.dim_I_C_2 * internal.dim_I_C_3 * internal.dim_I_C_4;
  internal.dim_I_C_12 = internal.dim_I_C_1 * internal.dim_I_C_2;
  internal.dim_I_C_123 = internal.dim_I_C_1 * internal.dim_I_C_2 * internal.dim_I_C_3;
  internal.dim_I_with_diff_trans = internal.dim_I_with_diff_trans_1 * internal.dim_I_with_diff_trans_2 * internal.dim_I_with_diff_trans_3;
  internal.dim_I_with_diff_trans_12 = internal.dim_I_with_diff_trans_1 * internal.dim_I_with_diff_trans_2;
  internal.dim_ICU_D_conf = internal.dim_ICU_D_conf_1 * internal.dim_ICU_D_conf_2 * internal.dim_ICU_D_conf_3 * internal.dim_ICU_D_conf_4;
  internal.dim_ICU_D_conf_12 = internal.dim_ICU_D_conf_1 * internal.dim_ICU_D_conf_2;
  internal.dim_ICU_D_conf_123 = internal.dim_ICU_D_conf_1 * internal.dim_ICU_D_conf_2 * internal.dim_ICU_D_conf_3;
  internal.dim_ICU_D_unconf = internal.dim_ICU_D_unconf_1 * internal.dim_ICU_D_unconf_2 * internal.dim_ICU_D_unconf_3 * internal.dim_ICU_D_unconf_4;
  internal.dim_ICU_D_unconf_12 = internal.dim_ICU_D_unconf_1 * internal.dim_ICU_D_unconf_2;
  internal.dim_ICU_D_unconf_123 = internal.dim_ICU_D_unconf_1 * internal.dim_ICU_D_unconf_2 * internal.dim_ICU_D_unconf_3;
  internal.dim_ICU_pre_conf = internal.dim_ICU_pre_conf_1 * internal.dim_ICU_pre_conf_2 * internal.dim_ICU_pre_conf_3 * internal.dim_ICU_pre_conf_4;
  internal.dim_ICU_pre_conf_12 = internal.dim_ICU_pre_conf_1 * internal.dim_ICU_pre_conf_2;
  internal.dim_ICU_pre_conf_123 = internal.dim_ICU_pre_conf_1 * internal.dim_ICU_pre_conf_2 * internal.dim_ICU_pre_conf_3;
  internal.dim_ICU_pre_unconf = internal.dim_ICU_pre_unconf_1 * internal.dim_ICU_pre_unconf_2 * internal.dim_ICU_pre_unconf_3 * internal.dim_ICU_pre_unconf_4;
  internal.dim_ICU_pre_unconf_12 = internal.dim_ICU_pre_unconf_1 * internal.dim_ICU_pre_unconf_2;
  internal.dim_ICU_pre_unconf_123 = internal.dim_ICU_pre_unconf_1 * internal.dim_ICU_pre_unconf_2 * internal.dim_ICU_pre_unconf_3;
  internal.dim_ICU_W_D_conf = internal.dim_ICU_W_D_conf_1 * internal.dim_ICU_W_D_conf_2 * internal.dim_ICU_W_D_conf_3 * internal.dim_ICU_W_D_conf_4;
  internal.dim_ICU_W_D_conf_12 = internal.dim_ICU_W_D_conf_1 * internal.dim_ICU_W_D_conf_2;
  internal.dim_ICU_W_D_conf_123 = internal.dim_ICU_W_D_conf_1 * internal.dim_ICU_W_D_conf_2 * internal.dim_ICU_W_D_conf_3;
  internal.dim_ICU_W_D_unconf = internal.dim_ICU_W_D_unconf_1 * internal.dim_ICU_W_D_unconf_2 * internal.dim_ICU_W_D_unconf_3 * internal.dim_ICU_W_D_unconf_4;
  internal.dim_ICU_W_D_unconf_12 = internal.dim_ICU_W_D_unconf_1 * internal.dim_ICU_W_D_unconf_2;
  internal.dim_ICU_W_D_unconf_123 = internal.dim_ICU_W_D_unconf_1 * internal.dim_ICU_W_D_unconf_2 * internal.dim_ICU_W_D_unconf_3;
  internal.dim_ICU_W_R_conf = internal.dim_ICU_W_R_conf_1 * internal.dim_ICU_W_R_conf_2 * internal.dim_ICU_W_R_conf_3 * internal.dim_ICU_W_R_conf_4;
  internal.dim_ICU_W_R_conf_12 = internal.dim_ICU_W_R_conf_1 * internal.dim_ICU_W_R_conf_2;
  internal.dim_ICU_W_R_conf_123 = internal.dim_ICU_W_R_conf_1 * internal.dim_ICU_W_R_conf_2 * internal.dim_ICU_W_R_conf_3;
  internal.dim_ICU_W_R_unconf = internal.dim_ICU_W_R_unconf_1 * internal.dim_ICU_W_R_unconf_2 * internal.dim_ICU_W_R_unconf_3 * internal.dim_ICU_W_R_unconf_4;
  internal.dim_ICU_W_R_unconf_12 = internal.dim_ICU_W_R_unconf_1 * internal.dim_ICU_W_R_unconf_2;
  internal.dim_ICU_W_R_unconf_123 = internal.dim_ICU_W_R_unconf_1 * internal.dim_ICU_W_R_unconf_2 * internal.dim_ICU_W_R_unconf_3;
  internal.dim_n_com_to_T_sero_pre = internal.dim_n_com_to_T_sero_pre_1 * internal.dim_n_com_to_T_sero_pre_2 * internal.dim_n_com_to_T_sero_pre_3 * internal.dim_n_com_to_T_sero_pre_4;
  internal.dim_n_com_to_T_sero_pre_12 = internal.dim_n_com_to_T_sero_pre_1 * internal.dim_n_com_to_T_sero_pre_2;
  internal.dim_n_com_to_T_sero_pre_123 = internal.dim_n_com_to_T_sero_pre_1 * internal.dim_n_com_to_T_sero_pre_2 * internal.dim_n_com_to_T_sero_pre_3;
  internal.dim_n_E_next_vacc_class = internal.dim_n_E_next_vacc_class_1 * internal.dim_n_E_next_vacc_class_2 * internal.dim_n_E_next_vacc_class_3 * internal.dim_n_E_next_vacc_class_4;
  internal.dim_n_E_next_vacc_class_12 = internal.dim_n_E_next_vacc_class_1 * internal.dim_n_E_next_vacc_class_2;
  internal.dim_n_E_next_vacc_class_123 = internal.dim_n_E_next_vacc_class_1 * internal.dim_n_E_next_vacc_class_2 * internal.dim_n_E_next_vacc_class_3;
  internal.dim_n_E_progress = internal.dim_n_E_progress_1 * internal.dim_n_E_progress_2 * internal.dim_n_E_progress_3 * internal.dim_n_E_progress_4;
  internal.dim_n_E_progress_12 = internal.dim_n_E_progress_1 * internal.dim_n_E_progress_2;
  internal.dim_n_E_progress_123 = internal.dim_n_E_progress_1 * internal.dim_n_E_progress_2 * internal.dim_n_E_progress_3;
  internal.dim_n_EE = internal.dim_n_EE_1 * internal.dim_n_EE_2 * internal.dim_n_EE_3 * internal.dim_n_EE_4;
  internal.dim_n_EE_12 = internal.dim_n_EE_1 * internal.dim_n_EE_2;
  internal.dim_n_EE_123 = internal.dim_n_EE_1 * internal.dim_n_EE_2 * internal.dim_n_EE_3;
  internal.dim_n_EE_next_vacc_class = internal.dim_n_EE_next_vacc_class_1 * internal.dim_n_EE_next_vacc_class_2 * internal.dim_n_EE_next_vacc_class_3 * internal.dim_n_EE_next_vacc_class_4;
  internal.dim_n_EE_next_vacc_class_12 = internal.dim_n_EE_next_vacc_class_1 * internal.dim_n_EE_next_vacc_class_2;
  internal.dim_n_EE_next_vacc_class_123 = internal.dim_n_EE_next_vacc_class_1 * internal.dim_n_EE_next_vacc_class_2 * internal.dim_n_EE_next_vacc_class_3;
  internal.dim_n_EI_A = internal.dim_n_EI_A_1 * internal.dim_n_EI_A_2 * internal.dim_n_EI_A_3;
  internal.dim_n_EI_A_12 = internal.dim_n_EI_A_1 * internal.dim_n_EI_A_2;
  internal.dim_n_EI_A_next_vacc_class = internal.dim_n_EI_A_next_vacc_class_1 * internal.dim_n_EI_A_next_vacc_class_2 * internal.dim_n_EI_A_next_vacc_class_3;
  internal.dim_n_EI_A_next_vacc_class_12 = internal.dim_n_EI_A_next_vacc_class_1 * internal.dim_n_EI_A_next_vacc_class_2;
  internal.dim_n_EI_C = internal.dim_n_EI_C_1 * internal.dim_n_EI_C_2 * internal.dim_n_EI_C_3;
  internal.dim_n_EI_C_12 = internal.dim_n_EI_C_1 * internal.dim_n_EI_C_2;
  internal.dim_n_EI_C_next_vacc_class = internal.dim_n_EI_C_next_vacc_class_1 * internal.dim_n_EI_C_next_vacc_class_2 * internal.dim_n_EI_C_next_vacc_class_3;
  internal.dim_n_EI_C_next_vacc_class_12 = internal.dim_n_EI_C_next_vacc_class_1 * internal.dim_n_EI_C_next_vacc_class_2;
  internal.dim_n_G_D_progress = internal.dim_n_G_D_progress_1 * internal.dim_n_G_D_progress_2 * internal.dim_n_G_D_progress_3 * internal.dim_n_G_D_progress_4;
  internal.dim_n_G_D_progress_12 = internal.dim_n_G_D_progress_1 * internal.dim_n_G_D_progress_2;
  internal.dim_n_G_D_progress_123 = internal.dim_n_G_D_progress_1 * internal.dim_n_G_D_progress_2 * internal.dim_n_G_D_progress_3;
  internal.dim_n_H_D_conf_progress = internal.dim_n_H_D_conf_progress_1 * internal.dim_n_H_D_conf_progress_2 * internal.dim_n_H_D_conf_progress_3 * internal.dim_n_H_D_conf_progress_4;
  internal.dim_n_H_D_conf_progress_12 = internal.dim_n_H_D_conf_progress_1 * internal.dim_n_H_D_conf_progress_2;
  internal.dim_n_H_D_conf_progress_123 = internal.dim_n_H_D_conf_progress_1 * internal.dim_n_H_D_conf_progress_2 * internal.dim_n_H_D_conf_progress_3;
  internal.dim_n_H_D_unconf_progress = internal.dim_n_H_D_unconf_progress_1 * internal.dim_n_H_D_unconf_progress_2 * internal.dim_n_H_D_unconf_progress_3 * internal.dim_n_H_D_unconf_progress_4;
  internal.dim_n_H_D_unconf_progress_12 = internal.dim_n_H_D_unconf_progress_1 * internal.dim_n_H_D_unconf_progress_2;
  internal.dim_n_H_D_unconf_progress_123 = internal.dim_n_H_D_unconf_progress_1 * internal.dim_n_H_D_unconf_progress_2 * internal.dim_n_H_D_unconf_progress_3;
  internal.dim_n_H_D_unconf_to_conf = internal.dim_n_H_D_unconf_to_conf_1 * internal.dim_n_H_D_unconf_to_conf_2 * internal.dim_n_H_D_unconf_to_conf_3 * internal.dim_n_H_D_unconf_to_conf_4;
  internal.dim_n_H_D_unconf_to_conf_12 = internal.dim_n_H_D_unconf_to_conf_1 * internal.dim_n_H_D_unconf_to_conf_2;
  internal.dim_n_H_D_unconf_to_conf_123 = internal.dim_n_H_D_unconf_to_conf_1 * internal.dim_n_H_D_unconf_to_conf_2 * internal.dim_n_H_D_unconf_to_conf_3;
  internal.dim_n_H_R_conf_progress = internal.dim_n_H_R_conf_progress_1 * internal.dim_n_H_R_conf_progress_2 * internal.dim_n_H_R_conf_progress_3 * internal.dim_n_H_R_conf_progress_4;
  internal.dim_n_H_R_conf_progress_12 = internal.dim_n_H_R_conf_progress_1 * internal.dim_n_H_R_conf_progress_2;
  internal.dim_n_H_R_conf_progress_123 = internal.dim_n_H_R_conf_progress_1 * internal.dim_n_H_R_conf_progress_2 * internal.dim_n_H_R_conf_progress_3;
  internal.dim_n_H_R_unconf_progress = internal.dim_n_H_R_unconf_progress_1 * internal.dim_n_H_R_unconf_progress_2 * internal.dim_n_H_R_unconf_progress_3 * internal.dim_n_H_R_unconf_progress_4;
  internal.dim_n_H_R_unconf_progress_12 = internal.dim_n_H_R_unconf_progress_1 * internal.dim_n_H_R_unconf_progress_2;
  internal.dim_n_H_R_unconf_progress_123 = internal.dim_n_H_R_unconf_progress_1 * internal.dim_n_H_R_unconf_progress_2 * internal.dim_n_H_R_unconf_progress_3;
  internal.dim_n_H_R_unconf_to_conf = internal.dim_n_H_R_unconf_to_conf_1 * internal.dim_n_H_R_unconf_to_conf_2 * internal.dim_n_H_R_unconf_to_conf_3 * internal.dim_n_H_R_unconf_to_conf_4;
  internal.dim_n_H_R_unconf_to_conf_12 = internal.dim_n_H_R_unconf_to_conf_1 * internal.dim_n_H_R_unconf_to_conf_2;
  internal.dim_n_H_R_unconf_to_conf_123 = internal.dim_n_H_R_unconf_to_conf_1 * internal.dim_n_H_R_unconf_to_conf_2 * internal.dim_n_H_R_unconf_to_conf_3;
  internal.dim_n_hosp_non_ICU = internal.dim_n_hosp_non_ICU_1 * internal.dim_n_hosp_non_ICU_2 * internal.dim_n_hosp_non_ICU_3;
  internal.dim_n_hosp_non_ICU_12 = internal.dim_n_hosp_non_ICU_1 * internal.dim_n_hosp_non_ICU_2;
  internal.dim_n_I_A_next_vacc_class = internal.dim_n_I_A_next_vacc_class_1 * internal.dim_n_I_A_next_vacc_class_2 * internal.dim_n_I_A_next_vacc_class_3 * internal.dim_n_I_A_next_vacc_class_4;
  internal.dim_n_I_A_next_vacc_class_12 = internal.dim_n_I_A_next_vacc_class_1 * internal.dim_n_I_A_next_vacc_class_2;
  internal.dim_n_I_A_next_vacc_class_123 = internal.dim_n_I_A_next_vacc_class_1 * internal.dim_n_I_A_next_vacc_class_2 * internal.dim_n_I_A_next_vacc_class_3;
  internal.dim_n_I_A_progress = internal.dim_n_I_A_progress_1 * internal.dim_n_I_A_progress_2 * internal.dim_n_I_A_progress_3 * internal.dim_n_I_A_progress_4;
  internal.dim_n_I_A_progress_12 = internal.dim_n_I_A_progress_1 * internal.dim_n_I_A_progress_2;
  internal.dim_n_I_A_progress_123 = internal.dim_n_I_A_progress_1 * internal.dim_n_I_A_progress_2 * internal.dim_n_I_A_progress_3;
  internal.dim_n_I_C_progress = internal.dim_n_I_C_progress_1 * internal.dim_n_I_C_progress_2 * internal.dim_n_I_C_progress_3 * internal.dim_n_I_C_progress_4;
  internal.dim_n_I_C_progress_12 = internal.dim_n_I_C_progress_1 * internal.dim_n_I_C_progress_2;
  internal.dim_n_I_C_progress_123 = internal.dim_n_I_C_progress_1 * internal.dim_n_I_C_progress_2 * internal.dim_n_I_C_progress_3;
  internal.dim_n_I_C_to_G_D = internal.dim_n_I_C_to_G_D_1 * internal.dim_n_I_C_to_G_D_2 * internal.dim_n_I_C_to_G_D_3;
  internal.dim_n_I_C_to_G_D_12 = internal.dim_n_I_C_to_G_D_1 * internal.dim_n_I_C_to_G_D_2;
  internal.dim_n_I_C_to_H_D = internal.dim_n_I_C_to_H_D_1 * internal.dim_n_I_C_to_H_D_2 * internal.dim_n_I_C_to_H_D_3;
  internal.dim_n_I_C_to_H_D_12 = internal.dim_n_I_C_to_H_D_1 * internal.dim_n_I_C_to_H_D_2;
  internal.dim_n_I_C_to_H_D_conf = internal.dim_n_I_C_to_H_D_conf_1 * internal.dim_n_I_C_to_H_D_conf_2 * internal.dim_n_I_C_to_H_D_conf_3;
  internal.dim_n_I_C_to_H_D_conf_12 = internal.dim_n_I_C_to_H_D_conf_1 * internal.dim_n_I_C_to_H_D_conf_2;
  internal.dim_n_I_C_to_H_R = internal.dim_n_I_C_to_H_R_1 * internal.dim_n_I_C_to_H_R_2 * internal.dim_n_I_C_to_H_R_3;
  internal.dim_n_I_C_to_H_R_12 = internal.dim_n_I_C_to_H_R_1 * internal.dim_n_I_C_to_H_R_2;
  internal.dim_n_I_C_to_H_R_conf = internal.dim_n_I_C_to_H_R_conf_1 * internal.dim_n_I_C_to_H_R_conf_2 * internal.dim_n_I_C_to_H_R_conf_3;
  internal.dim_n_I_C_to_H_R_conf_12 = internal.dim_n_I_C_to_H_R_conf_1 * internal.dim_n_I_C_to_H_R_conf_2;
  internal.dim_n_I_C_to_hosp = internal.dim_n_I_C_to_hosp_1 * internal.dim_n_I_C_to_hosp_2 * internal.dim_n_I_C_to_hosp_3;
  internal.dim_n_I_C_to_hosp_12 = internal.dim_n_I_C_to_hosp_1 * internal.dim_n_I_C_to_hosp_2;
  internal.dim_n_I_C_to_ICU_pre = internal.dim_n_I_C_to_ICU_pre_1 * internal.dim_n_I_C_to_ICU_pre_2 * internal.dim_n_I_C_to_ICU_pre_3;
  internal.dim_n_I_C_to_ICU_pre_12 = internal.dim_n_I_C_to_ICU_pre_1 * internal.dim_n_I_C_to_ICU_pre_2;
  internal.dim_n_I_C_to_ICU_pre_conf = internal.dim_n_I_C_to_ICU_pre_conf_1 * internal.dim_n_I_C_to_ICU_pre_conf_2 * internal.dim_n_I_C_to_ICU_pre_conf_3;
  internal.dim_n_I_C_to_ICU_pre_conf_12 = internal.dim_n_I_C_to_ICU_pre_conf_1 * internal.dim_n_I_C_to_ICU_pre_conf_2;
  internal.dim_n_I_C_to_R = internal.dim_n_I_C_to_R_1 * internal.dim_n_I_C_to_R_2 * internal.dim_n_I_C_to_R_3;
  internal.dim_n_I_C_to_R_12 = internal.dim_n_I_C_to_R_1 * internal.dim_n_I_C_to_R_2;
  internal.dim_n_ICU_D_conf_progress = internal.dim_n_ICU_D_conf_progress_1 * internal.dim_n_ICU_D_conf_progress_2 * internal.dim_n_ICU_D_conf_progress_3 * internal.dim_n_ICU_D_conf_progress_4;
  internal.dim_n_ICU_D_conf_progress_12 = internal.dim_n_ICU_D_conf_progress_1 * internal.dim_n_ICU_D_conf_progress_2;
  internal.dim_n_ICU_D_conf_progress_123 = internal.dim_n_ICU_D_conf_progress_1 * internal.dim_n_ICU_D_conf_progress_2 * internal.dim_n_ICU_D_conf_progress_3;
  internal.dim_n_ICU_D_unconf_progress = internal.dim_n_ICU_D_unconf_progress_1 * internal.dim_n_ICU_D_unconf_progress_2 * internal.dim_n_ICU_D_unconf_progress_3 * internal.dim_n_ICU_D_unconf_progress_4;
  internal.dim_n_ICU_D_unconf_progress_12 = internal.dim_n_ICU_D_unconf_progress_1 * internal.dim_n_ICU_D_unconf_progress_2;
  internal.dim_n_ICU_D_unconf_progress_123 = internal.dim_n_ICU_D_unconf_progress_1 * internal.dim_n_ICU_D_unconf_progress_2 * internal.dim_n_ICU_D_unconf_progress_3;
  internal.dim_n_ICU_D_unconf_to_conf = internal.dim_n_ICU_D_unconf_to_conf_1 * internal.dim_n_ICU_D_unconf_to_conf_2 * internal.dim_n_ICU_D_unconf_to_conf_3 * internal.dim_n_ICU_D_unconf_to_conf_4;
  internal.dim_n_ICU_D_unconf_to_conf_12 = internal.dim_n_ICU_D_unconf_to_conf_1 * internal.dim_n_ICU_D_unconf_to_conf_2;
  internal.dim_n_ICU_D_unconf_to_conf_123 = internal.dim_n_ICU_D_unconf_to_conf_1 * internal.dim_n_ICU_D_unconf_to_conf_2 * internal.dim_n_ICU_D_unconf_to_conf_3;
  internal.dim_n_ICU_pre_conf_progress = internal.dim_n_ICU_pre_conf_progress_1 * internal.dim_n_ICU_pre_conf_progress_2 * internal.dim_n_ICU_pre_conf_progress_3 * internal.dim_n_ICU_pre_conf_progress_4;
  internal.dim_n_ICU_pre_conf_progress_12 = internal.dim_n_ICU_pre_conf_progress_1 * internal.dim_n_ICU_pre_conf_progress_2;
  internal.dim_n_ICU_pre_conf_progress_123 = internal.dim_n_ICU_pre_conf_progress_1 * internal.dim_n_ICU_pre_conf_progress_2 * internal.dim_n_ICU_pre_conf_progress_3;
  internal.dim_n_ICU_pre_conf_to_ICU_D_conf = internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1 * internal.dim_n_ICU_pre_conf_to_ICU_D_conf_2 * internal.dim_n_ICU_pre_conf_to_ICU_D_conf_3;
  internal.dim_n_ICU_pre_conf_to_ICU_D_conf_12 = internal.dim_n_ICU_pre_conf_to_ICU_D_conf_1 * internal.dim_n_ICU_pre_conf_to_ICU_D_conf_2;
  internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf = internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_2 * internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_3;
  internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 = internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf_2;
  internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf = internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_2 * internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_3;
  internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_12 = internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf_2;
  internal.dim_n_ICU_pre_unconf_progress = internal.dim_n_ICU_pre_unconf_progress_1 * internal.dim_n_ICU_pre_unconf_progress_2 * internal.dim_n_ICU_pre_unconf_progress_3 * internal.dim_n_ICU_pre_unconf_progress_4;
  internal.dim_n_ICU_pre_unconf_progress_12 = internal.dim_n_ICU_pre_unconf_progress_1 * internal.dim_n_ICU_pre_unconf_progress_2;
  internal.dim_n_ICU_pre_unconf_progress_123 = internal.dim_n_ICU_pre_unconf_progress_1 * internal.dim_n_ICU_pre_unconf_progress_2 * internal.dim_n_ICU_pre_unconf_progress_3;
  internal.dim_n_ICU_pre_unconf_to_conf = internal.dim_n_ICU_pre_unconf_to_conf_1 * internal.dim_n_ICU_pre_unconf_to_conf_2 * internal.dim_n_ICU_pre_unconf_to_conf_3 * internal.dim_n_ICU_pre_unconf_to_conf_4;
  internal.dim_n_ICU_pre_unconf_to_conf_12 = internal.dim_n_ICU_pre_unconf_to_conf_1 * internal.dim_n_ICU_pre_unconf_to_conf_2;
  internal.dim_n_ICU_pre_unconf_to_conf_123 = internal.dim_n_ICU_pre_unconf_to_conf_1 * internal.dim_n_ICU_pre_unconf_to_conf_2 * internal.dim_n_ICU_pre_unconf_to_conf_3;
  internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf = internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_2 * internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_3;
  internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 = internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf_2;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf = internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2 * internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 = internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf = internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2 * internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3;
  internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12 = internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2;
  internal.dim_n_ICU_W_D_conf_progress = internal.dim_n_ICU_W_D_conf_progress_1 * internal.dim_n_ICU_W_D_conf_progress_2 * internal.dim_n_ICU_W_D_conf_progress_3 * internal.dim_n_ICU_W_D_conf_progress_4;
  internal.dim_n_ICU_W_D_conf_progress_12 = internal.dim_n_ICU_W_D_conf_progress_1 * internal.dim_n_ICU_W_D_conf_progress_2;
  internal.dim_n_ICU_W_D_conf_progress_123 = internal.dim_n_ICU_W_D_conf_progress_1 * internal.dim_n_ICU_W_D_conf_progress_2 * internal.dim_n_ICU_W_D_conf_progress_3;
  internal.dim_n_ICU_W_D_unconf_progress = internal.dim_n_ICU_W_D_unconf_progress_1 * internal.dim_n_ICU_W_D_unconf_progress_2 * internal.dim_n_ICU_W_D_unconf_progress_3 * internal.dim_n_ICU_W_D_unconf_progress_4;
  internal.dim_n_ICU_W_D_unconf_progress_12 = internal.dim_n_ICU_W_D_unconf_progress_1 * internal.dim_n_ICU_W_D_unconf_progress_2;
  internal.dim_n_ICU_W_D_unconf_progress_123 = internal.dim_n_ICU_W_D_unconf_progress_1 * internal.dim_n_ICU_W_D_unconf_progress_2 * internal.dim_n_ICU_W_D_unconf_progress_3;
  internal.dim_n_ICU_W_D_unconf_to_conf = internal.dim_n_ICU_W_D_unconf_to_conf_1 * internal.dim_n_ICU_W_D_unconf_to_conf_2 * internal.dim_n_ICU_W_D_unconf_to_conf_3 * internal.dim_n_ICU_W_D_unconf_to_conf_4;
  internal.dim_n_ICU_W_D_unconf_to_conf_12 = internal.dim_n_ICU_W_D_unconf_to_conf_1 * internal.dim_n_ICU_W_D_unconf_to_conf_2;
  internal.dim_n_ICU_W_D_unconf_to_conf_123 = internal.dim_n_ICU_W_D_unconf_to_conf_1 * internal.dim_n_ICU_W_D_unconf_to_conf_2 * internal.dim_n_ICU_W_D_unconf_to_conf_3;
  internal.dim_n_ICU_W_R_conf_progress = internal.dim_n_ICU_W_R_conf_progress_1 * internal.dim_n_ICU_W_R_conf_progress_2 * internal.dim_n_ICU_W_R_conf_progress_3 * internal.dim_n_ICU_W_R_conf_progress_4;
  internal.dim_n_ICU_W_R_conf_progress_12 = internal.dim_n_ICU_W_R_conf_progress_1 * internal.dim_n_ICU_W_R_conf_progress_2;
  internal.dim_n_ICU_W_R_conf_progress_123 = internal.dim_n_ICU_W_R_conf_progress_1 * internal.dim_n_ICU_W_R_conf_progress_2 * internal.dim_n_ICU_W_R_conf_progress_3;
  internal.dim_n_ICU_W_R_unconf_progress = internal.dim_n_ICU_W_R_unconf_progress_1 * internal.dim_n_ICU_W_R_unconf_progress_2 * internal.dim_n_ICU_W_R_unconf_progress_3 * internal.dim_n_ICU_W_R_unconf_progress_4;
  internal.dim_n_ICU_W_R_unconf_progress_12 = internal.dim_n_ICU_W_R_unconf_progress_1 * internal.dim_n_ICU_W_R_unconf_progress_2;
  internal.dim_n_ICU_W_R_unconf_progress_123 = internal.dim_n_ICU_W_R_unconf_progress_1 * internal.dim_n_ICU_W_R_unconf_progress_2 * internal.dim_n_ICU_W_R_unconf_progress_3;
  internal.dim_n_ICU_W_R_unconf_to_conf = internal.dim_n_ICU_W_R_unconf_to_conf_1 * internal.dim_n_ICU_W_R_unconf_to_conf_2 * internal.dim_n_ICU_W_R_unconf_to_conf_3 * internal.dim_n_ICU_W_R_unconf_to_conf_4;
  internal.dim_n_ICU_W_R_unconf_to_conf_12 = internal.dim_n_ICU_W_R_unconf_to_conf_1 * internal.dim_n_ICU_W_R_unconf_to_conf_2;
  internal.dim_n_ICU_W_R_unconf_to_conf_123 = internal.dim_n_ICU_W_R_unconf_to_conf_1 * internal.dim_n_ICU_W_R_unconf_to_conf_2 * internal.dim_n_ICU_W_R_unconf_to_conf_3;
  internal.dim_n_II_A = internal.dim_n_II_A_1 * internal.dim_n_II_A_2 * internal.dim_n_II_A_3 * internal.dim_n_II_A_4;
  internal.dim_n_II_A_12 = internal.dim_n_II_A_1 * internal.dim_n_II_A_2;
  internal.dim_n_II_A_123 = internal.dim_n_II_A_1 * internal.dim_n_II_A_2 * internal.dim_n_II_A_3;
  internal.dim_n_II_A_next_vacc_class = internal.dim_n_II_A_next_vacc_class_1 * internal.dim_n_II_A_next_vacc_class_2 * internal.dim_n_II_A_next_vacc_class_3 * internal.dim_n_II_A_next_vacc_class_4;
  internal.dim_n_II_A_next_vacc_class_12 = internal.dim_n_II_A_next_vacc_class_1 * internal.dim_n_II_A_next_vacc_class_2;
  internal.dim_n_II_A_next_vacc_class_123 = internal.dim_n_II_A_next_vacc_class_1 * internal.dim_n_II_A_next_vacc_class_2 * internal.dim_n_II_A_next_vacc_class_3;
  internal.dim_n_R_next_vacc_class = internal.dim_n_R_next_vacc_class_1 * internal.dim_n_R_next_vacc_class_2 * internal.dim_n_R_next_vacc_class_3;
  internal.dim_n_R_next_vacc_class_12 = internal.dim_n_R_next_vacc_class_1 * internal.dim_n_R_next_vacc_class_2;
  internal.dim_n_R_next_vacc_class_capped = internal.dim_n_R_next_vacc_class_capped_1 * internal.dim_n_R_next_vacc_class_capped_2 * internal.dim_n_R_next_vacc_class_capped_3;
  internal.dim_n_R_next_vacc_class_capped_12 = internal.dim_n_R_next_vacc_class_capped_1 * internal.dim_n_R_next_vacc_class_capped_2;
  internal.dim_n_R_next_vacc_class_tmp = internal.dim_n_R_next_vacc_class_tmp_1 * internal.dim_n_R_next_vacc_class_tmp_2 * internal.dim_n_R_next_vacc_class_tmp_3;
  internal.dim_n_R_next_vacc_class_tmp_12 = internal.dim_n_R_next_vacc_class_tmp_1 * internal.dim_n_R_next_vacc_class_tmp_2;
  internal.dim_n_R_progress = internal.dim_n_R_progress_1 * internal.dim_n_R_progress_2 * internal.dim_n_R_progress_3;
  internal.dim_n_R_progress_12 = internal.dim_n_R_progress_1 * internal.dim_n_R_progress_2;
  internal.dim_n_R_progress_capped = internal.dim_n_R_progress_capped_1 * internal.dim_n_R_progress_capped_2 * internal.dim_n_R_progress_capped_3;
  internal.dim_n_R_progress_capped_12 = internal.dim_n_R_progress_capped_1 * internal.dim_n_R_progress_capped_2;
  internal.dim_n_R_progress_tmp = internal.dim_n_R_progress_tmp_1 * internal.dim_n_R_progress_tmp_2 * internal.dim_n_R_progress_tmp_3;
  internal.dim_n_R_progress_tmp_12 = internal.dim_n_R_progress_tmp_1 * internal.dim_n_R_progress_tmp_2;
  internal.dim_n_RS = internal.dim_n_RS_1 * internal.dim_n_RS_2 * internal.dim_n_RS_3;
  internal.dim_n_RS_12 = internal.dim_n_RS_1 * internal.dim_n_RS_2;
  internal.dim_n_RS_next_vacc_class = internal.dim_n_RS_next_vacc_class_1 * internal.dim_n_RS_next_vacc_class_2 * internal.dim_n_RS_next_vacc_class_3;
  internal.dim_n_RS_next_vacc_class_12 = internal.dim_n_RS_next_vacc_class_1 * internal.dim_n_RS_next_vacc_class_2;
  internal.dim_n_S_next_vacc_class = internal.dim_n_S_next_vacc_class_1 * internal.dim_n_S_next_vacc_class_2;
  internal.dim_n_S_progress = internal.dim_n_S_progress_1 * internal.dim_n_S_progress_2 * internal.dim_n_S_progress_3;
  internal.dim_n_S_progress_12 = internal.dim_n_S_progress_1 * internal.dim_n_S_progress_2;
  internal.dim_n_S_progress_tot = internal.dim_n_S_progress_tot_1 * internal.dim_n_S_progress_tot_2;
  internal.dim_n_SE = internal.dim_n_SE_1 * internal.dim_n_SE_2 * internal.dim_n_SE_3;
  internal.dim_n_SE_12 = internal.dim_n_SE_1 * internal.dim_n_SE_2;
  internal.dim_n_SE_next_vacc_class = internal.dim_n_SE_next_vacc_class_1 * internal.dim_n_SE_next_vacc_class_2 * internal.dim_n_SE_next_vacc_class_3;
  internal.dim_n_SE_next_vacc_class_12 = internal.dim_n_SE_next_vacc_class_1 * internal.dim_n_SE_next_vacc_class_2;
  internal.dim_n_T_PCR_pos_progress = internal.dim_n_T_PCR_pos_progress_1 * internal.dim_n_T_PCR_pos_progress_2 * internal.dim_n_T_PCR_pos_progress_3 * internal.dim_n_T_PCR_pos_progress_4;
  internal.dim_n_T_PCR_pos_progress_12 = internal.dim_n_T_PCR_pos_progress_1 * internal.dim_n_T_PCR_pos_progress_2;
  internal.dim_n_T_PCR_pos_progress_123 = internal.dim_n_T_PCR_pos_progress_1 * internal.dim_n_T_PCR_pos_progress_2 * internal.dim_n_T_PCR_pos_progress_3;
  internal.dim_n_T_PCR_pre_progress = internal.dim_n_T_PCR_pre_progress_1 * internal.dim_n_T_PCR_pre_progress_2 * internal.dim_n_T_PCR_pre_progress_3 * internal.dim_n_T_PCR_pre_progress_4;
  internal.dim_n_T_PCR_pre_progress_12 = internal.dim_n_T_PCR_pre_progress_1 * internal.dim_n_T_PCR_pre_progress_2;
  internal.dim_n_T_PCR_pre_progress_123 = internal.dim_n_T_PCR_pre_progress_1 * internal.dim_n_T_PCR_pre_progress_2 * internal.dim_n_T_PCR_pre_progress_3;
  internal.dim_n_T_sero_pos_progress = internal.dim_n_T_sero_pos_progress_1 * internal.dim_n_T_sero_pos_progress_2 * internal.dim_n_T_sero_pos_progress_3 * internal.dim_n_T_sero_pos_progress_4;
  internal.dim_n_T_sero_pos_progress_12 = internal.dim_n_T_sero_pos_progress_1 * internal.dim_n_T_sero_pos_progress_2;
  internal.dim_n_T_sero_pos_progress_123 = internal.dim_n_T_sero_pos_progress_1 * internal.dim_n_T_sero_pos_progress_2 * internal.dim_n_T_sero_pos_progress_3;
  internal.dim_n_T_sero_pre_progress = internal.dim_n_T_sero_pre_progress_1 * internal.dim_n_T_sero_pre_progress_2 * internal.dim_n_T_sero_pre_progress_3 * internal.dim_n_T_sero_pre_progress_4;
  internal.dim_n_T_sero_pre_progress_12 = internal.dim_n_T_sero_pre_progress_1 * internal.dim_n_T_sero_pre_progress_2;
  internal.dim_n_T_sero_pre_progress_123 = internal.dim_n_T_sero_pre_progress_1 * internal.dim_n_T_sero_pre_progress_2 * internal.dim_n_T_sero_pre_progress_3;
  internal.dim_n_T_sero_pre_to_T_sero_pos = internal.dim_n_T_sero_pre_to_T_sero_pos_1 * internal.dim_n_T_sero_pre_to_T_sero_pos_2 * internal.dim_n_T_sero_pre_to_T_sero_pos_3;
  internal.dim_n_T_sero_pre_to_T_sero_pos_12 = internal.dim_n_T_sero_pre_to_T_sero_pos_1 * internal.dim_n_T_sero_pre_to_T_sero_pos_2;
  internal.dim_n_W_D_conf_progress = internal.dim_n_W_D_conf_progress_1 * internal.dim_n_W_D_conf_progress_2 * internal.dim_n_W_D_conf_progress_3 * internal.dim_n_W_D_conf_progress_4;
  internal.dim_n_W_D_conf_progress_12 = internal.dim_n_W_D_conf_progress_1 * internal.dim_n_W_D_conf_progress_2;
  internal.dim_n_W_D_conf_progress_123 = internal.dim_n_W_D_conf_progress_1 * internal.dim_n_W_D_conf_progress_2 * internal.dim_n_W_D_conf_progress_3;
  internal.dim_n_W_D_unconf_progress = internal.dim_n_W_D_unconf_progress_1 * internal.dim_n_W_D_unconf_progress_2 * internal.dim_n_W_D_unconf_progress_3 * internal.dim_n_W_D_unconf_progress_4;
  internal.dim_n_W_D_unconf_progress_12 = internal.dim_n_W_D_unconf_progress_1 * internal.dim_n_W_D_unconf_progress_2;
  internal.dim_n_W_D_unconf_progress_123 = internal.dim_n_W_D_unconf_progress_1 * internal.dim_n_W_D_unconf_progress_2 * internal.dim_n_W_D_unconf_progress_3;
  internal.dim_n_W_D_unconf_to_conf = internal.dim_n_W_D_unconf_to_conf_1 * internal.dim_n_W_D_unconf_to_conf_2 * internal.dim_n_W_D_unconf_to_conf_3 * internal.dim_n_W_D_unconf_to_conf_4;
  internal.dim_n_W_D_unconf_to_conf_12 = internal.dim_n_W_D_unconf_to_conf_1 * internal.dim_n_W_D_unconf_to_conf_2;
  internal.dim_n_W_D_unconf_to_conf_123 = internal.dim_n_W_D_unconf_to_conf_1 * internal.dim_n_W_D_unconf_to_conf_2 * internal.dim_n_W_D_unconf_to_conf_3;
  internal.dim_n_W_R_conf_progress = internal.dim_n_W_R_conf_progress_1 * internal.dim_n_W_R_conf_progress_2 * internal.dim_n_W_R_conf_progress_3 * internal.dim_n_W_R_conf_progress_4;
  internal.dim_n_W_R_conf_progress_12 = internal.dim_n_W_R_conf_progress_1 * internal.dim_n_W_R_conf_progress_2;
  internal.dim_n_W_R_conf_progress_123 = internal.dim_n_W_R_conf_progress_1 * internal.dim_n_W_R_conf_progress_2 * internal.dim_n_W_R_conf_progress_3;
  internal.dim_n_W_R_unconf_progress = internal.dim_n_W_R_unconf_progress_1 * internal.dim_n_W_R_unconf_progress_2 * internal.dim_n_W_R_unconf_progress_3 * internal.dim_n_W_R_unconf_progress_4;
  internal.dim_n_W_R_unconf_progress_12 = internal.dim_n_W_R_unconf_progress_1 * internal.dim_n_W_R_unconf_progress_2;
  internal.dim_n_W_R_unconf_progress_123 = internal.dim_n_W_R_unconf_progress_1 * internal.dim_n_W_R_unconf_progress_2 * internal.dim_n_W_R_unconf_progress_3;
  internal.dim_n_W_R_unconf_to_conf = internal.dim_n_W_R_unconf_to_conf_1 * internal.dim_n_W_R_unconf_to_conf_2 * internal.dim_n_W_R_unconf_to_conf_3 * internal.dim_n_W_R_unconf_to_conf_4;
  internal.dim_n_W_R_unconf_to_conf_12 = internal.dim_n_W_R_unconf_to_conf_1 * internal.dim_n_W_R_unconf_to_conf_2;
  internal.dim_n_W_R_unconf_to_conf_123 = internal.dim_n_W_R_unconf_to_conf_1 * internal.dim_n_W_R_unconf_to_conf_2 * internal.dim_n_W_R_unconf_to_conf_3;
  internal.dim_new_E = internal.dim_new_E_1 * internal.dim_new_E_2 * internal.dim_new_E_3 * internal.dim_new_E_4;
  internal.dim_new_E_12 = internal.dim_new_E_1 * internal.dim_new_E_2;
  internal.dim_new_E_123 = internal.dim_new_E_1 * internal.dim_new_E_2 * internal.dim_new_E_3;
  internal.dim_new_G_D = internal.dim_new_G_D_1 * internal.dim_new_G_D_2 * internal.dim_new_G_D_3 * internal.dim_new_G_D_4;
  internal.dim_new_G_D_12 = internal.dim_new_G_D_1 * internal.dim_new_G_D_2;
  internal.dim_new_G_D_123 = internal.dim_new_G_D_1 * internal.dim_new_G_D_2 * internal.dim_new_G_D_3;
  internal.dim_new_H_D_conf = internal.dim_new_H_D_conf_1 * internal.dim_new_H_D_conf_2 * internal.dim_new_H_D_conf_3 * internal.dim_new_H_D_conf_4;
  internal.dim_new_H_D_conf_12 = internal.dim_new_H_D_conf_1 * internal.dim_new_H_D_conf_2;
  internal.dim_new_H_D_conf_123 = internal.dim_new_H_D_conf_1 * internal.dim_new_H_D_conf_2 * internal.dim_new_H_D_conf_3;
  internal.dim_new_H_D_unconf = internal.dim_new_H_D_unconf_1 * internal.dim_new_H_D_unconf_2 * internal.dim_new_H_D_unconf_3 * internal.dim_new_H_D_unconf_4;
  internal.dim_new_H_D_unconf_12 = internal.dim_new_H_D_unconf_1 * internal.dim_new_H_D_unconf_2;
  internal.dim_new_H_D_unconf_123 = internal.dim_new_H_D_unconf_1 * internal.dim_new_H_D_unconf_2 * internal.dim_new_H_D_unconf_3;
  internal.dim_new_H_R_conf = internal.dim_new_H_R_conf_1 * internal.dim_new_H_R_conf_2 * internal.dim_new_H_R_conf_3 * internal.dim_new_H_R_conf_4;
  internal.dim_new_H_R_conf_12 = internal.dim_new_H_R_conf_1 * internal.dim_new_H_R_conf_2;
  internal.dim_new_H_R_conf_123 = internal.dim_new_H_R_conf_1 * internal.dim_new_H_R_conf_2 * internal.dim_new_H_R_conf_3;
  internal.dim_new_H_R_unconf = internal.dim_new_H_R_unconf_1 * internal.dim_new_H_R_unconf_2 * internal.dim_new_H_R_unconf_3 * internal.dim_new_H_R_unconf_4;
  internal.dim_new_H_R_unconf_12 = internal.dim_new_H_R_unconf_1 * internal.dim_new_H_R_unconf_2;
  internal.dim_new_H_R_unconf_123 = internal.dim_new_H_R_unconf_1 * internal.dim_new_H_R_unconf_2 * internal.dim_new_H_R_unconf_3;
  internal.dim_new_I_A = internal.dim_new_I_A_1 * internal.dim_new_I_A_2 * internal.dim_new_I_A_3 * internal.dim_new_I_A_4;
  internal.dim_new_I_A_12 = internal.dim_new_I_A_1 * internal.dim_new_I_A_2;
  internal.dim_new_I_A_123 = internal.dim_new_I_A_1 * internal.dim_new_I_A_2 * internal.dim_new_I_A_3;
  internal.dim_new_I_C = internal.dim_new_I_C_1 * internal.dim_new_I_C_2 * internal.dim_new_I_C_3 * internal.dim_new_I_C_4;
  internal.dim_new_I_C_12 = internal.dim_new_I_C_1 * internal.dim_new_I_C_2;
  internal.dim_new_I_C_123 = internal.dim_new_I_C_1 * internal.dim_new_I_C_2 * internal.dim_new_I_C_3;
  internal.dim_new_ICU_D_conf = internal.dim_new_ICU_D_conf_1 * internal.dim_new_ICU_D_conf_2 * internal.dim_new_ICU_D_conf_3 * internal.dim_new_ICU_D_conf_4;
  internal.dim_new_ICU_D_conf_12 = internal.dim_new_ICU_D_conf_1 * internal.dim_new_ICU_D_conf_2;
  internal.dim_new_ICU_D_conf_123 = internal.dim_new_ICU_D_conf_1 * internal.dim_new_ICU_D_conf_2 * internal.dim_new_ICU_D_conf_3;
  internal.dim_new_ICU_D_unconf = internal.dim_new_ICU_D_unconf_1 * internal.dim_new_ICU_D_unconf_2 * internal.dim_new_ICU_D_unconf_3 * internal.dim_new_ICU_D_unconf_4;
  internal.dim_new_ICU_D_unconf_12 = internal.dim_new_ICU_D_unconf_1 * internal.dim_new_ICU_D_unconf_2;
  internal.dim_new_ICU_D_unconf_123 = internal.dim_new_ICU_D_unconf_1 * internal.dim_new_ICU_D_unconf_2 * internal.dim_new_ICU_D_unconf_3;
  internal.dim_new_ICU_pre_conf = internal.dim_new_ICU_pre_conf_1 * internal.dim_new_ICU_pre_conf_2 * internal.dim_new_ICU_pre_conf_3 * internal.dim_new_ICU_pre_conf_4;
  internal.dim_new_ICU_pre_conf_12 = internal.dim_new_ICU_pre_conf_1 * internal.dim_new_ICU_pre_conf_2;
  internal.dim_new_ICU_pre_conf_123 = internal.dim_new_ICU_pre_conf_1 * internal.dim_new_ICU_pre_conf_2 * internal.dim_new_ICU_pre_conf_3;
  internal.dim_new_ICU_pre_unconf = internal.dim_new_ICU_pre_unconf_1 * internal.dim_new_ICU_pre_unconf_2 * internal.dim_new_ICU_pre_unconf_3 * internal.dim_new_ICU_pre_unconf_4;
  internal.dim_new_ICU_pre_unconf_12 = internal.dim_new_ICU_pre_unconf_1 * internal.dim_new_ICU_pre_unconf_2;
  internal.dim_new_ICU_pre_unconf_123 = internal.dim_new_ICU_pre_unconf_1 * internal.dim_new_ICU_pre_unconf_2 * internal.dim_new_ICU_pre_unconf_3;
  internal.dim_new_ICU_W_D_conf = internal.dim_new_ICU_W_D_conf_1 * internal.dim_new_ICU_W_D_conf_2 * internal.dim_new_ICU_W_D_conf_3 * internal.dim_new_ICU_W_D_conf_4;
  internal.dim_new_ICU_W_D_conf_12 = internal.dim_new_ICU_W_D_conf_1 * internal.dim_new_ICU_W_D_conf_2;
  internal.dim_new_ICU_W_D_conf_123 = internal.dim_new_ICU_W_D_conf_1 * internal.dim_new_ICU_W_D_conf_2 * internal.dim_new_ICU_W_D_conf_3;
  internal.dim_new_ICU_W_D_unconf = internal.dim_new_ICU_W_D_unconf_1 * internal.dim_new_ICU_W_D_unconf_2 * internal.dim_new_ICU_W_D_unconf_3 * internal.dim_new_ICU_W_D_unconf_4;
  internal.dim_new_ICU_W_D_unconf_12 = internal.dim_new_ICU_W_D_unconf_1 * internal.dim_new_ICU_W_D_unconf_2;
  internal.dim_new_ICU_W_D_unconf_123 = internal.dim_new_ICU_W_D_unconf_1 * internal.dim_new_ICU_W_D_unconf_2 * internal.dim_new_ICU_W_D_unconf_3;
  internal.dim_new_ICU_W_R_conf = internal.dim_new_ICU_W_R_conf_1 * internal.dim_new_ICU_W_R_conf_2 * internal.dim_new_ICU_W_R_conf_3 * internal.dim_new_ICU_W_R_conf_4;
  internal.dim_new_ICU_W_R_conf_12 = internal.dim_new_ICU_W_R_conf_1 * internal.dim_new_ICU_W_R_conf_2;
  internal.dim_new_ICU_W_R_conf_123 = internal.dim_new_ICU_W_R_conf_1 * internal.dim_new_ICU_W_R_conf_2 * internal.dim_new_ICU_W_R_conf_3;
  internal.dim_new_ICU_W_R_unconf = internal.dim_new_ICU_W_R_unconf_1 * internal.dim_new_ICU_W_R_unconf_2 * internal.dim_new_ICU_W_R_unconf_3 * internal.dim_new_ICU_W_R_unconf_4;
  internal.dim_new_ICU_W_R_unconf_12 = internal.dim_new_ICU_W_R_unconf_1 * internal.dim_new_ICU_W_R_unconf_2;
  internal.dim_new_ICU_W_R_unconf_123 = internal.dim_new_ICU_W_R_unconf_1 * internal.dim_new_ICU_W_R_unconf_2 * internal.dim_new_ICU_W_R_unconf_3;
  internal.dim_new_R = internal.dim_new_R_1 * internal.dim_new_R_2 * internal.dim_new_R_3;
  internal.dim_new_R_12 = internal.dim_new_R_1 * internal.dim_new_R_2;
  internal.dim_new_S = internal.dim_new_S_1 * internal.dim_new_S_2;
  internal.dim_new_T_PCR_neg = internal.dim_new_T_PCR_neg_1 * internal.dim_new_T_PCR_neg_2 * internal.dim_new_T_PCR_neg_3;
  internal.dim_new_T_PCR_neg_12 = internal.dim_new_T_PCR_neg_1 * internal.dim_new_T_PCR_neg_2;
  internal.dim_new_T_PCR_pos = internal.dim_new_T_PCR_pos_1 * internal.dim_new_T_PCR_pos_2 * internal.dim_new_T_PCR_pos_3 * internal.dim_new_T_PCR_pos_4;
  internal.dim_new_T_PCR_pos_12 = internal.dim_new_T_PCR_pos_1 * internal.dim_new_T_PCR_pos_2;
  internal.dim_new_T_PCR_pos_123 = internal.dim_new_T_PCR_pos_1 * internal.dim_new_T_PCR_pos_2 * internal.dim_new_T_PCR_pos_3;
  internal.dim_new_T_PCR_pre = internal.dim_new_T_PCR_pre_1 * internal.dim_new_T_PCR_pre_2 * internal.dim_new_T_PCR_pre_3 * internal.dim_new_T_PCR_pre_4;
  internal.dim_new_T_PCR_pre_12 = internal.dim_new_T_PCR_pre_1 * internal.dim_new_T_PCR_pre_2;
  internal.dim_new_T_PCR_pre_123 = internal.dim_new_T_PCR_pre_1 * internal.dim_new_T_PCR_pre_2 * internal.dim_new_T_PCR_pre_3;
  internal.dim_new_T_sero_neg = internal.dim_new_T_sero_neg_1 * internal.dim_new_T_sero_neg_2 * internal.dim_new_T_sero_neg_3;
  internal.dim_new_T_sero_neg_12 = internal.dim_new_T_sero_neg_1 * internal.dim_new_T_sero_neg_2;
  internal.dim_new_T_sero_pos = internal.dim_new_T_sero_pos_1 * internal.dim_new_T_sero_pos_2 * internal.dim_new_T_sero_pos_3 * internal.dim_new_T_sero_pos_4;
  internal.dim_new_T_sero_pos_12 = internal.dim_new_T_sero_pos_1 * internal.dim_new_T_sero_pos_2;
  internal.dim_new_T_sero_pos_123 = internal.dim_new_T_sero_pos_1 * internal.dim_new_T_sero_pos_2 * internal.dim_new_T_sero_pos_3;
  internal.dim_new_T_sero_pre = internal.dim_new_T_sero_pre_1 * internal.dim_new_T_sero_pre_2 * internal.dim_new_T_sero_pre_3 * internal.dim_new_T_sero_pre_4;
  internal.dim_new_T_sero_pre_12 = internal.dim_new_T_sero_pre_1 * internal.dim_new_T_sero_pre_2;
  internal.dim_new_T_sero_pre_123 = internal.dim_new_T_sero_pre_1 * internal.dim_new_T_sero_pre_2 * internal.dim_new_T_sero_pre_3;
  internal.dim_new_W_D_conf = internal.dim_new_W_D_conf_1 * internal.dim_new_W_D_conf_2 * internal.dim_new_W_D_conf_3 * internal.dim_new_W_D_conf_4;
  internal.dim_new_W_D_conf_12 = internal.dim_new_W_D_conf_1 * internal.dim_new_W_D_conf_2;
  internal.dim_new_W_D_conf_123 = internal.dim_new_W_D_conf_1 * internal.dim_new_W_D_conf_2 * internal.dim_new_W_D_conf_3;
  internal.dim_new_W_D_unconf = internal.dim_new_W_D_unconf_1 * internal.dim_new_W_D_unconf_2 * internal.dim_new_W_D_unconf_3 * internal.dim_new_W_D_unconf_4;
  internal.dim_new_W_D_unconf_12 = internal.dim_new_W_D_unconf_1 * internal.dim_new_W_D_unconf_2;
  internal.dim_new_W_D_unconf_123 = internal.dim_new_W_D_unconf_1 * internal.dim_new_W_D_unconf_2 * internal.dim_new_W_D_unconf_3;
  internal.dim_new_W_R_conf = internal.dim_new_W_R_conf_1 * internal.dim_new_W_R_conf_2 * internal.dim_new_W_R_conf_3 * internal.dim_new_W_R_conf_4;
  internal.dim_new_W_R_conf_12 = internal.dim_new_W_R_conf_1 * internal.dim_new_W_R_conf_2;
  internal.dim_new_W_R_conf_123 = internal.dim_new_W_R_conf_1 * internal.dim_new_W_R_conf_2 * internal.dim_new_W_R_conf_3;
  internal.dim_new_W_R_unconf = internal.dim_new_W_R_unconf_1 * internal.dim_new_W_R_unconf_2 * internal.dim_new_W_R_unconf_3 * internal.dim_new_W_R_unconf_4;
  internal.dim_new_W_R_unconf_12 = internal.dim_new_W_R_unconf_1 * internal.dim_new_W_R_unconf_2;
  internal.dim_new_W_R_unconf_123 = internal.dim_new_W_R_unconf_1 * internal.dim_new_W_R_unconf_2 * internal.dim_new_W_R_unconf_3;
  internal.dim_p_E_next_vacc_class = internal.dim_p_E_next_vacc_class_1 * internal.dim_p_E_next_vacc_class_2 * internal.dim_p_E_next_vacc_class_3 * internal.dim_p_E_next_vacc_class_4;
  internal.dim_p_E_next_vacc_class_12 = internal.dim_p_E_next_vacc_class_1 * internal.dim_p_E_next_vacc_class_2;
  internal.dim_p_E_next_vacc_class_123 = internal.dim_p_E_next_vacc_class_1 * internal.dim_p_E_next_vacc_class_2 * internal.dim_p_E_next_vacc_class_3;
  internal.dim_p_I_A_next_vacc_class = internal.dim_p_I_A_next_vacc_class_1 * internal.dim_p_I_A_next_vacc_class_2 * internal.dim_p_I_A_next_vacc_class_3 * internal.dim_p_I_A_next_vacc_class_4;
  internal.dim_p_I_A_next_vacc_class_12 = internal.dim_p_I_A_next_vacc_class_1 * internal.dim_p_I_A_next_vacc_class_2;
  internal.dim_p_I_A_next_vacc_class_123 = internal.dim_p_I_A_next_vacc_class_1 * internal.dim_p_I_A_next_vacc_class_2 * internal.dim_p_I_A_next_vacc_class_3;
  internal.dim_p_R_next_vacc_class = internal.dim_p_R_next_vacc_class_1 * internal.dim_p_R_next_vacc_class_2 * internal.dim_p_R_next_vacc_class_3;
  internal.dim_p_R_next_vacc_class_12 = internal.dim_p_R_next_vacc_class_1 * internal.dim_p_R_next_vacc_class_2;
  internal.dim_p_S_next_vacc_class = internal.dim_p_S_next_vacc_class_1 * internal.dim_p_S_next_vacc_class_2;
  internal.dim_p_SE = internal.dim_p_SE_1 * internal.dim_p_SE_2;
  internal.dim_p_T_sero_pre_progress = internal.dim_p_T_sero_pre_progress_1 * internal.dim_p_T_sero_pre_progress_2 * internal.dim_p_T_sero_pre_progress_3 * internal.dim_p_T_sero_pre_progress_4;
  internal.dim_p_T_sero_pre_progress_12 = internal.dim_p_T_sero_pre_progress_1 * internal.dim_p_T_sero_pre_progress_2;
  internal.dim_p_T_sero_pre_progress_123 = internal.dim_p_T_sero_pre_progress_1 * internal.dim_p_T_sero_pre_progress_2 * internal.dim_p_T_sero_pre_progress_3;
  internal.dim_R = internal.dim_R_1 * internal.dim_R_2 * internal.dim_R_3;
  internal.dim_R_12 = internal.dim_R_1 * internal.dim_R_2;
  internal.dim_rel_p_hosp_if_sympt = internal.dim_rel_p_hosp_if_sympt_1 * internal.dim_rel_p_hosp_if_sympt_2;
  internal.dim_rel_p_sympt = internal.dim_rel_p_sympt_1 * internal.dim_rel_p_sympt_2;
  internal.dim_S = internal.dim_S_1 * internal.dim_S_2;
  internal.dim_T_PCR_neg = internal.dim_T_PCR_neg_1 * internal.dim_T_PCR_neg_2 * internal.dim_T_PCR_neg_3;
  internal.dim_T_PCR_neg_12 = internal.dim_T_PCR_neg_1 * internal.dim_T_PCR_neg_2;
  internal.dim_T_PCR_pos = internal.dim_T_PCR_pos_1 * internal.dim_T_PCR_pos_2 * internal.dim_T_PCR_pos_3 * internal.dim_T_PCR_pos_4;
  internal.dim_T_PCR_pos_12 = internal.dim_T_PCR_pos_1 * internal.dim_T_PCR_pos_2;
  internal.dim_T_PCR_pos_123 = internal.dim_T_PCR_pos_1 * internal.dim_T_PCR_pos_2 * internal.dim_T_PCR_pos_3;
  internal.dim_T_PCR_pre = internal.dim_T_PCR_pre_1 * internal.dim_T_PCR_pre_2 * internal.dim_T_PCR_pre_3 * internal.dim_T_PCR_pre_4;
  internal.dim_T_PCR_pre_12 = internal.dim_T_PCR_pre_1 * internal.dim_T_PCR_pre_2;
  internal.dim_T_PCR_pre_123 = internal.dim_T_PCR_pre_1 * internal.dim_T_PCR_pre_2 * internal.dim_T_PCR_pre_3;
  internal.dim_T_sero_neg = internal.dim_T_sero_neg_1 * internal.dim_T_sero_neg_2 * internal.dim_T_sero_neg_3;
  internal.dim_T_sero_neg_12 = internal.dim_T_sero_neg_1 * internal.dim_T_sero_neg_2;
  internal.dim_T_sero_pos = internal.dim_T_sero_pos_1 * internal.dim_T_sero_pos_2 * internal.dim_T_sero_pos_3 * internal.dim_T_sero_pos_4;
  internal.dim_T_sero_pos_12 = internal.dim_T_sero_pos_1 * internal.dim_T_sero_pos_2;
  internal.dim_T_sero_pos_123 = internal.dim_T_sero_pos_1 * internal.dim_T_sero_pos_2 * internal.dim_T_sero_pos_3;
  internal.dim_T_sero_pre = internal.dim_T_sero_pre_1 * internal.dim_T_sero_pre_2 * internal.dim_T_sero_pre_3 * internal.dim_T_sero_pre_4;
  internal.dim_T_sero_pre_12 = internal.dim_T_sero_pre_1 * internal.dim_T_sero_pre_2;
  internal.dim_T_sero_pre_123 = internal.dim_T_sero_pre_1 * internal.dim_T_sero_pre_2 * internal.dim_T_sero_pre_3;
  internal.dim_vaccine_progression_rate = internal.dim_vaccine_progression_rate_1 * internal.dim_vaccine_progression_rate_2;
  internal.dim_vaccine_progression_rate_base = internal.dim_vaccine_progression_rate_base_1 * internal.dim_vaccine_progression_rate_base_2;
  internal.dim_W_D_conf = internal.dim_W_D_conf_1 * internal.dim_W_D_conf_2 * internal.dim_W_D_conf_3 * internal.dim_W_D_conf_4;
  internal.dim_W_D_conf_12 = internal.dim_W_D_conf_1 * internal.dim_W_D_conf_2;
  internal.dim_W_D_conf_123 = internal.dim_W_D_conf_1 * internal.dim_W_D_conf_2 * internal.dim_W_D_conf_3;
  internal.dim_W_D_unconf = internal.dim_W_D_unconf_1 * internal.dim_W_D_unconf_2 * internal.dim_W_D_unconf_3 * internal.dim_W_D_unconf_4;
  internal.dim_W_D_unconf_12 = internal.dim_W_D_unconf_1 * internal.dim_W_D_unconf_2;
  internal.dim_W_D_unconf_123 = internal.dim_W_D_unconf_1 * internal.dim_W_D_unconf_2 * internal.dim_W_D_unconf_3;
  internal.dim_W_R_conf = internal.dim_W_R_conf_1 * internal.dim_W_R_conf_2 * internal.dim_W_R_conf_3 * internal.dim_W_R_conf_4;
  internal.dim_W_R_conf_12 = internal.dim_W_R_conf_1 * internal.dim_W_R_conf_2;
  internal.dim_W_R_conf_123 = internal.dim_W_R_conf_1 * internal.dim_W_R_conf_2 * internal.dim_W_R_conf_3;
  internal.dim_W_R_unconf = internal.dim_W_R_unconf_1 * internal.dim_W_R_unconf_2 * internal.dim_W_R_unconf_3 * internal.dim_W_R_unconf_4;
  internal.dim_W_R_unconf_12 = internal.dim_W_R_unconf_1 * internal.dim_W_R_unconf_2;
  internal.dim_W_R_unconf_123 = internal.dim_W_R_unconf_1 * internal.dim_W_R_unconf_2 * internal.dim_W_R_unconf_3;
  internal.aux_E = std::vector<real_t>(internal.dim_aux_E);
  internal.aux_G_D = std::vector<real_t>(internal.dim_aux_G_D);
  internal.aux_H_D_conf = std::vector<real_t>(internal.dim_aux_H_D_conf);
  internal.aux_H_D_unconf = std::vector<real_t>(internal.dim_aux_H_D_unconf);
  internal.aux_H_R_conf = std::vector<real_t>(internal.dim_aux_H_R_conf);
  internal.aux_H_R_unconf = std::vector<real_t>(internal.dim_aux_H_R_unconf);
  internal.aux_I_A = std::vector<real_t>(internal.dim_aux_I_A);
  internal.aux_I_C = std::vector<real_t>(internal.dim_aux_I_C);
  internal.aux_ICU_D_conf = std::vector<real_t>(internal.dim_aux_ICU_D_conf);
  internal.aux_ICU_D_unconf = std::vector<real_t>(internal.dim_aux_ICU_D_unconf);
  internal.aux_ICU_pre_conf = std::vector<real_t>(internal.dim_aux_ICU_pre_conf);
  internal.aux_ICU_pre_unconf = std::vector<real_t>(internal.dim_aux_ICU_pre_unconf);
  internal.aux_ICU_W_D_conf = std::vector<real_t>(internal.dim_aux_ICU_W_D_conf);
  internal.aux_ICU_W_D_unconf = std::vector<real_t>(internal.dim_aux_ICU_W_D_unconf);
  internal.aux_ICU_W_R_conf = std::vector<real_t>(internal.dim_aux_ICU_W_R_conf);
  internal.aux_ICU_W_R_unconf = std::vector<real_t>(internal.dim_aux_ICU_W_R_unconf);
  internal.aux_W_D_conf = std::vector<real_t>(internal.dim_aux_W_D_conf);
  internal.aux_W_D_unconf = std::vector<real_t>(internal.dim_aux_W_D_unconf);
  internal.aux_W_R_conf = std::vector<real_t>(internal.dim_aux_W_R_conf);
  internal.aux_W_R_unconf = std::vector<real_t>(internal.dim_aux_W_R_unconf);
  internal.I_with_diff_trans = std::vector<real_t>(internal.dim_I_with_diff_trans);
  internal.initial_cum_n_E_vaccinated = std::vector<real_t>(internal.dim_cum_n_E_vaccinated);
  internal.initial_cum_n_I_A_vaccinated = std::vector<real_t>(internal.dim_cum_n_I_A_vaccinated);
  internal.initial_cum_n_R_vaccinated = std::vector<real_t>(internal.dim_cum_n_R_vaccinated);
  internal.initial_cum_n_S_vaccinated = std::vector<real_t>(internal.dim_cum_n_S_vaccinated);
  internal.initial_cum_n_vaccinated = std::vector<real_t>(internal.dim_cum_n_vaccinated);
  internal.initial_E = std::vector<real_t>(internal.dim_E);
  internal.initial_G_D = std::vector<real_t>(internal.dim_G_D);
  internal.initial_H_D_conf = std::vector<real_t>(internal.dim_H_D_conf);
  internal.initial_H_D_unconf = std::vector<real_t>(internal.dim_H_D_unconf);
  internal.initial_H_R_conf = std::vector<real_t>(internal.dim_H_R_conf);
  internal.initial_H_R_unconf = std::vector<real_t>(internal.dim_H_R_unconf);
  internal.initial_I_A = std::vector<real_t>(internal.dim_I_A);
  internal.initial_I_C = std::vector<real_t>(internal.dim_I_C);
  internal.initial_ICU_D_conf = std::vector<real_t>(internal.dim_ICU_D_conf);
  internal.initial_ICU_D_unconf = std::vector<real_t>(internal.dim_ICU_D_unconf);
  internal.initial_ICU_pre_conf = std::vector<real_t>(internal.dim_ICU_pre_conf);
  internal.initial_ICU_pre_unconf = std::vector<real_t>(internal.dim_ICU_pre_unconf);
  internal.initial_ICU_W_D_conf = std::vector<real_t>(internal.dim_ICU_W_D_conf);
  internal.initial_ICU_W_D_unconf = std::vector<real_t>(internal.dim_ICU_W_D_unconf);
  internal.initial_ICU_W_R_conf = std::vector<real_t>(internal.dim_ICU_W_R_conf);
  internal.initial_ICU_W_R_unconf = std::vector<real_t>(internal.dim_ICU_W_R_unconf);
  internal.initial_R = std::vector<real_t>(internal.dim_R);
  internal.initial_S = std::vector<real_t>(internal.dim_S);
  internal.initial_T_PCR_neg = std::vector<real_t>(internal.dim_T_PCR_neg);
  internal.initial_T_PCR_pos = std::vector<real_t>(internal.dim_T_PCR_pos);
  internal.initial_T_PCR_pre = std::vector<real_t>(internal.dim_T_PCR_pre);
  internal.initial_T_sero_neg = std::vector<real_t>(internal.dim_T_sero_neg);
  internal.initial_T_sero_pos = std::vector<real_t>(internal.dim_T_sero_pos);
  internal.initial_T_sero_pre = std::vector<real_t>(internal.dim_T_sero_pre);
  internal.initial_W_D_conf = std::vector<real_t>(internal.dim_W_D_conf);
  internal.initial_W_D_unconf = std::vector<real_t>(internal.dim_W_D_unconf);
  internal.initial_W_R_conf = std::vector<real_t>(internal.dim_W_R_conf);
  internal.initial_W_R_unconf = std::vector<real_t>(internal.dim_W_R_unconf);
  internal.n_com_to_T_sero_pre = std::vector<real_t>(internal.dim_n_com_to_T_sero_pre);
  internal.n_E_next_vacc_class = std::vector<real_t>(internal.dim_n_E_next_vacc_class);
  internal.n_E_progress = std::vector<real_t>(internal.dim_n_E_progress);
  internal.n_EE = std::vector<real_t>(internal.dim_n_EE);
  internal.n_EE_next_vacc_class = std::vector<real_t>(internal.dim_n_EE_next_vacc_class);
  internal.n_EI_A = std::vector<real_t>(internal.dim_n_EI_A);
  internal.n_EI_A_next_vacc_class = std::vector<real_t>(internal.dim_n_EI_A_next_vacc_class);
  internal.n_EI_C = std::vector<real_t>(internal.dim_n_EI_C);
  internal.n_EI_C_next_vacc_class = std::vector<real_t>(internal.dim_n_EI_C_next_vacc_class);
  internal.n_G_D_progress = std::vector<real_t>(internal.dim_n_G_D_progress);
  internal.n_H_D_conf_progress = std::vector<real_t>(internal.dim_n_H_D_conf_progress);
  internal.n_H_D_unconf_progress = std::vector<real_t>(internal.dim_n_H_D_unconf_progress);
  internal.n_H_D_unconf_to_conf = std::vector<real_t>(internal.dim_n_H_D_unconf_to_conf);
  internal.n_H_R_conf_progress = std::vector<real_t>(internal.dim_n_H_R_conf_progress);
  internal.n_H_R_unconf_progress = std::vector<real_t>(internal.dim_n_H_R_unconf_progress);
  internal.n_H_R_unconf_to_conf = std::vector<real_t>(internal.dim_n_H_R_unconf_to_conf);
  internal.n_hosp_non_ICU = std::vector<real_t>(internal.dim_n_hosp_non_ICU);
  internal.n_I_A_next_vacc_class = std::vector<real_t>(internal.dim_n_I_A_next_vacc_class);
  internal.n_I_A_progress = std::vector<real_t>(internal.dim_n_I_A_progress);
  internal.n_I_C_progress = std::vector<real_t>(internal.dim_n_I_C_progress);
  internal.n_I_C_to_G_D = std::vector<real_t>(internal.dim_n_I_C_to_G_D);
  internal.n_I_C_to_H_D = std::vector<real_t>(internal.dim_n_I_C_to_H_D);
  internal.n_I_C_to_H_D_conf = std::vector<real_t>(internal.dim_n_I_C_to_H_D_conf);
  internal.n_I_C_to_H_R = std::vector<real_t>(internal.dim_n_I_C_to_H_R);
  internal.n_I_C_to_H_R_conf = std::vector<real_t>(internal.dim_n_I_C_to_H_R_conf);
  internal.n_I_C_to_hosp = std::vector<real_t>(internal.dim_n_I_C_to_hosp);
  internal.n_I_C_to_ICU_pre = std::vector<real_t>(internal.dim_n_I_C_to_ICU_pre);
  internal.n_I_C_to_ICU_pre_conf = std::vector<real_t>(internal.dim_n_I_C_to_ICU_pre_conf);
  internal.n_I_C_to_R = std::vector<real_t>(internal.dim_n_I_C_to_R);
  internal.n_ICU_D_conf_progress = std::vector<real_t>(internal.dim_n_ICU_D_conf_progress);
  internal.n_ICU_D_unconf_progress = std::vector<real_t>(internal.dim_n_ICU_D_unconf_progress);
  internal.n_ICU_D_unconf_to_conf = std::vector<real_t>(internal.dim_n_ICU_D_unconf_to_conf);
  internal.n_ICU_pre_conf_progress = std::vector<real_t>(internal.dim_n_ICU_pre_conf_progress);
  internal.n_ICU_pre_conf_to_ICU_D_conf = std::vector<real_t>(internal.dim_n_ICU_pre_conf_to_ICU_D_conf);
  internal.n_ICU_pre_conf_to_ICU_W_D_conf = std::vector<real_t>(internal.dim_n_ICU_pre_conf_to_ICU_W_D_conf);
  internal.n_ICU_pre_conf_to_ICU_W_R_conf = std::vector<real_t>(internal.dim_n_ICU_pre_conf_to_ICU_W_R_conf);
  internal.n_ICU_pre_unconf_progress = std::vector<real_t>(internal.dim_n_ICU_pre_unconf_progress);
  internal.n_ICU_pre_unconf_to_conf = std::vector<real_t>(internal.dim_n_ICU_pre_unconf_to_conf);
  internal.n_ICU_pre_unconf_to_ICU_D_unconf = std::vector<real_t>(internal.dim_n_ICU_pre_unconf_to_ICU_D_unconf);
  internal.n_ICU_pre_unconf_to_ICU_W_D_unconf = std::vector<real_t>(internal.dim_n_ICU_pre_unconf_to_ICU_W_D_unconf);
  internal.n_ICU_pre_unconf_to_ICU_W_R_unconf = std::vector<real_t>(internal.dim_n_ICU_pre_unconf_to_ICU_W_R_unconf);
  internal.n_ICU_W_D_conf_progress = std::vector<real_t>(internal.dim_n_ICU_W_D_conf_progress);
  internal.n_ICU_W_D_unconf_progress = std::vector<real_t>(internal.dim_n_ICU_W_D_unconf_progress);
  internal.n_ICU_W_D_unconf_to_conf = std::vector<real_t>(internal.dim_n_ICU_W_D_unconf_to_conf);
  internal.n_ICU_W_R_conf_progress = std::vector<real_t>(internal.dim_n_ICU_W_R_conf_progress);
  internal.n_ICU_W_R_unconf_progress = std::vector<real_t>(internal.dim_n_ICU_W_R_unconf_progress);
  internal.n_ICU_W_R_unconf_to_conf = std::vector<real_t>(internal.dim_n_ICU_W_R_unconf_to_conf);
  internal.n_II_A = std::vector<real_t>(internal.dim_n_II_A);
  internal.n_II_A_next_vacc_class = std::vector<real_t>(internal.dim_n_II_A_next_vacc_class);
  internal.n_R_next_vacc_class = std::vector<real_t>(internal.dim_n_R_next_vacc_class);
  internal.n_R_next_vacc_class_capped = std::vector<real_t>(internal.dim_n_R_next_vacc_class_capped);
  internal.n_R_next_vacc_class_tmp = std::vector<real_t>(internal.dim_n_R_next_vacc_class_tmp);
  internal.n_R_progress = std::vector<real_t>(internal.dim_n_R_progress);
  internal.n_R_progress_capped = std::vector<real_t>(internal.dim_n_R_progress_capped);
  internal.n_R_progress_tmp = std::vector<real_t>(internal.dim_n_R_progress_tmp);
  internal.n_RS = std::vector<real_t>(internal.dim_n_RS);
  internal.n_RS_next_vacc_class = std::vector<real_t>(internal.dim_n_RS_next_vacc_class);
  internal.n_S_next_vacc_class = std::vector<real_t>(internal.dim_n_S_next_vacc_class);
  internal.n_S_progress = std::vector<real_t>(internal.dim_n_S_progress);
  internal.n_S_progress_tot = std::vector<real_t>(internal.dim_n_S_progress_tot);
  internal.n_SE = std::vector<real_t>(internal.dim_n_SE);
  internal.n_SE_next_vacc_class = std::vector<real_t>(internal.dim_n_SE_next_vacc_class);
  internal.n_T_PCR_pos_progress = std::vector<real_t>(internal.dim_n_T_PCR_pos_progress);
  internal.n_T_PCR_pre_progress = std::vector<real_t>(internal.dim_n_T_PCR_pre_progress);
  internal.n_T_sero_pos_progress = std::vector<real_t>(internal.dim_n_T_sero_pos_progress);
  internal.n_T_sero_pre_progress = std::vector<real_t>(internal.dim_n_T_sero_pre_progress);
  internal.n_T_sero_pre_to_T_sero_pos = std::vector<real_t>(internal.dim_n_T_sero_pre_to_T_sero_pos);
  internal.n_W_D_conf_progress = std::vector<real_t>(internal.dim_n_W_D_conf_progress);
  internal.n_W_D_unconf_progress = std::vector<real_t>(internal.dim_n_W_D_unconf_progress);
  internal.n_W_D_unconf_to_conf = std::vector<real_t>(internal.dim_n_W_D_unconf_to_conf);
  internal.n_W_R_conf_progress = std::vector<real_t>(internal.dim_n_W_R_conf_progress);
  internal.n_W_R_unconf_progress = std::vector<real_t>(internal.dim_n_W_R_unconf_progress);
  internal.n_W_R_unconf_to_conf = std::vector<real_t>(internal.dim_n_W_R_unconf_to_conf);
  internal.new_E = std::vector<real_t>(internal.dim_new_E);
  internal.new_G_D = std::vector<real_t>(internal.dim_new_G_D);
  internal.new_H_D_conf = std::vector<real_t>(internal.dim_new_H_D_conf);
  internal.new_H_D_unconf = std::vector<real_t>(internal.dim_new_H_D_unconf);
  internal.new_H_R_conf = std::vector<real_t>(internal.dim_new_H_R_conf);
  internal.new_H_R_unconf = std::vector<real_t>(internal.dim_new_H_R_unconf);
  internal.new_I_A = std::vector<real_t>(internal.dim_new_I_A);
  internal.new_I_C = std::vector<real_t>(internal.dim_new_I_C);
  internal.new_ICU_D_conf = std::vector<real_t>(internal.dim_new_ICU_D_conf);
  internal.new_ICU_D_unconf = std::vector<real_t>(internal.dim_new_ICU_D_unconf);
  internal.new_ICU_pre_conf = std::vector<real_t>(internal.dim_new_ICU_pre_conf);
  internal.new_ICU_pre_unconf = std::vector<real_t>(internal.dim_new_ICU_pre_unconf);
  internal.new_ICU_W_D_conf = std::vector<real_t>(internal.dim_new_ICU_W_D_conf);
  internal.new_ICU_W_D_unconf = std::vector<real_t>(internal.dim_new_ICU_W_D_unconf);
  internal.new_ICU_W_R_conf = std::vector<real_t>(internal.dim_new_ICU_W_R_conf);
  internal.new_ICU_W_R_unconf = std::vector<real_t>(internal.dim_new_ICU_W_R_unconf);
  internal.new_R = std::vector<real_t>(internal.dim_new_R);
  internal.new_S = std::vector<real_t>(internal.dim_new_S);
  internal.new_T_PCR_neg = std::vector<real_t>(internal.dim_new_T_PCR_neg);
  internal.new_T_PCR_pos = std::vector<real_t>(internal.dim_new_T_PCR_pos);
  internal.new_T_PCR_pre = std::vector<real_t>(internal.dim_new_T_PCR_pre);
  internal.new_T_sero_neg = std::vector<real_t>(internal.dim_new_T_sero_neg);
  internal.new_T_sero_pos = std::vector<real_t>(internal.dim_new_T_sero_pos);
  internal.new_T_sero_pre = std::vector<real_t>(internal.dim_new_T_sero_pre);
  internal.new_W_D_conf = std::vector<real_t>(internal.dim_new_W_D_conf);
  internal.new_W_D_unconf = std::vector<real_t>(internal.dim_new_W_D_unconf);
  internal.new_W_R_conf = std::vector<real_t>(internal.dim_new_W_R_conf);
  internal.new_W_R_unconf = std::vector<real_t>(internal.dim_new_W_R_unconf);
  internal.p_E_next_vacc_class = std::vector<real_t>(internal.dim_p_E_next_vacc_class);
  internal.p_I_A_next_vacc_class = std::vector<real_t>(internal.dim_p_I_A_next_vacc_class);
  internal.p_R_next_vacc_class = std::vector<real_t>(internal.dim_p_R_next_vacc_class);
  internal.p_S_next_vacc_class = std::vector<real_t>(internal.dim_p_S_next_vacc_class);
  internal.p_SE = std::vector<real_t>(internal.dim_p_SE);
  internal.p_T_sero_pre_progress = std::vector<real_t>(internal.dim_p_T_sero_pre_progress);
  internal.vaccine_progression_rate = std::vector<real_t>(internal.dim_vaccine_progression_rate);
  for (int i = 1; i <= internal.dim_cum_n_E_vaccinated_1; ++i) {
    for (int j = 1; j <= internal.dim_cum_n_E_vaccinated_2; ++j) {
      internal.initial_cum_n_E_vaccinated[i - 1 + internal.dim_cum_n_E_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= internal.dim_cum_n_I_A_vaccinated_1; ++i) {
    for (int j = 1; j <= internal.dim_cum_n_I_A_vaccinated_2; ++j) {
      internal.initial_cum_n_I_A_vaccinated[i - 1 + internal.dim_cum_n_I_A_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= internal.dim_cum_n_R_vaccinated_1; ++i) {
    for (int j = 1; j <= internal.dim_cum_n_R_vaccinated_2; ++j) {
      internal.initial_cum_n_R_vaccinated[i - 1 + internal.dim_cum_n_R_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= internal.dim_cum_n_S_vaccinated_1; ++i) {
    for (int j = 1; j <= internal.dim_cum_n_S_vaccinated_2; ++j) {
      internal.initial_cum_n_S_vaccinated[i - 1 + internal.dim_cum_n_S_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= internal.dim_cum_n_vaccinated_1; ++i) {
    for (int j = 1; j <= internal.dim_cum_n_vaccinated_2; ++j) {
      internal.initial_cum_n_vaccinated[i - 1 + internal.dim_cum_n_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= internal.dim_E_1; ++i) {
    for (int j = 1; j <= internal.dim_E_2; ++j) {
      for (int k = 1; k <= internal.dim_E_3; ++k) {
        for (int l = 1; l <= internal.dim_E_4; ++l) {
          internal.initial_E[i - 1 + internal.dim_E_1 * (j - 1) + internal.dim_E_12 * (k - 1) + internal.dim_E_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_G_D_1; ++i) {
    for (int j = 1; j <= internal.dim_G_D_2; ++j) {
      for (int k = 1; k <= internal.dim_G_D_3; ++k) {
        for (int l = 1; l <= internal.dim_G_D_4; ++l) {
          internal.initial_G_D[i - 1 + internal.dim_G_D_1 * (j - 1) + internal.dim_G_D_12 * (k - 1) + internal.dim_G_D_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_H_D_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_H_D_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_H_D_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_H_D_conf_4; ++l) {
          internal.initial_H_D_conf[i - 1 + internal.dim_H_D_conf_1 * (j - 1) + internal.dim_H_D_conf_12 * (k - 1) + internal.dim_H_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_H_D_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_H_D_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_H_D_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_H_D_unconf_4; ++l) {
          internal.initial_H_D_unconf[i - 1 + internal.dim_H_D_unconf_1 * (j - 1) + internal.dim_H_D_unconf_12 * (k - 1) + internal.dim_H_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_H_R_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_H_R_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_H_R_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_H_R_conf_4; ++l) {
          internal.initial_H_R_conf[i - 1 + internal.dim_H_R_conf_1 * (j - 1) + internal.dim_H_R_conf_12 * (k - 1) + internal.dim_H_R_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_H_R_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_H_R_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_H_R_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_H_R_unconf_4; ++l) {
          internal.initial_H_R_unconf[i - 1 + internal.dim_H_R_unconf_1 * (j - 1) + internal.dim_H_R_unconf_12 * (k - 1) + internal.dim_H_R_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_I_A_1; ++i) {
    for (int j = 1; j <= internal.dim_I_A_2; ++j) {
      for (int k = 1; k <= internal.dim_I_A_3; ++k) {
        for (int l = 1; l <= internal.dim_I_A_4; ++l) {
          internal.initial_I_A[i - 1 + internal.dim_I_A_1 * (j - 1) + internal.dim_I_A_12 * (k - 1) + internal.dim_I_A_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_I_C_1; ++i) {
    for (int j = 1; j <= internal.dim_I_C_2; ++j) {
      for (int k = 1; k <= internal.dim_I_C_3; ++k) {
        for (int l = 1; l <= internal.dim_I_C_4; ++l) {
          internal.initial_I_C[i - 1 + internal.dim_I_C_1 * (j - 1) + internal.dim_I_C_12 * (k - 1) + internal.dim_I_C_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_D_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_D_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_D_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_D_conf_4; ++l) {
          internal.initial_ICU_D_conf[i - 1 + internal.dim_ICU_D_conf_1 * (j - 1) + internal.dim_ICU_D_conf_12 * (k - 1) + internal.dim_ICU_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_D_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_D_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_D_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_D_unconf_4; ++l) {
          internal.initial_ICU_D_unconf[i - 1 + internal.dim_ICU_D_unconf_1 * (j - 1) + internal.dim_ICU_D_unconf_12 * (k - 1) + internal.dim_ICU_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_pre_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_pre_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_pre_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_pre_conf_4; ++l) {
          internal.initial_ICU_pre_conf[i - 1 + internal.dim_ICU_pre_conf_1 * (j - 1) + internal.dim_ICU_pre_conf_12 * (k - 1) + internal.dim_ICU_pre_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_pre_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_pre_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_pre_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_pre_unconf_4; ++l) {
          internal.initial_ICU_pre_unconf[i - 1 + internal.dim_ICU_pre_unconf_1 * (j - 1) + internal.dim_ICU_pre_unconf_12 * (k - 1) + internal.dim_ICU_pre_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_W_D_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_W_D_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_W_D_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_W_D_conf_4; ++l) {
          internal.initial_ICU_W_D_conf[i - 1 + internal.dim_ICU_W_D_conf_1 * (j - 1) + internal.dim_ICU_W_D_conf_12 * (k - 1) + internal.dim_ICU_W_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_W_D_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_W_D_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_W_D_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_W_D_unconf_4; ++l) {
          internal.initial_ICU_W_D_unconf[i - 1 + internal.dim_ICU_W_D_unconf_1 * (j - 1) + internal.dim_ICU_W_D_unconf_12 * (k - 1) + internal.dim_ICU_W_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_W_R_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_W_R_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_W_R_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_W_R_conf_4; ++l) {
          internal.initial_ICU_W_R_conf[i - 1 + internal.dim_ICU_W_R_conf_1 * (j - 1) + internal.dim_ICU_W_R_conf_12 * (k - 1) + internal.dim_ICU_W_R_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_ICU_W_R_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_ICU_W_R_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_ICU_W_R_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_ICU_W_R_unconf_4; ++l) {
          internal.initial_ICU_W_R_unconf[i - 1 + internal.dim_ICU_W_R_unconf_1 * (j - 1) + internal.dim_ICU_W_R_unconf_12 * (k - 1) + internal.dim_ICU_W_R_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_R_1; ++i) {
    for (int j = 1; j <= internal.dim_R_2; ++j) {
      for (int k = 1; k <= internal.dim_R_3; ++k) {
        internal.initial_R[i - 1 + internal.dim_R_1 * (j - 1) + internal.dim_R_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= internal.dim_S_1; ++i) {
    for (int j = 1; j <= internal.dim_S_2; ++j) {
      internal.initial_S[i - 1 + internal.dim_S_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= internal.dim_T_PCR_neg_1; ++i) {
    for (int j = 1; j <= internal.dim_T_PCR_neg_2; ++j) {
      for (int k = 1; k <= internal.dim_T_PCR_neg_3; ++k) {
        internal.initial_T_PCR_neg[i - 1 + internal.dim_T_PCR_neg_1 * (j - 1) + internal.dim_T_PCR_neg_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= internal.dim_T_PCR_pos_1; ++i) {
    for (int j = 1; j <= internal.dim_T_PCR_pos_2; ++j) {
      for (int k = 1; k <= internal.dim_T_PCR_pos_3; ++k) {
        for (int l = 1; l <= internal.dim_T_PCR_pos_4; ++l) {
          internal.initial_T_PCR_pos[i - 1 + internal.dim_T_PCR_pos_1 * (j - 1) + internal.dim_T_PCR_pos_12 * (k - 1) + internal.dim_T_PCR_pos_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_T_PCR_pre_1; ++i) {
    for (int j = 1; j <= internal.dim_T_PCR_pre_2; ++j) {
      for (int k = 1; k <= internal.dim_T_PCR_pre_3; ++k) {
        for (int l = 1; l <= internal.dim_T_PCR_pre_4; ++l) {
          internal.initial_T_PCR_pre[i - 1 + internal.dim_T_PCR_pre_1 * (j - 1) + internal.dim_T_PCR_pre_12 * (k - 1) + internal.dim_T_PCR_pre_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_T_sero_neg_1; ++i) {
    for (int j = 1; j <= internal.dim_T_sero_neg_2; ++j) {
      for (int k = 1; k <= internal.dim_T_sero_neg_3; ++k) {
        internal.initial_T_sero_neg[i - 1 + internal.dim_T_sero_neg_1 * (j - 1) + internal.dim_T_sero_neg_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= internal.dim_T_sero_pos_1; ++i) {
    for (int j = 1; j <= internal.dim_T_sero_pos_2; ++j) {
      for (int k = 1; k <= internal.dim_T_sero_pos_3; ++k) {
        for (int l = 1; l <= internal.dim_T_sero_pos_4; ++l) {
          internal.initial_T_sero_pos[i - 1 + internal.dim_T_sero_pos_1 * (j - 1) + internal.dim_T_sero_pos_12 * (k - 1) + internal.dim_T_sero_pos_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_T_sero_pre_1; ++i) {
    for (int j = 1; j <= internal.dim_T_sero_pre_2; ++j) {
      for (int k = 1; k <= internal.dim_T_sero_pre_3; ++k) {
        for (int l = 1; l <= internal.dim_T_sero_pre_4; ++l) {
          internal.initial_T_sero_pre[i - 1 + internal.dim_T_sero_pre_1 * (j - 1) + internal.dim_T_sero_pre_12 * (k - 1) + internal.dim_T_sero_pre_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_W_D_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_W_D_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_W_D_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_W_D_conf_4; ++l) {
          internal.initial_W_D_conf[i - 1 + internal.dim_W_D_conf_1 * (j - 1) + internal.dim_W_D_conf_12 * (k - 1) + internal.dim_W_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_W_D_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_W_D_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_W_D_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_W_D_unconf_4; ++l) {
          internal.initial_W_D_unconf[i - 1 + internal.dim_W_D_unconf_1 * (j - 1) + internal.dim_W_D_unconf_12 * (k - 1) + internal.dim_W_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_W_R_conf_1; ++i) {
    for (int j = 1; j <= internal.dim_W_R_conf_2; ++j) {
      for (int k = 1; k <= internal.dim_W_R_conf_3; ++k) {
        for (int l = 1; l <= internal.dim_W_R_conf_4; ++l) {
          internal.initial_W_R_conf[i - 1 + internal.dim_W_R_conf_1 * (j - 1) + internal.dim_W_R_conf_12 * (k - 1) + internal.dim_W_R_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= internal.dim_W_R_unconf_1; ++i) {
    for (int j = 1; j <= internal.dim_W_R_unconf_2; ++j) {
      for (int k = 1; k <= internal.dim_W_R_unconf_3; ++k) {
        for (int l = 1; l <= internal.dim_W_R_unconf_4; ++l) {
          internal.initial_W_R_unconf[i - 1 + internal.dim_W_R_unconf_1 * (j - 1) + internal.dim_W_R_unconf_12 * (k - 1) + internal.dim_W_R_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  internal.offset_variable_cum_n_E_vaccinated = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated;
  internal.offset_variable_cum_n_I_A_vaccinated = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated;
  internal.offset_variable_cum_n_R_vaccinated = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated;
  internal.offset_variable_cum_n_vaccinated = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated;
  internal.offset_variable_E = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg;
  internal.offset_variable_G_D = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C;
  internal.offset_variable_H_D_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf;
  internal.offset_variable_H_D_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf;
  internal.offset_variable_H_R_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf;
  internal.offset_variable_H_R_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf;
  internal.offset_variable_I_A = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E;
  internal.offset_variable_I_C = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A;
  internal.offset_variable_ICU_D_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf;
  internal.offset_variable_ICU_D_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf;
  internal.offset_variable_ICU_pre_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf;
  internal.offset_variable_ICU_pre_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D;
  internal.offset_variable_ICU_W_D_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf;
  internal.offset_variable_ICU_W_D_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf;
  internal.offset_variable_ICU_W_R_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf;
  internal.offset_variable_ICU_W_R_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf;
  internal.offset_variable_R = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg;
  internal.offset_variable_S = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated;
  internal.offset_variable_T_PCR_neg = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R;
  internal.offset_variable_T_PCR_pos = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf + internal.dim_W_D_unconf + internal.dim_W_D_conf + internal.dim_T_sero_pre + internal.dim_T_sero_pos + internal.dim_T_PCR_pre;
  internal.offset_variable_T_PCR_pre = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf + internal.dim_W_D_unconf + internal.dim_W_D_conf + internal.dim_T_sero_pre + internal.dim_T_sero_pos;
  internal.offset_variable_T_sero_neg = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S;
  internal.offset_variable_T_sero_pos = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf + internal.dim_W_D_unconf + internal.dim_W_D_conf + internal.dim_T_sero_pre;
  internal.offset_variable_T_sero_pre = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf + internal.dim_W_D_unconf + internal.dim_W_D_conf;
  internal.offset_variable_W_D_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf + internal.dim_W_D_unconf;
  internal.offset_variable_W_D_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf + internal.dim_W_R_conf;
  internal.offset_variable_W_R_conf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf + internal.dim_W_R_unconf;
  internal.offset_variable_W_R_unconf = 17 + internal.dim_cum_infections_per_strain + internal.dim_D_hosp + internal.dim_D_comm + internal.dim_cum_admit_by_age + internal.dim_N_tot + internal.dim_cum_n_S_vaccinated + internal.dim_cum_n_E_vaccinated + internal.dim_cum_n_I_A_vaccinated + internal.dim_cum_n_R_vaccinated + internal.dim_cum_n_vaccinated + internal.dim_S + internal.dim_T_sero_neg + internal.dim_R + internal.dim_T_PCR_neg + internal.dim_E + internal.dim_I_A + internal.dim_I_C + internal.dim_G_D + internal.dim_ICU_pre_unconf + internal.dim_ICU_pre_conf + internal.dim_H_R_unconf + internal.dim_H_R_conf + internal.dim_H_D_unconf + internal.dim_H_D_conf + internal.dim_ICU_W_R_unconf + internal.dim_ICU_W_R_conf + internal.dim_ICU_W_D_unconf + internal.dim_ICU_W_D_conf + internal.dim_ICU_D_unconf + internal.dim_ICU_D_conf;
  internal.rel_p_hosp_if_sympt = user_get_array_fixed<real_t, 2>(user, "rel_p_hosp_if_sympt", internal.rel_p_hosp_if_sympt, {internal.dim_rel_p_hosp_if_sympt_1, internal.dim_rel_p_hosp_if_sympt_2}, NA_REAL, NA_REAL);
  internal.rel_p_sympt = user_get_array_fixed<real_t, 2>(user, "rel_p_sympt", internal.rel_p_sympt, {internal.dim_rel_p_sympt_1, internal.dim_rel_p_sympt_2}, NA_REAL, NA_REAL);
  internal.vaccine_progression_rate_base = user_get_array_fixed<real_t, 2>(user, "vaccine_progression_rate_base", internal.vaccine_progression_rate_base, {internal.dim_vaccine_progression_rate_base_1, internal.dim_vaccine_progression_rate_base_2}, NA_REAL, NA_REAL);
  for (int i = 1; i <= internal.dim_p_T_sero_pre_progress_1; ++i) {
    for (int j = 1; j <= internal.dim_p_T_sero_pre_progress_2; ++j) {
      for (int k = 1; k <= internal.dim_p_T_sero_pre_progress_3; ++k) {
        for (int l = 1; l <= internal.dim_p_T_sero_pre_progress_4; ++l) {
          internal.p_T_sero_pre_progress[i - 1 + internal.dim_p_T_sero_pre_progress_1 * (j - 1) + internal.dim_p_T_sero_pre_progress_12 * (k - 1) + internal.dim_p_T_sero_pre_progress_123 * (l - 1)] = 1 - std::exp(- internal.gamma_sero_pre[k - 1] * internal.dt);
        }
      }
    }
  }
  return internal;
}
template <>
cpp11::sexp dust_info<carehomes>(const carehomes::init_t& internal) {
  cpp11::writable::strings nms({"time", "cum_infections", "cum_admit_conf", "cum_new_conf", "beta_out", "N_tot2", "N_tot3", "ICU_tot", "general_tot", "hosp_tot", "D_hosp_tot", "D_comm_tot", "D_tot", "sero_pos", "cum_sympt_cases", "cum_sympt_cases_over25", "react_pos", "cum_infections_per_strain", "D_hosp", "D_comm", "cum_admit_by_age", "N_tot", "cum_n_S_vaccinated", "cum_n_E_vaccinated", "cum_n_I_A_vaccinated", "cum_n_R_vaccinated", "cum_n_vaccinated", "S", "T_sero_neg", "R", "T_PCR_neg", "E", "I_A", "I_C", "G_D", "ICU_pre_unconf", "ICU_pre_conf", "H_R_unconf", "H_R_conf", "H_D_unconf", "H_D_conf", "ICU_W_R_unconf", "ICU_W_R_conf", "ICU_W_D_unconf", "ICU_W_D_conf", "ICU_D_unconf", "ICU_D_conf", "W_R_unconf", "W_R_conf", "W_D_unconf", "W_D_conf", "T_sero_pre", "T_sero_pos", "T_PCR_pre", "T_PCR_pos"});
  cpp11::writable::list dim(55);
  dim[0] = cpp11::writable::integers({1});
  dim[1] = cpp11::writable::integers({1});
  dim[2] = cpp11::writable::integers({1});
  dim[3] = cpp11::writable::integers({1});
  dim[4] = cpp11::writable::integers({1});
  dim[5] = cpp11::writable::integers({1});
  dim[6] = cpp11::writable::integers({1});
  dim[7] = cpp11::writable::integers({1});
  dim[8] = cpp11::writable::integers({1});
  dim[9] = cpp11::writable::integers({1});
  dim[10] = cpp11::writable::integers({1});
  dim[11] = cpp11::writable::integers({1});
  dim[12] = cpp11::writable::integers({1});
  dim[13] = cpp11::writable::integers({1});
  dim[14] = cpp11::writable::integers({1});
  dim[15] = cpp11::writable::integers({1});
  dim[16] = cpp11::writable::integers({1});
  dim[17] = cpp11::writable::integers({internal.dim_cum_infections_per_strain});
  dim[18] = cpp11::writable::integers({internal.dim_D_hosp});
  dim[19] = cpp11::writable::integers({internal.dim_D_comm});
  dim[20] = cpp11::writable::integers({internal.dim_cum_admit_by_age});
  dim[21] = cpp11::writable::integers({internal.dim_N_tot});
  dim[22] = cpp11::writable::integers({internal.dim_cum_n_S_vaccinated_1, internal.dim_cum_n_S_vaccinated_2});
  dim[23] = cpp11::writable::integers({internal.dim_cum_n_E_vaccinated_1, internal.dim_cum_n_E_vaccinated_2});
  dim[24] = cpp11::writable::integers({internal.dim_cum_n_I_A_vaccinated_1, internal.dim_cum_n_I_A_vaccinated_2});
  dim[25] = cpp11::writable::integers({internal.dim_cum_n_R_vaccinated_1, internal.dim_cum_n_R_vaccinated_2});
  dim[26] = cpp11::writable::integers({internal.dim_cum_n_vaccinated_1, internal.dim_cum_n_vaccinated_2});
  dim[27] = cpp11::writable::integers({internal.dim_S_1, internal.dim_S_2});
  dim[28] = cpp11::writable::integers({internal.dim_T_sero_neg_1, internal.dim_T_sero_neg_2, internal.dim_T_sero_neg_3});
  dim[29] = cpp11::writable::integers({internal.dim_R_1, internal.dim_R_2, internal.dim_R_3});
  dim[30] = cpp11::writable::integers({internal.dim_T_PCR_neg_1, internal.dim_T_PCR_neg_2, internal.dim_T_PCR_neg_3});
  dim[31] = cpp11::writable::integers({internal.dim_E_1, internal.dim_E_2, internal.dim_E_3, internal.dim_E_4});
  dim[32] = cpp11::writable::integers({internal.dim_I_A_1, internal.dim_I_A_2, internal.dim_I_A_3, internal.dim_I_A_4});
  dim[33] = cpp11::writable::integers({internal.dim_I_C_1, internal.dim_I_C_2, internal.dim_I_C_3, internal.dim_I_C_4});
  dim[34] = cpp11::writable::integers({internal.dim_G_D_1, internal.dim_G_D_2, internal.dim_G_D_3, internal.dim_G_D_4});
  dim[35] = cpp11::writable::integers({internal.dim_ICU_pre_unconf_1, internal.dim_ICU_pre_unconf_2, internal.dim_ICU_pre_unconf_3, internal.dim_ICU_pre_unconf_4});
  dim[36] = cpp11::writable::integers({internal.dim_ICU_pre_conf_1, internal.dim_ICU_pre_conf_2, internal.dim_ICU_pre_conf_3, internal.dim_ICU_pre_conf_4});
  dim[37] = cpp11::writable::integers({internal.dim_H_R_unconf_1, internal.dim_H_R_unconf_2, internal.dim_H_R_unconf_3, internal.dim_H_R_unconf_4});
  dim[38] = cpp11::writable::integers({internal.dim_H_R_conf_1, internal.dim_H_R_conf_2, internal.dim_H_R_conf_3, internal.dim_H_R_conf_4});
  dim[39] = cpp11::writable::integers({internal.dim_H_D_unconf_1, internal.dim_H_D_unconf_2, internal.dim_H_D_unconf_3, internal.dim_H_D_unconf_4});
  dim[40] = cpp11::writable::integers({internal.dim_H_D_conf_1, internal.dim_H_D_conf_2, internal.dim_H_D_conf_3, internal.dim_H_D_conf_4});
  dim[41] = cpp11::writable::integers({internal.dim_ICU_W_R_unconf_1, internal.dim_ICU_W_R_unconf_2, internal.dim_ICU_W_R_unconf_3, internal.dim_ICU_W_R_unconf_4});
  dim[42] = cpp11::writable::integers({internal.dim_ICU_W_R_conf_1, internal.dim_ICU_W_R_conf_2, internal.dim_ICU_W_R_conf_3, internal.dim_ICU_W_R_conf_4});
  dim[43] = cpp11::writable::integers({internal.dim_ICU_W_D_unconf_1, internal.dim_ICU_W_D_unconf_2, internal.dim_ICU_W_D_unconf_3, internal.dim_ICU_W_D_unconf_4});
  dim[44] = cpp11::writable::integers({internal.dim_ICU_W_D_conf_1, internal.dim_ICU_W_D_conf_2, internal.dim_ICU_W_D_conf_3, internal.dim_ICU_W_D_conf_4});
  dim[45] = cpp11::writable::integers({internal.dim_ICU_D_unconf_1, internal.dim_ICU_D_unconf_2, internal.dim_ICU_D_unconf_3, internal.dim_ICU_D_unconf_4});
  dim[46] = cpp11::writable::integers({internal.dim_ICU_D_conf_1, internal.dim_ICU_D_conf_2, internal.dim_ICU_D_conf_3, internal.dim_ICU_D_conf_4});
  dim[47] = cpp11::writable::integers({internal.dim_W_R_unconf_1, internal.dim_W_R_unconf_2, internal.dim_W_R_unconf_3, internal.dim_W_R_unconf_4});
  dim[48] = cpp11::writable::integers({internal.dim_W_R_conf_1, internal.dim_W_R_conf_2, internal.dim_W_R_conf_3, internal.dim_W_R_conf_4});
  dim[49] = cpp11::writable::integers({internal.dim_W_D_unconf_1, internal.dim_W_D_unconf_2, internal.dim_W_D_unconf_3, internal.dim_W_D_unconf_4});
  dim[50] = cpp11::writable::integers({internal.dim_W_D_conf_1, internal.dim_W_D_conf_2, internal.dim_W_D_conf_3, internal.dim_W_D_conf_4});
  dim[51] = cpp11::writable::integers({internal.dim_T_sero_pre_1, internal.dim_T_sero_pre_2, internal.dim_T_sero_pre_3, internal.dim_T_sero_pre_4});
  dim[52] = cpp11::writable::integers({internal.dim_T_sero_pos_1, internal.dim_T_sero_pos_2, internal.dim_T_sero_pos_3, internal.dim_T_sero_pos_4});
  dim[53] = cpp11::writable::integers({internal.dim_T_PCR_pre_1, internal.dim_T_PCR_pre_2, internal.dim_T_PCR_pre_3, internal.dim_T_PCR_pre_4});
  dim[54] = cpp11::writable::integers({internal.dim_T_PCR_pos_1, internal.dim_T_PCR_pos_2, internal.dim_T_PCR_pos_3, internal.dim_T_PCR_pos_4});
  dim.names() = nms;
  cpp11::writable::list index(55);
  index[0] = cpp11::writable::integers({1});
  index[1] = cpp11::writable::integers({2});
  index[2] = cpp11::writable::integers({3});
  index[3] = cpp11::writable::integers({4});
  index[4] = cpp11::writable::integers({5});
  index[5] = cpp11::writable::integers({6});
  index[6] = cpp11::writable::integers({7});
  index[7] = cpp11::writable::integers({8});
  index[8] = cpp11::writable::integers({9});
  index[9] = cpp11::writable::integers({10});
  index[10] = cpp11::writable::integers({11});
  index[11] = cpp11::writable::integers({12});
  index[12] = cpp11::writable::integers({13});
  index[13] = cpp11::writable::integers({14});
  index[14] = cpp11::writable::integers({15});
  index[15] = cpp11::writable::integers({16});
  index[16] = cpp11::writable::integers({17});
  index[17] = integer_sequence(18, internal.dim_cum_infections_per_strain);
  index[18] = integer_sequence(internal.offset_variable_D_hosp + 1, internal.dim_D_hosp);
  index[19] = integer_sequence(internal.offset_variable_D_comm + 1, internal.dim_D_comm);
  index[20] = integer_sequence(internal.offset_variable_cum_admit_by_age + 1, internal.dim_cum_admit_by_age);
  index[21] = integer_sequence(internal.offset_variable_N_tot + 1, internal.dim_N_tot);
  index[22] = integer_sequence(internal.offset_variable_cum_n_S_vaccinated + 1, internal.dim_cum_n_S_vaccinated);
  index[23] = integer_sequence(internal.offset_variable_cum_n_E_vaccinated + 1, internal.dim_cum_n_E_vaccinated);
  index[24] = integer_sequence(internal.offset_variable_cum_n_I_A_vaccinated + 1, internal.dim_cum_n_I_A_vaccinated);
  index[25] = integer_sequence(internal.offset_variable_cum_n_R_vaccinated + 1, internal.dim_cum_n_R_vaccinated);
  index[26] = integer_sequence(internal.offset_variable_cum_n_vaccinated + 1, internal.dim_cum_n_vaccinated);
  index[27] = integer_sequence(internal.offset_variable_S + 1, internal.dim_S);
  index[28] = integer_sequence(internal.offset_variable_T_sero_neg + 1, internal.dim_T_sero_neg);
  index[29] = integer_sequence(internal.offset_variable_R + 1, internal.dim_R);
  index[30] = integer_sequence(internal.offset_variable_T_PCR_neg + 1, internal.dim_T_PCR_neg);
  index[31] = integer_sequence(internal.offset_variable_E + 1, internal.dim_E);
  index[32] = integer_sequence(internal.offset_variable_I_A + 1, internal.dim_I_A);
  index[33] = integer_sequence(internal.offset_variable_I_C + 1, internal.dim_I_C);
  index[34] = integer_sequence(internal.offset_variable_G_D + 1, internal.dim_G_D);
  index[35] = integer_sequence(internal.offset_variable_ICU_pre_unconf + 1, internal.dim_ICU_pre_unconf);
  index[36] = integer_sequence(internal.offset_variable_ICU_pre_conf + 1, internal.dim_ICU_pre_conf);
  index[37] = integer_sequence(internal.offset_variable_H_R_unconf + 1, internal.dim_H_R_unconf);
  index[38] = integer_sequence(internal.offset_variable_H_R_conf + 1, internal.dim_H_R_conf);
  index[39] = integer_sequence(internal.offset_variable_H_D_unconf + 1, internal.dim_H_D_unconf);
  index[40] = integer_sequence(internal.offset_variable_H_D_conf + 1, internal.dim_H_D_conf);
  index[41] = integer_sequence(internal.offset_variable_ICU_W_R_unconf + 1, internal.dim_ICU_W_R_unconf);
  index[42] = integer_sequence(internal.offset_variable_ICU_W_R_conf + 1, internal.dim_ICU_W_R_conf);
  index[43] = integer_sequence(internal.offset_variable_ICU_W_D_unconf + 1, internal.dim_ICU_W_D_unconf);
  index[44] = integer_sequence(internal.offset_variable_ICU_W_D_conf + 1, internal.dim_ICU_W_D_conf);
  index[45] = integer_sequence(internal.offset_variable_ICU_D_unconf + 1, internal.dim_ICU_D_unconf);
  index[46] = integer_sequence(internal.offset_variable_ICU_D_conf + 1, internal.dim_ICU_D_conf);
  index[47] = integer_sequence(internal.offset_variable_W_R_unconf + 1, internal.dim_W_R_unconf);
  index[48] = integer_sequence(internal.offset_variable_W_R_conf + 1, internal.dim_W_R_conf);
  index[49] = integer_sequence(internal.offset_variable_W_D_unconf + 1, internal.dim_W_D_unconf);
  index[50] = integer_sequence(internal.offset_variable_W_D_conf + 1, internal.dim_W_D_conf);
  index[51] = integer_sequence(internal.offset_variable_T_sero_pre + 1, internal.dim_T_sero_pre);
  index[52] = integer_sequence(internal.offset_variable_T_sero_pos + 1, internal.dim_T_sero_pos);
  index[53] = integer_sequence(internal.offset_variable_T_PCR_pre + 1, internal.dim_T_PCR_pre);
  index[54] = integer_sequence(internal.offset_variable_T_PCR_pos + 1, internal.dim_T_PCR_pos);
  index.names() = nms;
  size_t len = internal.offset_variable_T_PCR_pos + internal.dim_T_PCR_pos;
  using namespace cpp11::literals;
  return cpp11::writable::list({
           "dim"_nm = dim,
           "len"_nm = len,
           "index"_nm = index});
}
