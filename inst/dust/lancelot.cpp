// Generated by odin.dust (version 0.3.6) - do not edit
template <typename real_type, typename container>
__host__ __device__ real_type odin_sum1(const container x, size_t from, size_t to);
template <typename real_type, typename container>
__host__ __device__ real_type odin_sum2(const container x, int from_i, int to_i, int from_j, int to_j, int dim_x_1);
template <typename real_type, typename container>
__host__ __device__ real_type odin_sum3(const container x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int dim_x_1, int dim_x_12);
template <typename real_type, typename container>
__host__ __device__ real_type odin_sum4(const container x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int from_l, int to_l, int dim_x_1, int dim_x_12, int dim_x_123);
template <typename real_type, typename T, typename U>
__host__ __device__ real_type fmodr(T x, U y) {
  real_type tmp = std::fmod(static_cast<real_type>(x),
                            static_cast<real_type>(y));
  if (tmp * y < 0) {
    tmp += y;
  }
  return tmp;
}

// These exist to support the model on the gpu, as in C++14 std::min
// and std::max are constexpr and error without --expt-relaxed-constexpr
template <typename T>
__host__ __device__ T odin_min(T x, T y) {
  return x < y ? x : y;
}

template <typename T>
__host__ __device__ T odin_max(T x, T y) {
  return x > y ? x : y;
}

template <typename T>
__host__ __device__ T odin_sign(T x) {
  return (x > 0) ? 1 : ((x < 0) ? -1 : 0);
}
// [[dust::class(lancelot)]]
// [[dust::time_type(discrete)]]
// [[dust::param(G_D_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(ICU_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(I_A_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(I_C_1_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(I_C_2_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(I_P_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_25_34_react, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_35_44_react, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_45_54_react, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_55_64_react, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_5_24_react, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_65_plus_react, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_15_24, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_15_64, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_25_49, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_50_64, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_65_79, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_80_plus, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_ons, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_react, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(N_tot_under15, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(beta_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(cross_immunity, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(exp_noise, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_A_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_C_1_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_C_2_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_E_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_G_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_H_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_H_R_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_W_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_W_R_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_ICU_pre_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_PCR_pos_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_PCR_pre_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_P_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_U_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_W_D_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_W_R_step, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(hosp_transmission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(index_dose, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(index_dose_inverse, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_A, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_C_1, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_C_2, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_E, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_G_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_H_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_H_R, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_W_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_W_R, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_ICU_pre, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_P, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_PCR_pos, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_PCR_pre, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_W_D, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_W_R, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_sero_pos_1, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_sero_pos_2, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_sero_pre_1, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(k_sero_pre_2, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_ICU, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_admitted, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_all_admission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_death, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_death_carehomes, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_death_comm, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_death_hosp, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_death_non_hosp, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_diagnoses, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_general, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_hosp, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(kappa_pillar2_cases, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(m, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_age_groups, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_doses, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_A_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_C_1_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_C_2_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_E_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_G_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_H_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_H_R_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_ICU_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_ICU_W_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_ICU_W_R_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_ICU_pre_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_PCR_pos_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_PCR_pre_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_P_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_U_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_W_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_gamma_W_R_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_groups, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_C_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_G_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_H_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_H_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_ICU_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_ICU_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_R_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_W_D_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_p_star_steps, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_strains, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_strains_R, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(n_vacc_classes, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(ons_sensitivity, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(ons_specificity, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_C_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_G_D_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_H_D_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_H_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_ICU_D_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_ICU_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_15_24, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_25_49, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_50_64, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_65_79, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_80_plus, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_under15, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_weekend_15_24, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_weekend_25_49, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_weekend_50_64, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_weekend_65_79, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_weekend_80_plus, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_NC_weekend_under15, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_R_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_W_D_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_sero_pos_1, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_sero_pos_2, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(p_star_step, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_ICU, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_admitted, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_all_admission, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_death_carehomes, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_death_comm, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_death_hosp, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_diagnoses, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_general, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_hosp, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_15_24, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_25_49, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_50_64, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_65_79, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_80_plus, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_under15, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_weekend_15_24, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_weekend_25_49, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_weekend_50_64, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_weekend_65_79, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_weekend_80_plus, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(phi_pillar2_cases_weekend_under15, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(pillar2_sensitivity, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(pillar2_specificity, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(react_sensitivity, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(react_specificity, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_A, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_C_1, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_C_2, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_E, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_G_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_H_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_H_R, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_ICU_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_ICU_W_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_ICU_W_R, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_ICU_pre, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_P, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_PCR_pos, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_PCR_pre, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_W_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_gamma_W_R, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_infectivity, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_G_D, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_H_D, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_ICU, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_ICU_D, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_R, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_W_D, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_hosp_if_sympt, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_p_sympt, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rel_susceptibility, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(rho_pillar2_tests, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(seed_step_start, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(seed_value, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(sero_sensitivity_1, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(sero_sensitivity_2, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(sero_specificity_1, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(sero_specificity_2, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(steps_per_day, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_rel_p_G_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_rel_p_H_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_rel_p_ICU_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_rel_p_W_D, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_rel_p_hosp_if_sympt, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_rel_p_icu, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_rel_p_sympt, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_seed_step_start, has_default = FALSE, default_value = NULL, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_seed_value, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(strain_transmission, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vacc_skip_dose, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vacc_skip_dose_inverse, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vacc_skip_dose_weight, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vacc_skip_from, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vacc_skip_progression_rate_base, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vacc_skip_to, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vacc_skipped, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vaccine_dose_step, has_default = FALSE, default_value = NULL, rank = 3, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vaccine_progression_rate_base, has_default = FALSE, default_value = NULL, rank = 2, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(waning_rate, has_default = FALSE, default_value = NULL, rank = 1, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_sero_pos_1, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_sero_pos_2, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_sero_pre_1, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(gamma_sero_pre_2, has_default = TRUE, default_value = 0.1, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
// [[dust::param(vaccine_catchup_fraction, has_default = TRUE, default_value = 0L, rank = 0, min = -Inf, max = Inf, integer = FALSE)]]
class lancelot {
public:
  using real_type = double;
  using rng_state_type = dust::random::generator<real_type>;
  struct __align__(16) data_type {
    real_type admitted;
    real_type all_admission;
    real_type all_admission_0_9;
    real_type all_admission_10_19;
    real_type all_admission_20_29;
    real_type all_admission_30_39;
    real_type all_admission_40_49;
    real_type all_admission_50_59;
    real_type all_admission_60_69;
    real_type all_admission_70_79;
    real_type all_admission_80_plus;
    real_type deaths;
    real_type deaths_carehomes;
    real_type deaths_comm;
    real_type deaths_comm_0_49;
    real_type deaths_comm_50_54;
    real_type deaths_comm_55_59;
    real_type deaths_comm_60_64;
    real_type deaths_comm_65_69;
    real_type deaths_comm_70_74;
    real_type deaths_comm_75_79;
    real_type deaths_comm_80_plus;
    real_type deaths_hosp;
    real_type deaths_hosp_0_49;
    real_type deaths_hosp_50_54;
    real_type deaths_hosp_55_59;
    real_type deaths_hosp_60_64;
    real_type deaths_hosp_65_69;
    real_type deaths_hosp_70_74;
    real_type deaths_hosp_75_79;
    real_type deaths_hosp_80_plus;
    real_type deaths_non_hosp;
    real_type diagnoses;
    real_type general;
    real_type hosp;
    real_type icu;
    real_type ons_pos;
    real_type ons_tot;
    real_type pillar2_15_24_cases;
    real_type pillar2_15_24_pos;
    real_type pillar2_15_24_tot;
    real_type pillar2_25_49_cases;
    real_type pillar2_25_49_pos;
    real_type pillar2_25_49_tot;
    real_type pillar2_50_64_cases;
    real_type pillar2_50_64_pos;
    real_type pillar2_50_64_tot;
    real_type pillar2_65_79_cases;
    real_type pillar2_65_79_pos;
    real_type pillar2_65_79_tot;
    real_type pillar2_80_plus_cases;
    real_type pillar2_80_plus_pos;
    real_type pillar2_80_plus_tot;
    real_type pillar2_cases;
    real_type pillar2_over25_cases;
    real_type pillar2_over25_pos;
    real_type pillar2_over25_tot;
    real_type pillar2_pos;
    real_type pillar2_tot;
    real_type pillar2_under15_cases;
    real_type pillar2_under15_pos;
    real_type pillar2_under15_tot;
    real_type react_25_34_pos;
    real_type react_25_34_tot;
    real_type react_35_44_pos;
    real_type react_35_44_tot;
    real_type react_45_54_pos;
    real_type react_45_54_tot;
    real_type react_55_64_pos;
    real_type react_55_64_tot;
    real_type react_5_24_pos;
    real_type react_5_24_tot;
    real_type react_65_plus_pos;
    real_type react_65_plus_tot;
    real_type react_pos;
    real_type react_tot;
    real_type sero_pos_15_64_1;
    real_type sero_pos_15_64_2;
    real_type sero_tot_15_64_1;
    real_type sero_tot_15_64_2;
    real_type strain_non_variant;
    real_type strain_over25_non_variant;
    real_type strain_over25_tot;
    real_type strain_tot;
  };
  struct shared_type {
    real_type G_D_transmission;
    real_type ICU_transmission;
    real_type I_A_transmission;
    real_type I_C_1_transmission;
    real_type I_C_2_transmission;
    real_type I_P_transmission;
    real_type N_25_34_react;
    real_type N_35_44_react;
    real_type N_45_54_react;
    real_type N_55_64_react;
    real_type N_5_24_react;
    real_type N_65_plus_react;
    real_type N_tot_15_24;
    real_type N_tot_15_64;
    real_type N_tot_25_49;
    real_type N_tot_50_64;
    real_type N_tot_65_79;
    real_type N_tot_80_plus;
    real_type N_tot_ons;
    real_type N_tot_react;
    real_type N_tot_under15;
    std::vector<real_type> beta_step;
    std::vector<real_type> cross_immunity;
    int dim_D;
    int dim_D_1;
    int dim_D_2;
    int dim_D_hosp;
    int dim_D_hosp_1;
    int dim_D_hosp_2;
    int dim_D_non_hosp;
    int dim_E;
    int dim_E_1;
    int dim_E_12;
    int dim_E_123;
    int dim_E_2;
    int dim_E_3;
    int dim_E_4;
    int dim_G_D;
    int dim_G_D_1;
    int dim_G_D_12;
    int dim_G_D_123;
    int dim_G_D_2;
    int dim_G_D_3;
    int dim_G_D_4;
    int dim_HFR_disag;
    int dim_HFR_disag_1;
    int dim_HFR_disag_12;
    int dim_HFR_disag_2;
    int dim_HFR_disag_3;
    int dim_HFR_disag_weighted_inc;
    int dim_HFR_disag_weighted_inc_1;
    int dim_HFR_disag_weighted_inc_12;
    int dim_HFR_disag_weighted_inc_2;
    int dim_HFR_disag_weighted_inc_3;
    int dim_H_D_conf;
    int dim_H_D_conf_1;
    int dim_H_D_conf_12;
    int dim_H_D_conf_123;
    int dim_H_D_conf_2;
    int dim_H_D_conf_3;
    int dim_H_D_conf_4;
    int dim_H_D_unconf;
    int dim_H_D_unconf_1;
    int dim_H_D_unconf_12;
    int dim_H_D_unconf_123;
    int dim_H_D_unconf_2;
    int dim_H_D_unconf_3;
    int dim_H_D_unconf_4;
    int dim_H_R_conf;
    int dim_H_R_conf_1;
    int dim_H_R_conf_12;
    int dim_H_R_conf_123;
    int dim_H_R_conf_2;
    int dim_H_R_conf_3;
    int dim_H_R_conf_4;
    int dim_H_R_unconf;
    int dim_H_R_unconf_1;
    int dim_H_R_unconf_12;
    int dim_H_R_unconf_123;
    int dim_H_R_unconf_2;
    int dim_H_R_unconf_3;
    int dim_H_R_unconf_4;
    int dim_ICU_D_conf;
    int dim_ICU_D_conf_1;
    int dim_ICU_D_conf_12;
    int dim_ICU_D_conf_123;
    int dim_ICU_D_conf_2;
    int dim_ICU_D_conf_3;
    int dim_ICU_D_conf_4;
    int dim_ICU_D_unconf;
    int dim_ICU_D_unconf_1;
    int dim_ICU_D_unconf_12;
    int dim_ICU_D_unconf_123;
    int dim_ICU_D_unconf_2;
    int dim_ICU_D_unconf_3;
    int dim_ICU_D_unconf_4;
    int dim_ICU_W_D_conf;
    int dim_ICU_W_D_conf_1;
    int dim_ICU_W_D_conf_12;
    int dim_ICU_W_D_conf_123;
    int dim_ICU_W_D_conf_2;
    int dim_ICU_W_D_conf_3;
    int dim_ICU_W_D_conf_4;
    int dim_ICU_W_D_unconf;
    int dim_ICU_W_D_unconf_1;
    int dim_ICU_W_D_unconf_12;
    int dim_ICU_W_D_unconf_123;
    int dim_ICU_W_D_unconf_2;
    int dim_ICU_W_D_unconf_3;
    int dim_ICU_W_D_unconf_4;
    int dim_ICU_W_R_conf;
    int dim_ICU_W_R_conf_1;
    int dim_ICU_W_R_conf_12;
    int dim_ICU_W_R_conf_123;
    int dim_ICU_W_R_conf_2;
    int dim_ICU_W_R_conf_3;
    int dim_ICU_W_R_conf_4;
    int dim_ICU_W_R_unconf;
    int dim_ICU_W_R_unconf_1;
    int dim_ICU_W_R_unconf_12;
    int dim_ICU_W_R_unconf_123;
    int dim_ICU_W_R_unconf_2;
    int dim_ICU_W_R_unconf_3;
    int dim_ICU_W_R_unconf_4;
    int dim_ICU_pre_conf;
    int dim_ICU_pre_conf_1;
    int dim_ICU_pre_conf_12;
    int dim_ICU_pre_conf_123;
    int dim_ICU_pre_conf_2;
    int dim_ICU_pre_conf_3;
    int dim_ICU_pre_conf_4;
    int dim_ICU_pre_unconf;
    int dim_ICU_pre_unconf_1;
    int dim_ICU_pre_unconf_12;
    int dim_ICU_pre_unconf_123;
    int dim_ICU_pre_unconf_2;
    int dim_ICU_pre_unconf_3;
    int dim_ICU_pre_unconf_4;
    int dim_IFR_disag;
    int dim_IFR_disag_1;
    int dim_IFR_disag_12;
    int dim_IFR_disag_2;
    int dim_IFR_disag_3;
    int dim_IFR_disag_weighted_inc;
    int dim_IFR_disag_weighted_inc_1;
    int dim_IFR_disag_weighted_inc_12;
    int dim_IFR_disag_weighted_inc_2;
    int dim_IFR_disag_weighted_inc_3;
    int dim_IHR_disag;
    int dim_IHR_disag_1;
    int dim_IHR_disag_12;
    int dim_IHR_disag_2;
    int dim_IHR_disag_3;
    int dim_IHR_disag_weighted_inc;
    int dim_IHR_disag_weighted_inc_1;
    int dim_IHR_disag_weighted_inc_12;
    int dim_IHR_disag_weighted_inc_2;
    int dim_IHR_disag_weighted_inc_3;
    int dim_I_A;
    int dim_I_A_1;
    int dim_I_A_12;
    int dim_I_A_123;
    int dim_I_A_2;
    int dim_I_A_3;
    int dim_I_A_4;
    int dim_I_C_1;
    int dim_I_C_1_1;
    int dim_I_C_1_12;
    int dim_I_C_1_123;
    int dim_I_C_1_2;
    int dim_I_C_1_3;
    int dim_I_C_1_4;
    int dim_I_C_2;
    int dim_I_C_2_1;
    int dim_I_C_2_12;
    int dim_I_C_2_123;
    int dim_I_C_2_2;
    int dim_I_C_2_3;
    int dim_I_C_2_4;
    int dim_I_P;
    int dim_I_P_1;
    int dim_I_P_12;
    int dim_I_P_123;
    int dim_I_P_2;
    int dim_I_P_3;
    int dim_I_P_4;
    int dim_I_weighted;
    int dim_I_weighted_1;
    int dim_I_weighted_12;
    int dim_I_weighted_2;
    int dim_I_weighted_3;
    int dim_I_with_diff_trans;
    int dim_I_with_diff_trans_1;
    int dim_I_with_diff_trans_12;
    int dim_I_with_diff_trans_2;
    int dim_I_with_diff_trans_3;
    int dim_N_tot;
    int dim_R;
    int dim_R_1;
    int dim_R_12;
    int dim_R_2;
    int dim_R_3;
    int dim_S;
    int dim_S_1;
    int dim_S_2;
    int dim_T_PCR_neg;
    int dim_T_PCR_neg_1;
    int dim_T_PCR_neg_12;
    int dim_T_PCR_neg_2;
    int dim_T_PCR_neg_3;
    int dim_T_PCR_pos;
    int dim_T_PCR_pos_1;
    int dim_T_PCR_pos_12;
    int dim_T_PCR_pos_123;
    int dim_T_PCR_pos_2;
    int dim_T_PCR_pos_3;
    int dim_T_PCR_pos_4;
    int dim_T_PCR_pre;
    int dim_T_PCR_pre_1;
    int dim_T_PCR_pre_12;
    int dim_T_PCR_pre_123;
    int dim_T_PCR_pre_2;
    int dim_T_PCR_pre_3;
    int dim_T_PCR_pre_4;
    int dim_T_sero_neg_1;
    int dim_T_sero_neg_1_1;
    int dim_T_sero_neg_1_12;
    int dim_T_sero_neg_1_2;
    int dim_T_sero_neg_1_3;
    int dim_T_sero_neg_2;
    int dim_T_sero_neg_2_1;
    int dim_T_sero_neg_2_12;
    int dim_T_sero_neg_2_2;
    int dim_T_sero_neg_2_3;
    int dim_T_sero_pos_1;
    int dim_T_sero_pos_1_1;
    int dim_T_sero_pos_1_12;
    int dim_T_sero_pos_1_123;
    int dim_T_sero_pos_1_2;
    int dim_T_sero_pos_1_3;
    int dim_T_sero_pos_1_4;
    int dim_T_sero_pos_2;
    int dim_T_sero_pos_2_1;
    int dim_T_sero_pos_2_12;
    int dim_T_sero_pos_2_123;
    int dim_T_sero_pos_2_2;
    int dim_T_sero_pos_2_3;
    int dim_T_sero_pos_2_4;
    int dim_T_sero_pre_1;
    int dim_T_sero_pre_1_1;
    int dim_T_sero_pre_1_12;
    int dim_T_sero_pre_1_123;
    int dim_T_sero_pre_1_2;
    int dim_T_sero_pre_1_3;
    int dim_T_sero_pre_1_4;
    int dim_T_sero_pre_2;
    int dim_T_sero_pre_2_1;
    int dim_T_sero_pre_2_12;
    int dim_T_sero_pre_2_123;
    int dim_T_sero_pre_2_2;
    int dim_T_sero_pre_2_3;
    int dim_T_sero_pre_2_4;
    int dim_W_D_conf;
    int dim_W_D_conf_1;
    int dim_W_D_conf_12;
    int dim_W_D_conf_123;
    int dim_W_D_conf_2;
    int dim_W_D_conf_3;
    int dim_W_D_conf_4;
    int dim_W_D_unconf;
    int dim_W_D_unconf_1;
    int dim_W_D_unconf_12;
    int dim_W_D_unconf_123;
    int dim_W_D_unconf_2;
    int dim_W_D_unconf_3;
    int dim_W_D_unconf_4;
    int dim_W_R_conf;
    int dim_W_R_conf_1;
    int dim_W_R_conf_12;
    int dim_W_R_conf_123;
    int dim_W_R_conf_2;
    int dim_W_R_conf_3;
    int dim_W_R_conf_4;
    int dim_W_R_unconf;
    int dim_W_R_unconf_1;
    int dim_W_R_unconf_12;
    int dim_W_R_unconf_123;
    int dim_W_R_unconf_2;
    int dim_W_R_unconf_3;
    int dim_W_R_unconf_4;
    int dim_aux_H_D_conf;
    int dim_aux_H_D_conf_1;
    int dim_aux_H_D_conf_12;
    int dim_aux_H_D_conf_123;
    int dim_aux_H_D_conf_2;
    int dim_aux_H_D_conf_3;
    int dim_aux_H_D_conf_4;
    int dim_aux_H_D_unconf;
    int dim_aux_H_D_unconf_1;
    int dim_aux_H_D_unconf_12;
    int dim_aux_H_D_unconf_123;
    int dim_aux_H_D_unconf_2;
    int dim_aux_H_D_unconf_3;
    int dim_aux_H_D_unconf_4;
    int dim_aux_H_R_conf;
    int dim_aux_H_R_conf_1;
    int dim_aux_H_R_conf_12;
    int dim_aux_H_R_conf_123;
    int dim_aux_H_R_conf_2;
    int dim_aux_H_R_conf_3;
    int dim_aux_H_R_conf_4;
    int dim_aux_H_R_unconf;
    int dim_aux_H_R_unconf_1;
    int dim_aux_H_R_unconf_12;
    int dim_aux_H_R_unconf_123;
    int dim_aux_H_R_unconf_2;
    int dim_aux_H_R_unconf_3;
    int dim_aux_H_R_unconf_4;
    int dim_aux_ICU_D_conf;
    int dim_aux_ICU_D_conf_1;
    int dim_aux_ICU_D_conf_12;
    int dim_aux_ICU_D_conf_123;
    int dim_aux_ICU_D_conf_2;
    int dim_aux_ICU_D_conf_3;
    int dim_aux_ICU_D_conf_4;
    int dim_aux_ICU_D_unconf;
    int dim_aux_ICU_D_unconf_1;
    int dim_aux_ICU_D_unconf_12;
    int dim_aux_ICU_D_unconf_123;
    int dim_aux_ICU_D_unconf_2;
    int dim_aux_ICU_D_unconf_3;
    int dim_aux_ICU_D_unconf_4;
    int dim_aux_ICU_W_D_conf;
    int dim_aux_ICU_W_D_conf_1;
    int dim_aux_ICU_W_D_conf_12;
    int dim_aux_ICU_W_D_conf_123;
    int dim_aux_ICU_W_D_conf_2;
    int dim_aux_ICU_W_D_conf_3;
    int dim_aux_ICU_W_D_conf_4;
    int dim_aux_ICU_W_D_unconf;
    int dim_aux_ICU_W_D_unconf_1;
    int dim_aux_ICU_W_D_unconf_12;
    int dim_aux_ICU_W_D_unconf_123;
    int dim_aux_ICU_W_D_unconf_2;
    int dim_aux_ICU_W_D_unconf_3;
    int dim_aux_ICU_W_D_unconf_4;
    int dim_aux_ICU_W_R_conf;
    int dim_aux_ICU_W_R_conf_1;
    int dim_aux_ICU_W_R_conf_12;
    int dim_aux_ICU_W_R_conf_123;
    int dim_aux_ICU_W_R_conf_2;
    int dim_aux_ICU_W_R_conf_3;
    int dim_aux_ICU_W_R_conf_4;
    int dim_aux_ICU_W_R_unconf;
    int dim_aux_ICU_W_R_unconf_1;
    int dim_aux_ICU_W_R_unconf_12;
    int dim_aux_ICU_W_R_unconf_123;
    int dim_aux_ICU_W_R_unconf_2;
    int dim_aux_ICU_W_R_unconf_3;
    int dim_aux_ICU_W_R_unconf_4;
    int dim_aux_ICU_pre_conf;
    int dim_aux_ICU_pre_conf_1;
    int dim_aux_ICU_pre_conf_12;
    int dim_aux_ICU_pre_conf_123;
    int dim_aux_ICU_pre_conf_2;
    int dim_aux_ICU_pre_conf_3;
    int dim_aux_ICU_pre_conf_4;
    int dim_aux_ICU_pre_unconf;
    int dim_aux_ICU_pre_unconf_1;
    int dim_aux_ICU_pre_unconf_12;
    int dim_aux_ICU_pre_unconf_123;
    int dim_aux_ICU_pre_unconf_2;
    int dim_aux_ICU_pre_unconf_3;
    int dim_aux_ICU_pre_unconf_4;
    int dim_aux_W_D_conf;
    int dim_aux_W_D_conf_1;
    int dim_aux_W_D_conf_12;
    int dim_aux_W_D_conf_123;
    int dim_aux_W_D_conf_2;
    int dim_aux_W_D_conf_3;
    int dim_aux_W_D_conf_4;
    int dim_aux_W_D_unconf;
    int dim_aux_W_D_unconf_1;
    int dim_aux_W_D_unconf_12;
    int dim_aux_W_D_unconf_123;
    int dim_aux_W_D_unconf_2;
    int dim_aux_W_D_unconf_3;
    int dim_aux_W_D_unconf_4;
    int dim_aux_W_R_conf;
    int dim_aux_W_R_conf_1;
    int dim_aux_W_R_conf_12;
    int dim_aux_W_R_conf_123;
    int dim_aux_W_R_conf_2;
    int dim_aux_W_R_conf_3;
    int dim_aux_W_R_conf_4;
    int dim_aux_W_R_unconf;
    int dim_aux_W_R_unconf_1;
    int dim_aux_W_R_unconf_12;
    int dim_aux_W_R_unconf_123;
    int dim_aux_W_R_unconf_2;
    int dim_aux_W_R_unconf_3;
    int dim_aux_W_R_unconf_4;
    int dim_beta_step;
    int dim_cross_immunity;
    int dim_cum_admit_by_age;
    int dim_cum_infections_disag;
    int dim_cum_infections_disag_1;
    int dim_cum_infections_disag_2;
    int dim_cum_infections_strain;
    int dim_cum_n_E_vacc_skip;
    int dim_cum_n_E_vacc_skip_1;
    int dim_cum_n_E_vacc_skip_2;
    int dim_cum_n_E_vaccinated;
    int dim_cum_n_E_vaccinated_1;
    int dim_cum_n_E_vaccinated_2;
    int dim_cum_n_I_A_vacc_skip;
    int dim_cum_n_I_A_vacc_skip_1;
    int dim_cum_n_I_A_vacc_skip_2;
    int dim_cum_n_I_A_vaccinated;
    int dim_cum_n_I_A_vaccinated_1;
    int dim_cum_n_I_A_vaccinated_2;
    int dim_cum_n_I_P_vacc_skip;
    int dim_cum_n_I_P_vacc_skip_1;
    int dim_cum_n_I_P_vacc_skip_2;
    int dim_cum_n_I_P_vaccinated;
    int dim_cum_n_I_P_vaccinated_1;
    int dim_cum_n_I_P_vaccinated_2;
    int dim_cum_n_R_vacc_skip;
    int dim_cum_n_R_vacc_skip_1;
    int dim_cum_n_R_vacc_skip_2;
    int dim_cum_n_R_vaccinated;
    int dim_cum_n_R_vaccinated_1;
    int dim_cum_n_R_vaccinated_2;
    int dim_cum_n_S_vacc_skip;
    int dim_cum_n_S_vacc_skip_1;
    int dim_cum_n_S_vacc_skip_2;
    int dim_cum_n_S_vaccinated;
    int dim_cum_n_S_vaccinated_1;
    int dim_cum_n_S_vaccinated_2;
    int dim_cum_n_vacc_skip;
    int dim_cum_n_vacc_skip_1;
    int dim_cum_n_vacc_skip_2;
    int dim_cum_n_vaccinated;
    int dim_cum_n_vaccinated_1;
    int dim_cum_n_vaccinated_2;
    int dim_delta_D_hosp;
    int dim_delta_D_hosp_disag;
    int dim_delta_D_hosp_disag_1;
    int dim_delta_D_hosp_disag_2;
    int dim_delta_D_non_hosp;
    int dim_delta_D_non_hosp_disag;
    int dim_delta_D_non_hosp_disag_1;
    int dim_delta_D_non_hosp_disag_2;
    int dim_delta_diagnoses_admitted;
    int dim_delta_diagnoses_admitted_1;
    int dim_delta_diagnoses_admitted_2;
    int dim_delta_hospitalisations_age;
    int dim_delta_hospitalisations_strain;
    int dim_delta_infections;
    int dim_delta_infections_1;
    int dim_delta_infections_12;
    int dim_delta_infections_2;
    int dim_delta_infections_3;
    int dim_delta_infections_age;
    int dim_delta_infections_strain;
    int dim_diagnoses_admitted;
    int dim_diagnoses_admitted_1;
    int dim_diagnoses_admitted_2;
    int dim_eff_sus_R;
    int dim_eff_sus_R_1;
    int dim_eff_sus_R_12;
    int dim_eff_sus_R_2;
    int dim_eff_sus_R_3;
    int dim_eff_sus_S;
    int dim_eff_sus_S_1;
    int dim_eff_sus_S_12;
    int dim_eff_sus_S_2;
    int dim_eff_sus_S_3;
    int dim_effective_susceptible;
    int dim_gamma_A;
    int dim_gamma_A_step;
    int dim_gamma_C_1;
    int dim_gamma_C_1_step;
    int dim_gamma_C_2;
    int dim_gamma_C_2_step;
    int dim_gamma_E;
    int dim_gamma_E_step;
    int dim_gamma_G_D;
    int dim_gamma_G_D_step;
    int dim_gamma_H_D;
    int dim_gamma_H_D_step;
    int dim_gamma_H_R;
    int dim_gamma_H_R_step;
    int dim_gamma_ICU_D;
    int dim_gamma_ICU_D_step;
    int dim_gamma_ICU_W_D;
    int dim_gamma_ICU_W_D_step;
    int dim_gamma_ICU_W_R;
    int dim_gamma_ICU_W_R_step;
    int dim_gamma_ICU_pre;
    int dim_gamma_ICU_pre_step;
    int dim_gamma_P;
    int dim_gamma_PCR_pos;
    int dim_gamma_PCR_pos_step;
    int dim_gamma_PCR_pre;
    int dim_gamma_PCR_pre_step;
    int dim_gamma_P_step;
    int dim_gamma_U_step;
    int dim_gamma_W_D;
    int dim_gamma_W_D_step;
    int dim_gamma_W_R;
    int dim_gamma_W_R_step;
    int dim_hfr_age;
    int dim_hfr_strain;
    int dim_hospitalisations_inc_age;
    int dim_hospitalisations_inc_strain;
    int dim_ifr_age;
    int dim_ifr_strain;
    int dim_ihr_age;
    int dim_ihr_strain;
    int dim_index_dose;
    int dim_index_dose_inverse;
    int dim_infections_inc_age;
    int dim_infections_inc_strain;
    int dim_lambda;
    int dim_lambda_1;
    int dim_lambda_2;
    int dim_lambda_susc;
    int dim_lambda_susc_1;
    int dim_lambda_susc_12;
    int dim_lambda_susc_2;
    int dim_lambda_susc_3;
    int dim_m;
    int dim_m_1;
    int dim_m_2;
    int dim_n_EI_A;
    int dim_n_EI_A_1;
    int dim_n_EI_A_12;
    int dim_n_EI_A_2;
    int dim_n_EI_A_3;
    int dim_n_EI_P;
    int dim_n_EI_P_1;
    int dim_n_EI_P_12;
    int dim_n_EI_P_2;
    int dim_n_EI_P_3;
    int dim_n_E_next_vacc_class;
    int dim_n_E_next_vacc_class_1;
    int dim_n_E_next_vacc_class_12;
    int dim_n_E_next_vacc_class_123;
    int dim_n_E_next_vacc_class_2;
    int dim_n_E_next_vacc_class_3;
    int dim_n_E_next_vacc_class_4;
    int dim_n_E_progress;
    int dim_n_E_progress_1;
    int dim_n_E_progress_12;
    int dim_n_E_progress_123;
    int dim_n_E_progress_2;
    int dim_n_E_progress_3;
    int dim_n_E_progress_4;
    int dim_n_E_vacc_skip;
    int dim_n_E_vacc_skip_1;
    int dim_n_E_vacc_skip_12;
    int dim_n_E_vacc_skip_123;
    int dim_n_E_vacc_skip_2;
    int dim_n_E_vacc_skip_3;
    int dim_n_E_vacc_skip_4;
    int dim_n_E_vaccinated;
    int dim_n_E_vaccinated_1;
    int dim_n_E_vaccinated_2;
    int dim_n_G_D_progress;
    int dim_n_G_D_progress_1;
    int dim_n_G_D_progress_12;
    int dim_n_G_D_progress_123;
    int dim_n_G_D_progress_2;
    int dim_n_G_D_progress_3;
    int dim_n_G_D_progress_4;
    int dim_n_H_D_conf_progress;
    int dim_n_H_D_conf_progress_1;
    int dim_n_H_D_conf_progress_12;
    int dim_n_H_D_conf_progress_123;
    int dim_n_H_D_conf_progress_2;
    int dim_n_H_D_conf_progress_3;
    int dim_n_H_D_conf_progress_4;
    int dim_n_H_D_unconf_progress;
    int dim_n_H_D_unconf_progress_1;
    int dim_n_H_D_unconf_progress_12;
    int dim_n_H_D_unconf_progress_123;
    int dim_n_H_D_unconf_progress_2;
    int dim_n_H_D_unconf_progress_3;
    int dim_n_H_D_unconf_progress_4;
    int dim_n_H_D_unconf_to_conf;
    int dim_n_H_D_unconf_to_conf_1;
    int dim_n_H_D_unconf_to_conf_12;
    int dim_n_H_D_unconf_to_conf_123;
    int dim_n_H_D_unconf_to_conf_2;
    int dim_n_H_D_unconf_to_conf_3;
    int dim_n_H_D_unconf_to_conf_4;
    int dim_n_H_R_conf_progress;
    int dim_n_H_R_conf_progress_1;
    int dim_n_H_R_conf_progress_12;
    int dim_n_H_R_conf_progress_123;
    int dim_n_H_R_conf_progress_2;
    int dim_n_H_R_conf_progress_3;
    int dim_n_H_R_conf_progress_4;
    int dim_n_H_R_unconf_progress;
    int dim_n_H_R_unconf_progress_1;
    int dim_n_H_R_unconf_progress_12;
    int dim_n_H_R_unconf_progress_123;
    int dim_n_H_R_unconf_progress_2;
    int dim_n_H_R_unconf_progress_3;
    int dim_n_H_R_unconf_progress_4;
    int dim_n_H_R_unconf_to_conf;
    int dim_n_H_R_unconf_to_conf_1;
    int dim_n_H_R_unconf_to_conf_12;
    int dim_n_H_R_unconf_to_conf_123;
    int dim_n_H_R_unconf_to_conf_2;
    int dim_n_H_R_unconf_to_conf_3;
    int dim_n_H_R_unconf_to_conf_4;
    int dim_n_ICU_D_conf_progress;
    int dim_n_ICU_D_conf_progress_1;
    int dim_n_ICU_D_conf_progress_12;
    int dim_n_ICU_D_conf_progress_123;
    int dim_n_ICU_D_conf_progress_2;
    int dim_n_ICU_D_conf_progress_3;
    int dim_n_ICU_D_conf_progress_4;
    int dim_n_ICU_D_unconf_progress;
    int dim_n_ICU_D_unconf_progress_1;
    int dim_n_ICU_D_unconf_progress_12;
    int dim_n_ICU_D_unconf_progress_123;
    int dim_n_ICU_D_unconf_progress_2;
    int dim_n_ICU_D_unconf_progress_3;
    int dim_n_ICU_D_unconf_progress_4;
    int dim_n_ICU_D_unconf_to_conf;
    int dim_n_ICU_D_unconf_to_conf_1;
    int dim_n_ICU_D_unconf_to_conf_12;
    int dim_n_ICU_D_unconf_to_conf_123;
    int dim_n_ICU_D_unconf_to_conf_2;
    int dim_n_ICU_D_unconf_to_conf_3;
    int dim_n_ICU_D_unconf_to_conf_4;
    int dim_n_ICU_W_D_conf_progress;
    int dim_n_ICU_W_D_conf_progress_1;
    int dim_n_ICU_W_D_conf_progress_12;
    int dim_n_ICU_W_D_conf_progress_123;
    int dim_n_ICU_W_D_conf_progress_2;
    int dim_n_ICU_W_D_conf_progress_3;
    int dim_n_ICU_W_D_conf_progress_4;
    int dim_n_ICU_W_D_unconf_progress;
    int dim_n_ICU_W_D_unconf_progress_1;
    int dim_n_ICU_W_D_unconf_progress_12;
    int dim_n_ICU_W_D_unconf_progress_123;
    int dim_n_ICU_W_D_unconf_progress_2;
    int dim_n_ICU_W_D_unconf_progress_3;
    int dim_n_ICU_W_D_unconf_progress_4;
    int dim_n_ICU_W_D_unconf_to_conf;
    int dim_n_ICU_W_D_unconf_to_conf_1;
    int dim_n_ICU_W_D_unconf_to_conf_12;
    int dim_n_ICU_W_D_unconf_to_conf_123;
    int dim_n_ICU_W_D_unconf_to_conf_2;
    int dim_n_ICU_W_D_unconf_to_conf_3;
    int dim_n_ICU_W_D_unconf_to_conf_4;
    int dim_n_ICU_W_R_conf_progress;
    int dim_n_ICU_W_R_conf_progress_1;
    int dim_n_ICU_W_R_conf_progress_12;
    int dim_n_ICU_W_R_conf_progress_123;
    int dim_n_ICU_W_R_conf_progress_2;
    int dim_n_ICU_W_R_conf_progress_3;
    int dim_n_ICU_W_R_conf_progress_4;
    int dim_n_ICU_W_R_unconf_progress;
    int dim_n_ICU_W_R_unconf_progress_1;
    int dim_n_ICU_W_R_unconf_progress_12;
    int dim_n_ICU_W_R_unconf_progress_123;
    int dim_n_ICU_W_R_unconf_progress_2;
    int dim_n_ICU_W_R_unconf_progress_3;
    int dim_n_ICU_W_R_unconf_progress_4;
    int dim_n_ICU_W_R_unconf_to_conf;
    int dim_n_ICU_W_R_unconf_to_conf_1;
    int dim_n_ICU_W_R_unconf_to_conf_12;
    int dim_n_ICU_W_R_unconf_to_conf_123;
    int dim_n_ICU_W_R_unconf_to_conf_2;
    int dim_n_ICU_W_R_unconf_to_conf_3;
    int dim_n_ICU_W_R_unconf_to_conf_4;
    int dim_n_ICU_pre_conf_progress;
    int dim_n_ICU_pre_conf_progress_1;
    int dim_n_ICU_pre_conf_progress_12;
    int dim_n_ICU_pre_conf_progress_123;
    int dim_n_ICU_pre_conf_progress_2;
    int dim_n_ICU_pre_conf_progress_3;
    int dim_n_ICU_pre_conf_progress_4;
    int dim_n_ICU_pre_conf_to_ICU_D_conf;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_1;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_12;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_2;
    int dim_n_ICU_pre_conf_to_ICU_D_conf_3;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_1;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_12;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_2;
    int dim_n_ICU_pre_conf_to_ICU_W_D_conf_3;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_1;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_12;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_2;
    int dim_n_ICU_pre_conf_to_ICU_W_R_conf_3;
    int dim_n_ICU_pre_unconf_progress;
    int dim_n_ICU_pre_unconf_progress_1;
    int dim_n_ICU_pre_unconf_progress_12;
    int dim_n_ICU_pre_unconf_progress_123;
    int dim_n_ICU_pre_unconf_progress_2;
    int dim_n_ICU_pre_unconf_progress_3;
    int dim_n_ICU_pre_unconf_progress_4;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_1;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_12;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_2;
    int dim_n_ICU_pre_unconf_to_ICU_D_unconf_3;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2;
    int dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2;
    int dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3;
    int dim_n_ICU_pre_unconf_to_conf;
    int dim_n_ICU_pre_unconf_to_conf_1;
    int dim_n_ICU_pre_unconf_to_conf_12;
    int dim_n_ICU_pre_unconf_to_conf_123;
    int dim_n_ICU_pre_unconf_to_conf_2;
    int dim_n_ICU_pre_unconf_to_conf_3;
    int dim_n_ICU_pre_unconf_to_conf_4;
    int dim_n_I_A_next_vacc_class;
    int dim_n_I_A_next_vacc_class_1;
    int dim_n_I_A_next_vacc_class_12;
    int dim_n_I_A_next_vacc_class_123;
    int dim_n_I_A_next_vacc_class_2;
    int dim_n_I_A_next_vacc_class_3;
    int dim_n_I_A_next_vacc_class_4;
    int dim_n_I_A_progress;
    int dim_n_I_A_progress_1;
    int dim_n_I_A_progress_12;
    int dim_n_I_A_progress_123;
    int dim_n_I_A_progress_2;
    int dim_n_I_A_progress_3;
    int dim_n_I_A_progress_4;
    int dim_n_I_A_vacc_skip;
    int dim_n_I_A_vacc_skip_1;
    int dim_n_I_A_vacc_skip_12;
    int dim_n_I_A_vacc_skip_123;
    int dim_n_I_A_vacc_skip_2;
    int dim_n_I_A_vacc_skip_3;
    int dim_n_I_A_vacc_skip_4;
    int dim_n_I_A_vaccinated;
    int dim_n_I_A_vaccinated_1;
    int dim_n_I_A_vaccinated_2;
    int dim_n_I_C_1_progress;
    int dim_n_I_C_1_progress_1;
    int dim_n_I_C_1_progress_12;
    int dim_n_I_C_1_progress_123;
    int dim_n_I_C_1_progress_2;
    int dim_n_I_C_1_progress_3;
    int dim_n_I_C_1_progress_4;
    int dim_n_I_C_2_progress;
    int dim_n_I_C_2_progress_1;
    int dim_n_I_C_2_progress_12;
    int dim_n_I_C_2_progress_123;
    int dim_n_I_C_2_progress_2;
    int dim_n_I_C_2_progress_3;
    int dim_n_I_C_2_progress_4;
    int dim_n_I_C_2_to_G_D;
    int dim_n_I_C_2_to_G_D_1;
    int dim_n_I_C_2_to_G_D_12;
    int dim_n_I_C_2_to_G_D_2;
    int dim_n_I_C_2_to_G_D_3;
    int dim_n_I_C_2_to_H_D;
    int dim_n_I_C_2_to_H_D_1;
    int dim_n_I_C_2_to_H_D_12;
    int dim_n_I_C_2_to_H_D_2;
    int dim_n_I_C_2_to_H_D_3;
    int dim_n_I_C_2_to_H_D_conf;
    int dim_n_I_C_2_to_H_D_conf_1;
    int dim_n_I_C_2_to_H_D_conf_12;
    int dim_n_I_C_2_to_H_D_conf_2;
    int dim_n_I_C_2_to_H_D_conf_3;
    int dim_n_I_C_2_to_H_R;
    int dim_n_I_C_2_to_H_R_1;
    int dim_n_I_C_2_to_H_R_12;
    int dim_n_I_C_2_to_H_R_2;
    int dim_n_I_C_2_to_H_R_3;
    int dim_n_I_C_2_to_H_R_conf;
    int dim_n_I_C_2_to_H_R_conf_1;
    int dim_n_I_C_2_to_H_R_conf_12;
    int dim_n_I_C_2_to_H_R_conf_2;
    int dim_n_I_C_2_to_H_R_conf_3;
    int dim_n_I_C_2_to_ICU_pre;
    int dim_n_I_C_2_to_ICU_pre_1;
    int dim_n_I_C_2_to_ICU_pre_12;
    int dim_n_I_C_2_to_ICU_pre_2;
    int dim_n_I_C_2_to_ICU_pre_3;
    int dim_n_I_C_2_to_ICU_pre_conf;
    int dim_n_I_C_2_to_ICU_pre_conf_1;
    int dim_n_I_C_2_to_ICU_pre_conf_12;
    int dim_n_I_C_2_to_ICU_pre_conf_2;
    int dim_n_I_C_2_to_ICU_pre_conf_3;
    int dim_n_I_C_2_to_RS;
    int dim_n_I_C_2_to_RS_1;
    int dim_n_I_C_2_to_RS_12;
    int dim_n_I_C_2_to_RS_2;
    int dim_n_I_C_2_to_RS_3;
    int dim_n_I_C_2_to_hosp;
    int dim_n_I_C_2_to_hosp_1;
    int dim_n_I_C_2_to_hosp_12;
    int dim_n_I_C_2_to_hosp_2;
    int dim_n_I_C_2_to_hosp_3;
    int dim_n_I_P_next_vacc_class;
    int dim_n_I_P_next_vacc_class_1;
    int dim_n_I_P_next_vacc_class_12;
    int dim_n_I_P_next_vacc_class_123;
    int dim_n_I_P_next_vacc_class_2;
    int dim_n_I_P_next_vacc_class_3;
    int dim_n_I_P_next_vacc_class_4;
    int dim_n_I_P_progress;
    int dim_n_I_P_progress_1;
    int dim_n_I_P_progress_12;
    int dim_n_I_P_progress_123;
    int dim_n_I_P_progress_2;
    int dim_n_I_P_progress_3;
    int dim_n_I_P_progress_4;
    int dim_n_I_P_vacc_skip;
    int dim_n_I_P_vacc_skip_1;
    int dim_n_I_P_vacc_skip_12;
    int dim_n_I_P_vacc_skip_123;
    int dim_n_I_P_vacc_skip_2;
    int dim_n_I_P_vacc_skip_3;
    int dim_n_I_P_vacc_skip_4;
    int dim_n_I_P_vaccinated;
    int dim_n_I_P_vaccinated_1;
    int dim_n_I_P_vaccinated_2;
    int dim_n_R5_to_E3;
    int dim_n_R5_to_E3_1;
    int dim_n_R5_to_E3_2;
    int dim_n_RE;
    int dim_n_RE_1;
    int dim_n_RE_12;
    int dim_n_RE_2;
    int dim_n_RE_3;
    int dim_n_RS;
    int dim_n_RS_1;
    int dim_n_RS_12;
    int dim_n_RS_2;
    int dim_n_RS_3;
    int dim_n_R_next_vacc_class;
    int dim_n_R_next_vacc_class_1;
    int dim_n_R_next_vacc_class_12;
    int dim_n_R_next_vacc_class_2;
    int dim_n_R_next_vacc_class_3;
    int dim_n_R_progress;
    int dim_n_R_progress_1;
    int dim_n_R_progress_12;
    int dim_n_R_progress_2;
    int dim_n_R_progress_3;
    int dim_n_R_tmp;
    int dim_n_R_tmp_1;
    int dim_n_R_tmp_12;
    int dim_n_R_tmp_2;
    int dim_n_R_tmp_3;
    int dim_n_R_vacc_skip;
    int dim_n_R_vacc_skip_1;
    int dim_n_R_vacc_skip_12;
    int dim_n_R_vacc_skip_2;
    int dim_n_R_vacc_skip_3;
    int dim_n_R_vaccinated;
    int dim_n_R_vaccinated_1;
    int dim_n_R_vaccinated_2;
    int dim_n_S_next_vacc_class;
    int dim_n_S_next_vacc_class_1;
    int dim_n_S_next_vacc_class_2;
    int dim_n_S_progress;
    int dim_n_S_progress_1;
    int dim_n_S_progress_12;
    int dim_n_S_progress_2;
    int dim_n_S_progress_3;
    int dim_n_S_progress_tot;
    int dim_n_S_progress_tot_1;
    int dim_n_S_progress_tot_2;
    int dim_n_S_vacc_skip;
    int dim_n_S_vacc_skip_1;
    int dim_n_S_vacc_skip_2;
    int dim_n_S_vaccinated;
    int dim_n_S_vaccinated_1;
    int dim_n_S_vaccinated_2;
    int dim_n_T_PCR_pos_progress;
    int dim_n_T_PCR_pos_progress_1;
    int dim_n_T_PCR_pos_progress_12;
    int dim_n_T_PCR_pos_progress_123;
    int dim_n_T_PCR_pos_progress_2;
    int dim_n_T_PCR_pos_progress_3;
    int dim_n_T_PCR_pos_progress_4;
    int dim_n_T_PCR_pre_progress;
    int dim_n_T_PCR_pre_progress_1;
    int dim_n_T_PCR_pre_progress_12;
    int dim_n_T_PCR_pre_progress_123;
    int dim_n_T_PCR_pre_progress_2;
    int dim_n_T_PCR_pre_progress_3;
    int dim_n_T_PCR_pre_progress_4;
    int dim_n_T_sero_pos_1_progress;
    int dim_n_T_sero_pos_1_progress_1;
    int dim_n_T_sero_pos_1_progress_12;
    int dim_n_T_sero_pos_1_progress_123;
    int dim_n_T_sero_pos_1_progress_2;
    int dim_n_T_sero_pos_1_progress_3;
    int dim_n_T_sero_pos_1_progress_4;
    int dim_n_T_sero_pos_2_progress;
    int dim_n_T_sero_pos_2_progress_1;
    int dim_n_T_sero_pos_2_progress_12;
    int dim_n_T_sero_pos_2_progress_123;
    int dim_n_T_sero_pos_2_progress_2;
    int dim_n_T_sero_pos_2_progress_3;
    int dim_n_T_sero_pos_2_progress_4;
    int dim_n_T_sero_pre_1_progress;
    int dim_n_T_sero_pre_1_progress_1;
    int dim_n_T_sero_pre_1_progress_12;
    int dim_n_T_sero_pre_1_progress_123;
    int dim_n_T_sero_pre_1_progress_2;
    int dim_n_T_sero_pre_1_progress_3;
    int dim_n_T_sero_pre_1_progress_4;
    int dim_n_T_sero_pre_1_to_T_sero_pos_1;
    int dim_n_T_sero_pre_1_to_T_sero_pos_1_1;
    int dim_n_T_sero_pre_1_to_T_sero_pos_1_12;
    int dim_n_T_sero_pre_1_to_T_sero_pos_1_2;
    int dim_n_T_sero_pre_1_to_T_sero_pos_1_3;
    int dim_n_T_sero_pre_2_progress;
    int dim_n_T_sero_pre_2_progress_1;
    int dim_n_T_sero_pre_2_progress_12;
    int dim_n_T_sero_pre_2_progress_123;
    int dim_n_T_sero_pre_2_progress_2;
    int dim_n_T_sero_pre_2_progress_3;
    int dim_n_T_sero_pre_2_progress_4;
    int dim_n_T_sero_pre_2_to_T_sero_pos_2;
    int dim_n_T_sero_pre_2_to_T_sero_pos_2_1;
    int dim_n_T_sero_pre_2_to_T_sero_pos_2_12;
    int dim_n_T_sero_pre_2_to_T_sero_pos_2_2;
    int dim_n_T_sero_pre_2_to_T_sero_pos_2_3;
    int dim_n_W_D_conf_progress;
    int dim_n_W_D_conf_progress_1;
    int dim_n_W_D_conf_progress_12;
    int dim_n_W_D_conf_progress_123;
    int dim_n_W_D_conf_progress_2;
    int dim_n_W_D_conf_progress_3;
    int dim_n_W_D_conf_progress_4;
    int dim_n_W_D_unconf_progress;
    int dim_n_W_D_unconf_progress_1;
    int dim_n_W_D_unconf_progress_12;
    int dim_n_W_D_unconf_progress_123;
    int dim_n_W_D_unconf_progress_2;
    int dim_n_W_D_unconf_progress_3;
    int dim_n_W_D_unconf_progress_4;
    int dim_n_W_D_unconf_to_conf;
    int dim_n_W_D_unconf_to_conf_1;
    int dim_n_W_D_unconf_to_conf_12;
    int dim_n_W_D_unconf_to_conf_123;
    int dim_n_W_D_unconf_to_conf_2;
    int dim_n_W_D_unconf_to_conf_3;
    int dim_n_W_D_unconf_to_conf_4;
    int dim_n_W_R_conf_progress;
    int dim_n_W_R_conf_progress_1;
    int dim_n_W_R_conf_progress_12;
    int dim_n_W_R_conf_progress_123;
    int dim_n_W_R_conf_progress_2;
    int dim_n_W_R_conf_progress_3;
    int dim_n_W_R_conf_progress_4;
    int dim_n_W_R_unconf_progress;
    int dim_n_W_R_unconf_progress_1;
    int dim_n_W_R_unconf_progress_12;
    int dim_n_W_R_unconf_progress_123;
    int dim_n_W_R_unconf_progress_2;
    int dim_n_W_R_unconf_progress_3;
    int dim_n_W_R_unconf_progress_4;
    int dim_n_W_R_unconf_to_conf;
    int dim_n_W_R_unconf_to_conf_1;
    int dim_n_W_R_unconf_to_conf_12;
    int dim_n_W_R_unconf_to_conf_123;
    int dim_n_W_R_unconf_to_conf_2;
    int dim_n_W_R_unconf_to_conf_3;
    int dim_n_W_R_unconf_to_conf_4;
    int dim_n_com_to_T_sero_pre;
    int dim_n_com_to_T_sero_pre_1;
    int dim_n_com_to_T_sero_pre_12;
    int dim_n_com_to_T_sero_pre_2;
    int dim_n_com_to_T_sero_pre_3;
    int dim_n_hosp_non_ICU;
    int dim_n_hosp_non_ICU_1;
    int dim_n_hosp_non_ICU_12;
    int dim_n_hosp_non_ICU_2;
    int dim_n_hosp_non_ICU_3;
    int dim_n_infected_to_R;
    int dim_n_infected_to_R_1;
    int dim_n_infected_to_R_12;
    int dim_n_infected_to_R_2;
    int dim_n_infected_to_R_3;
    int dim_n_infected_to_S;
    int dim_n_infected_to_S_1;
    int dim_n_infected_to_S_12;
    int dim_n_infected_to_S_2;
    int dim_n_infected_to_S_3;
    int dim_n_infection_end;
    int dim_n_infection_end_1;
    int dim_n_infection_end_12;
    int dim_n_infection_end_2;
    int dim_n_infection_end_3;
    int dim_n_vacc_skip;
    int dim_n_vacc_skip_1;
    int dim_n_vacc_skip_2;
    int dim_n_vaccinated;
    int dim_n_vaccinated_1;
    int dim_n_vaccinated_2;
    int dim_new_E;
    int dim_new_E_1;
    int dim_new_E_12;
    int dim_new_E_123;
    int dim_new_E_2;
    int dim_new_E_3;
    int dim_new_E_4;
    int dim_new_G_D;
    int dim_new_G_D_1;
    int dim_new_G_D_12;
    int dim_new_G_D_123;
    int dim_new_G_D_2;
    int dim_new_G_D_3;
    int dim_new_G_D_4;
    int dim_new_HFR_disag_weighted_inc;
    int dim_new_HFR_disag_weighted_inc_1;
    int dim_new_HFR_disag_weighted_inc_12;
    int dim_new_HFR_disag_weighted_inc_2;
    int dim_new_HFR_disag_weighted_inc_3;
    int dim_new_H_D_conf;
    int dim_new_H_D_conf_1;
    int dim_new_H_D_conf_12;
    int dim_new_H_D_conf_123;
    int dim_new_H_D_conf_2;
    int dim_new_H_D_conf_3;
    int dim_new_H_D_conf_4;
    int dim_new_H_D_unconf;
    int dim_new_H_D_unconf_1;
    int dim_new_H_D_unconf_12;
    int dim_new_H_D_unconf_123;
    int dim_new_H_D_unconf_2;
    int dim_new_H_D_unconf_3;
    int dim_new_H_D_unconf_4;
    int dim_new_H_R_conf;
    int dim_new_H_R_conf_1;
    int dim_new_H_R_conf_12;
    int dim_new_H_R_conf_123;
    int dim_new_H_R_conf_2;
    int dim_new_H_R_conf_3;
    int dim_new_H_R_conf_4;
    int dim_new_H_R_unconf;
    int dim_new_H_R_unconf_1;
    int dim_new_H_R_unconf_12;
    int dim_new_H_R_unconf_123;
    int dim_new_H_R_unconf_2;
    int dim_new_H_R_unconf_3;
    int dim_new_H_R_unconf_4;
    int dim_new_ICU_D_conf;
    int dim_new_ICU_D_conf_1;
    int dim_new_ICU_D_conf_12;
    int dim_new_ICU_D_conf_123;
    int dim_new_ICU_D_conf_2;
    int dim_new_ICU_D_conf_3;
    int dim_new_ICU_D_conf_4;
    int dim_new_ICU_D_unconf;
    int dim_new_ICU_D_unconf_1;
    int dim_new_ICU_D_unconf_12;
    int dim_new_ICU_D_unconf_123;
    int dim_new_ICU_D_unconf_2;
    int dim_new_ICU_D_unconf_3;
    int dim_new_ICU_D_unconf_4;
    int dim_new_ICU_W_D_conf;
    int dim_new_ICU_W_D_conf_1;
    int dim_new_ICU_W_D_conf_12;
    int dim_new_ICU_W_D_conf_123;
    int dim_new_ICU_W_D_conf_2;
    int dim_new_ICU_W_D_conf_3;
    int dim_new_ICU_W_D_conf_4;
    int dim_new_ICU_W_D_unconf;
    int dim_new_ICU_W_D_unconf_1;
    int dim_new_ICU_W_D_unconf_12;
    int dim_new_ICU_W_D_unconf_123;
    int dim_new_ICU_W_D_unconf_2;
    int dim_new_ICU_W_D_unconf_3;
    int dim_new_ICU_W_D_unconf_4;
    int dim_new_ICU_W_R_conf;
    int dim_new_ICU_W_R_conf_1;
    int dim_new_ICU_W_R_conf_12;
    int dim_new_ICU_W_R_conf_123;
    int dim_new_ICU_W_R_conf_2;
    int dim_new_ICU_W_R_conf_3;
    int dim_new_ICU_W_R_conf_4;
    int dim_new_ICU_W_R_unconf;
    int dim_new_ICU_W_R_unconf_1;
    int dim_new_ICU_W_R_unconf_12;
    int dim_new_ICU_W_R_unconf_123;
    int dim_new_ICU_W_R_unconf_2;
    int dim_new_ICU_W_R_unconf_3;
    int dim_new_ICU_W_R_unconf_4;
    int dim_new_ICU_pre_conf;
    int dim_new_ICU_pre_conf_1;
    int dim_new_ICU_pre_conf_12;
    int dim_new_ICU_pre_conf_123;
    int dim_new_ICU_pre_conf_2;
    int dim_new_ICU_pre_conf_3;
    int dim_new_ICU_pre_conf_4;
    int dim_new_ICU_pre_unconf;
    int dim_new_ICU_pre_unconf_1;
    int dim_new_ICU_pre_unconf_12;
    int dim_new_ICU_pre_unconf_123;
    int dim_new_ICU_pre_unconf_2;
    int dim_new_ICU_pre_unconf_3;
    int dim_new_ICU_pre_unconf_4;
    int dim_new_IFR_disag_weighted_inc;
    int dim_new_IFR_disag_weighted_inc_1;
    int dim_new_IFR_disag_weighted_inc_12;
    int dim_new_IFR_disag_weighted_inc_2;
    int dim_new_IFR_disag_weighted_inc_3;
    int dim_new_IHR_disag_weighted_inc;
    int dim_new_IHR_disag_weighted_inc_1;
    int dim_new_IHR_disag_weighted_inc_12;
    int dim_new_IHR_disag_weighted_inc_2;
    int dim_new_IHR_disag_weighted_inc_3;
    int dim_new_I_A;
    int dim_new_I_A_1;
    int dim_new_I_A_12;
    int dim_new_I_A_123;
    int dim_new_I_A_2;
    int dim_new_I_A_3;
    int dim_new_I_A_4;
    int dim_new_I_C_1;
    int dim_new_I_C_1_1;
    int dim_new_I_C_1_12;
    int dim_new_I_C_1_123;
    int dim_new_I_C_1_2;
    int dim_new_I_C_1_3;
    int dim_new_I_C_1_4;
    int dim_new_I_C_2;
    int dim_new_I_C_2_1;
    int dim_new_I_C_2_12;
    int dim_new_I_C_2_123;
    int dim_new_I_C_2_2;
    int dim_new_I_C_2_3;
    int dim_new_I_C_2_4;
    int dim_new_I_P;
    int dim_new_I_P_1;
    int dim_new_I_P_12;
    int dim_new_I_P_123;
    int dim_new_I_P_2;
    int dim_new_I_P_3;
    int dim_new_I_P_4;
    int dim_new_I_weighted;
    int dim_new_I_weighted_1;
    int dim_new_I_weighted_12;
    int dim_new_I_weighted_2;
    int dim_new_I_weighted_3;
    int dim_new_R;
    int dim_new_R_1;
    int dim_new_R_12;
    int dim_new_R_2;
    int dim_new_R_3;
    int dim_new_S;
    int dim_new_S_1;
    int dim_new_S_2;
    int dim_new_T_PCR_neg;
    int dim_new_T_PCR_neg_1;
    int dim_new_T_PCR_neg_12;
    int dim_new_T_PCR_neg_2;
    int dim_new_T_PCR_neg_3;
    int dim_new_T_PCR_pos;
    int dim_new_T_PCR_pos_1;
    int dim_new_T_PCR_pos_12;
    int dim_new_T_PCR_pos_123;
    int dim_new_T_PCR_pos_2;
    int dim_new_T_PCR_pos_3;
    int dim_new_T_PCR_pos_4;
    int dim_new_T_PCR_pre;
    int dim_new_T_PCR_pre_1;
    int dim_new_T_PCR_pre_12;
    int dim_new_T_PCR_pre_123;
    int dim_new_T_PCR_pre_2;
    int dim_new_T_PCR_pre_3;
    int dim_new_T_PCR_pre_4;
    int dim_new_T_sero_neg_1;
    int dim_new_T_sero_neg_1_1;
    int dim_new_T_sero_neg_1_12;
    int dim_new_T_sero_neg_1_2;
    int dim_new_T_sero_neg_1_3;
    int dim_new_T_sero_neg_2;
    int dim_new_T_sero_neg_2_1;
    int dim_new_T_sero_neg_2_12;
    int dim_new_T_sero_neg_2_2;
    int dim_new_T_sero_neg_2_3;
    int dim_new_T_sero_pos_1;
    int dim_new_T_sero_pos_1_1;
    int dim_new_T_sero_pos_1_12;
    int dim_new_T_sero_pos_1_123;
    int dim_new_T_sero_pos_1_2;
    int dim_new_T_sero_pos_1_3;
    int dim_new_T_sero_pos_1_4;
    int dim_new_T_sero_pos_2;
    int dim_new_T_sero_pos_2_1;
    int dim_new_T_sero_pos_2_12;
    int dim_new_T_sero_pos_2_123;
    int dim_new_T_sero_pos_2_2;
    int dim_new_T_sero_pos_2_3;
    int dim_new_T_sero_pos_2_4;
    int dim_new_T_sero_pre_1;
    int dim_new_T_sero_pre_1_1;
    int dim_new_T_sero_pre_1_12;
    int dim_new_T_sero_pre_1_123;
    int dim_new_T_sero_pre_1_2;
    int dim_new_T_sero_pre_1_3;
    int dim_new_T_sero_pre_1_4;
    int dim_new_T_sero_pre_2;
    int dim_new_T_sero_pre_2_1;
    int dim_new_T_sero_pre_2_12;
    int dim_new_T_sero_pre_2_123;
    int dim_new_T_sero_pre_2_2;
    int dim_new_T_sero_pre_2_3;
    int dim_new_T_sero_pre_2_4;
    int dim_new_W_D_conf;
    int dim_new_W_D_conf_1;
    int dim_new_W_D_conf_12;
    int dim_new_W_D_conf_123;
    int dim_new_W_D_conf_2;
    int dim_new_W_D_conf_3;
    int dim_new_W_D_conf_4;
    int dim_new_W_D_unconf;
    int dim_new_W_D_unconf_1;
    int dim_new_W_D_unconf_12;
    int dim_new_W_D_unconf_123;
    int dim_new_W_D_unconf_2;
    int dim_new_W_D_unconf_3;
    int dim_new_W_D_unconf_4;
    int dim_new_W_R_conf;
    int dim_new_W_R_conf_1;
    int dim_new_W_R_conf_12;
    int dim_new_W_R_conf_123;
    int dim_new_W_R_conf_2;
    int dim_new_W_R_conf_3;
    int dim_new_W_R_conf_4;
    int dim_new_W_R_unconf;
    int dim_new_W_R_unconf_1;
    int dim_new_W_R_unconf_12;
    int dim_new_W_R_unconf_123;
    int dim_new_W_R_unconf_2;
    int dim_new_W_R_unconf_3;
    int dim_new_W_R_unconf_4;
    int dim_new_hospitalisations_inc_age;
    int dim_new_hospitalisations_inc_strain;
    int dim_new_infections_inc_age;
    int dim_new_infections_inc_strain;
    int dim_p_C;
    int dim_p_C_1;
    int dim_p_C_12;
    int dim_p_C_2;
    int dim_p_C_3;
    int dim_p_C_step;
    int dim_p_C_step_1;
    int dim_p_C_step_2;
    int dim_p_E_next_vacc_class;
    int dim_p_E_next_vacc_class_1;
    int dim_p_E_next_vacc_class_12;
    int dim_p_E_next_vacc_class_123;
    int dim_p_E_next_vacc_class_2;
    int dim_p_E_next_vacc_class_3;
    int dim_p_E_next_vacc_class_4;
    int dim_p_E_progress;
    int dim_p_E_vacc_skip;
    int dim_p_E_vacc_skip_1;
    int dim_p_E_vacc_skip_12;
    int dim_p_E_vacc_skip_123;
    int dim_p_E_vacc_skip_2;
    int dim_p_E_vacc_skip_3;
    int dim_p_E_vacc_skip_4;
    int dim_p_G_D;
    int dim_p_G_D_1;
    int dim_p_G_D_12;
    int dim_p_G_D_2;
    int dim_p_G_D_3;
    int dim_p_G_D_progress;
    int dim_p_G_D_step;
    int dim_p_G_D_step_1;
    int dim_p_G_D_step_2;
    int dim_p_H;
    int dim_p_H_1;
    int dim_p_H_12;
    int dim_p_H_2;
    int dim_p_H_3;
    int dim_p_H_D;
    int dim_p_H_D_1;
    int dim_p_H_D_12;
    int dim_p_H_D_2;
    int dim_p_H_D_3;
    int dim_p_H_D_progress;
    int dim_p_H_D_step;
    int dim_p_H_D_step_1;
    int dim_p_H_D_step_2;
    int dim_p_H_R_progress;
    int dim_p_H_step;
    int dim_p_H_step_1;
    int dim_p_H_step_2;
    int dim_p_ICU;
    int dim_p_ICU_1;
    int dim_p_ICU_12;
    int dim_p_ICU_2;
    int dim_p_ICU_3;
    int dim_p_ICU_D;
    int dim_p_ICU_D_1;
    int dim_p_ICU_D_12;
    int dim_p_ICU_D_2;
    int dim_p_ICU_D_3;
    int dim_p_ICU_D_progress;
    int dim_p_ICU_D_step;
    int dim_p_ICU_D_step_1;
    int dim_p_ICU_D_step_2;
    int dim_p_ICU_W_D_progress;
    int dim_p_ICU_W_R_progress;
    int dim_p_ICU_pre_progress;
    int dim_p_ICU_step;
    int dim_p_ICU_step_1;
    int dim_p_ICU_step_2;
    int dim_p_I_A_next_vacc_class;
    int dim_p_I_A_next_vacc_class_1;
    int dim_p_I_A_next_vacc_class_12;
    int dim_p_I_A_next_vacc_class_123;
    int dim_p_I_A_next_vacc_class_2;
    int dim_p_I_A_next_vacc_class_3;
    int dim_p_I_A_next_vacc_class_4;
    int dim_p_I_A_progress;
    int dim_p_I_A_vacc_skip;
    int dim_p_I_A_vacc_skip_1;
    int dim_p_I_A_vacc_skip_12;
    int dim_p_I_A_vacc_skip_123;
    int dim_p_I_A_vacc_skip_2;
    int dim_p_I_A_vacc_skip_3;
    int dim_p_I_A_vacc_skip_4;
    int dim_p_I_C_1_progress;
    int dim_p_I_C_2_progress;
    int dim_p_I_P_next_vacc_class;
    int dim_p_I_P_next_vacc_class_1;
    int dim_p_I_P_next_vacc_class_12;
    int dim_p_I_P_next_vacc_class_123;
    int dim_p_I_P_next_vacc_class_2;
    int dim_p_I_P_next_vacc_class_3;
    int dim_p_I_P_next_vacc_class_4;
    int dim_p_I_P_progress;
    int dim_p_I_P_vacc_skip;
    int dim_p_I_P_vacc_skip_1;
    int dim_p_I_P_vacc_skip_12;
    int dim_p_I_P_vacc_skip_123;
    int dim_p_I_P_vacc_skip_2;
    int dim_p_I_P_vacc_skip_3;
    int dim_p_I_P_vacc_skip_4;
    int dim_p_R;
    int dim_p_R5_to_E3;
    int dim_p_R5_to_E3_1;
    int dim_p_R5_to_E3_2;
    int dim_p_RS;
    int dim_p_RS_1;
    int dim_p_RS_12;
    int dim_p_RS_2;
    int dim_p_RS_3;
    int dim_p_R_1;
    int dim_p_R_12;
    int dim_p_R_2;
    int dim_p_R_3;
    int dim_p_R_next_vacc_class;
    int dim_p_R_next_vacc_class_1;
    int dim_p_R_next_vacc_class_12;
    int dim_p_R_next_vacc_class_2;
    int dim_p_R_next_vacc_class_3;
    int dim_p_R_progress;
    int dim_p_R_progress_1;
    int dim_p_R_progress_12;
    int dim_p_R_progress_2;
    int dim_p_R_progress_3;
    int dim_p_R_step;
    int dim_p_R_step_1;
    int dim_p_R_step_2;
    int dim_p_R_vacc_skip;
    int dim_p_R_vacc_skip_1;
    int dim_p_R_vacc_skip_12;
    int dim_p_R_vacc_skip_2;
    int dim_p_R_vacc_skip_3;
    int dim_p_SE;
    int dim_p_SE_1;
    int dim_p_SE_2;
    int dim_p_S_next_vacc_class;
    int dim_p_S_next_vacc_class_1;
    int dim_p_S_next_vacc_class_2;
    int dim_p_S_vacc_skip;
    int dim_p_S_vacc_skip_1;
    int dim_p_S_vacc_skip_2;
    int dim_p_T_PCR_pos_progress;
    int dim_p_T_PCR_pre_progress;
    int dim_p_W_D;
    int dim_p_W_D_1;
    int dim_p_W_D_12;
    int dim_p_W_D_2;
    int dim_p_W_D_3;
    int dim_p_W_D_progress;
    int dim_p_W_D_step;
    int dim_p_W_D_step_1;
    int dim_p_W_D_step_2;
    int dim_p_W_R_progress;
    int dim_p_sero_pos_1;
    int dim_p_sero_pos_2;
    int dim_p_star;
    int dim_p_star_step;
    int dim_p_star_step_1;
    int dim_p_star_step_2;
    int dim_prob_strain;
    int dim_protected_R_unvaccinated;
    int dim_protected_R_vaccinated;
    int dim_protected_S_vaccinated;
    int dim_rate_RE_progress;
    int dim_rate_RE_progress_1;
    int dim_rate_RE_progress_12;
    int dim_rate_RE_progress_2;
    int dim_rate_RE_progress_3;
    int dim_rate_R_progress;
    int dim_rate_R_progress_1;
    int dim_rate_R_progress_12;
    int dim_rate_R_progress_2;
    int dim_rate_R_progress_3;
    int dim_recovered;
    int dim_rel_foi_strain;
    int dim_rel_foi_strain_1;
    int dim_rel_foi_strain_12;
    int dim_rel_foi_strain_2;
    int dim_rel_foi_strain_3;
    int dim_rel_gamma_A;
    int dim_rel_gamma_C_1;
    int dim_rel_gamma_C_2;
    int dim_rel_gamma_E;
    int dim_rel_gamma_G_D;
    int dim_rel_gamma_H_D;
    int dim_rel_gamma_H_R;
    int dim_rel_gamma_ICU_D;
    int dim_rel_gamma_ICU_W_D;
    int dim_rel_gamma_ICU_W_R;
    int dim_rel_gamma_ICU_pre;
    int dim_rel_gamma_P;
    int dim_rel_gamma_PCR_pos;
    int dim_rel_gamma_PCR_pre;
    int dim_rel_gamma_W_D;
    int dim_rel_gamma_W_R;
    int dim_rel_infectivity;
    int dim_rel_infectivity_1;
    int dim_rel_infectivity_12;
    int dim_rel_infectivity_2;
    int dim_rel_infectivity_3;
    int dim_rel_p_G_D;
    int dim_rel_p_G_D_1;
    int dim_rel_p_G_D_12;
    int dim_rel_p_G_D_2;
    int dim_rel_p_G_D_3;
    int dim_rel_p_H_D;
    int dim_rel_p_H_D_1;
    int dim_rel_p_H_D_12;
    int dim_rel_p_H_D_2;
    int dim_rel_p_H_D_3;
    int dim_rel_p_ICU;
    int dim_rel_p_ICU_1;
    int dim_rel_p_ICU_12;
    int dim_rel_p_ICU_2;
    int dim_rel_p_ICU_3;
    int dim_rel_p_ICU_D;
    int dim_rel_p_ICU_D_1;
    int dim_rel_p_ICU_D_12;
    int dim_rel_p_ICU_D_2;
    int dim_rel_p_ICU_D_3;
    int dim_rel_p_R;
    int dim_rel_p_R_1;
    int dim_rel_p_R_12;
    int dim_rel_p_R_2;
    int dim_rel_p_R_3;
    int dim_rel_p_W_D;
    int dim_rel_p_W_D_1;
    int dim_rel_p_W_D_12;
    int dim_rel_p_W_D_2;
    int dim_rel_p_W_D_3;
    int dim_rel_p_hosp_if_sympt;
    int dim_rel_p_hosp_if_sympt_1;
    int dim_rel_p_hosp_if_sympt_12;
    int dim_rel_p_hosp_if_sympt_2;
    int dim_rel_p_hosp_if_sympt_3;
    int dim_rel_p_sympt;
    int dim_rel_p_sympt_1;
    int dim_rel_p_sympt_12;
    int dim_rel_p_sympt_2;
    int dim_rel_p_sympt_3;
    int dim_rel_susceptibility;
    int dim_rel_susceptibility_1;
    int dim_rel_susceptibility_12;
    int dim_rel_susceptibility_2;
    int dim_rel_susceptibility_3;
    int dim_s_ij;
    int dim_s_ij_1;
    int dim_s_ij_12;
    int dim_s_ij_2;
    int dim_s_ij_3;
    int dim_seed_value;
    int dim_strain_rel_p_G_D;
    int dim_strain_rel_p_H_D;
    int dim_strain_rel_p_ICU_D;
    int dim_strain_rel_p_W_D;
    int dim_strain_rel_p_hosp_if_sympt;
    int dim_strain_rel_p_icu;
    int dim_strain_rel_p_sympt;
    int dim_strain_seed_value;
    int dim_strain_transmission;
    int dim_tmp_vaccine_n_candidates;
    int dim_tmp_vaccine_n_candidates_1;
    int dim_tmp_vaccine_n_candidates_2;
    int dim_tmp_vaccine_probability;
    int dim_tmp_vaccine_probability_1;
    int dim_tmp_vaccine_probability_2;
    int dim_total_attempted_doses;
    int dim_total_attempted_doses_1;
    int dim_total_attempted_doses_2;
    int dim_vacc_skip_attempted_doses;
    int dim_vacc_skip_attempted_doses_1;
    int dim_vacc_skip_attempted_doses_2;
    int dim_vacc_skip_dose;
    int dim_vacc_skip_dose_inverse;
    int dim_vacc_skip_dose_weight;
    int dim_vacc_skip_from;
    int dim_vacc_skip_n_candidates;
    int dim_vacc_skip_n_candidates_1;
    int dim_vacc_skip_n_candidates_2;
    int dim_vacc_skip_probability;
    int dim_vacc_skip_probability_1;
    int dim_vacc_skip_probability_2;
    int dim_vacc_skip_progression_rate_base;
    int dim_vacc_skip_to;
    int dim_vacc_skipped;
    int dim_vaccine_attempted_doses;
    int dim_vaccine_attempted_doses_1;
    int dim_vaccine_attempted_doses_2;
    int dim_vaccine_dose_step;
    int dim_vaccine_dose_step_1;
    int dim_vaccine_dose_step_12;
    int dim_vaccine_dose_step_2;
    int dim_vaccine_dose_step_3;
    int dim_vaccine_missed_doses;
    int dim_vaccine_missed_doses_1;
    int dim_vaccine_missed_doses_2;
    int dim_vaccine_n_candidates;
    int dim_vaccine_n_candidates_1;
    int dim_vaccine_n_candidates_2;
    int dim_vaccine_probability;
    int dim_vaccine_probability_1;
    int dim_vaccine_probability_2;
    int dim_vaccine_probability_doses;
    int dim_vaccine_probability_doses_1;
    int dim_vaccine_probability_doses_2;
    int dim_vaccine_progression_rate_base;
    int dim_vaccine_progression_rate_base_1;
    int dim_vaccine_progression_rate_base_2;
    int dim_waning_rate;
    real_type dt;
    real_type exp_noise;
    std::vector<real_type> gamma_A_step;
    std::vector<real_type> gamma_C_1_step;
    std::vector<real_type> gamma_C_2_step;
    std::vector<real_type> gamma_E_step;
    std::vector<real_type> gamma_G_D_step;
    std::vector<real_type> gamma_H_D_step;
    std::vector<real_type> gamma_H_R_step;
    std::vector<real_type> gamma_ICU_D_step;
    std::vector<real_type> gamma_ICU_W_D_step;
    std::vector<real_type> gamma_ICU_W_R_step;
    std::vector<real_type> gamma_ICU_pre_step;
    std::vector<real_type> gamma_PCR_pos_step;
    std::vector<real_type> gamma_PCR_pre_step;
    std::vector<real_type> gamma_P_step;
    std::vector<real_type> gamma_U_step;
    std::vector<real_type> gamma_W_D_step;
    std::vector<real_type> gamma_W_R_step;
    real_type gamma_sero_pos_1;
    real_type gamma_sero_pos_2;
    real_type gamma_sero_pre_1;
    real_type gamma_sero_pre_2;
    real_type hosp_transmission;
    std::vector<int> index_dose;
    std::vector<int> index_dose_inverse;
    std::vector<real_type> initial_D;
    real_type initial_D_carehomes_inc;
    real_type initial_D_carehomes_tot;
    real_type initial_D_comm_0_49_inc;
    real_type initial_D_comm_50_54_inc;
    real_type initial_D_comm_55_59_inc;
    real_type initial_D_comm_60_64_inc;
    real_type initial_D_comm_65_69_inc;
    real_type initial_D_comm_70_74_inc;
    real_type initial_D_comm_75_79_inc;
    real_type initial_D_comm_80_plus_inc;
    real_type initial_D_comm_inc;
    real_type initial_D_comm_tot;
    std::vector<real_type> initial_D_hosp;
    real_type initial_D_hosp_0_49_inc;
    real_type initial_D_hosp_0_49_tot;
    real_type initial_D_hosp_50_54_inc;
    real_type initial_D_hosp_50_54_tot;
    real_type initial_D_hosp_55_59_inc;
    real_type initial_D_hosp_55_59_tot;
    real_type initial_D_hosp_60_64_inc;
    real_type initial_D_hosp_60_64_tot;
    real_type initial_D_hosp_65_69_inc;
    real_type initial_D_hosp_65_69_tot;
    real_type initial_D_hosp_70_74_inc;
    real_type initial_D_hosp_70_74_tot;
    real_type initial_D_hosp_75_79_inc;
    real_type initial_D_hosp_75_79_tot;
    real_type initial_D_hosp_80_plus_inc;
    real_type initial_D_hosp_80_plus_tot;
    real_type initial_D_hosp_inc;
    real_type initial_D_hosp_tot;
    real_type initial_D_inc;
    std::vector<real_type> initial_D_non_hosp;
    real_type initial_D_tot;
    std::vector<real_type> initial_E;
    std::vector<real_type> initial_G_D;
    std::vector<real_type> initial_HFR_disag_weighted_inc;
    std::vector<real_type> initial_H_D_conf;
    std::vector<real_type> initial_H_D_unconf;
    std::vector<real_type> initial_H_R_conf;
    std::vector<real_type> initial_H_R_unconf;
    std::vector<real_type> initial_ICU_D_conf;
    std::vector<real_type> initial_ICU_D_unconf;
    std::vector<real_type> initial_ICU_W_D_conf;
    std::vector<real_type> initial_ICU_W_D_unconf;
    std::vector<real_type> initial_ICU_W_R_conf;
    std::vector<real_type> initial_ICU_W_R_unconf;
    std::vector<real_type> initial_ICU_pre_conf;
    std::vector<real_type> initial_ICU_pre_unconf;
    real_type initial_ICU_tot;
    std::vector<real_type> initial_IFR_disag_weighted_inc;
    std::vector<real_type> initial_IHR_disag_weighted_inc;
    std::vector<real_type> initial_I_A;
    std::vector<real_type> initial_I_C_1;
    std::vector<real_type> initial_I_C_2;
    std::vector<real_type> initial_I_P;
    std::vector<real_type> initial_I_weighted;
    std::vector<real_type> initial_N_tot;
    real_type initial_N_tot_PCR;
    real_type initial_N_tot_sero_1;
    real_type initial_N_tot_sero_2;
    std::vector<real_type> initial_R;
    std::vector<real_type> initial_S;
    std::vector<real_type> initial_T_PCR_neg;
    std::vector<real_type> initial_T_PCR_pos;
    std::vector<real_type> initial_T_PCR_pre;
    std::vector<real_type> initial_T_sero_neg_1;
    std::vector<real_type> initial_T_sero_neg_2;
    std::vector<real_type> initial_T_sero_pos_1;
    std::vector<real_type> initial_T_sero_pos_2;
    std::vector<real_type> initial_T_sero_pre_1;
    std::vector<real_type> initial_T_sero_pre_2;
    std::vector<real_type> initial_W_D_conf;
    std::vector<real_type> initial_W_D_unconf;
    std::vector<real_type> initial_W_R_conf;
    std::vector<real_type> initial_W_R_unconf;
    real_type initial_admit_conf_inc;
    real_type initial_all_admission_0_9_conf_inc;
    real_type initial_all_admission_10_19_conf_inc;
    real_type initial_all_admission_20_29_conf_inc;
    real_type initial_all_admission_30_39_conf_inc;
    real_type initial_all_admission_40_49_conf_inc;
    real_type initial_all_admission_50_59_conf_inc;
    real_type initial_all_admission_60_69_conf_inc;
    real_type initial_all_admission_70_79_conf_inc;
    real_type initial_all_admission_80_plus_conf_inc;
    real_type initial_beta_out;
    std::vector<real_type> initial_cum_admit_by_age;
    real_type initial_cum_admit_conf;
    real_type initial_cum_infections;
    std::vector<real_type> initial_cum_infections_disag;
    std::vector<real_type> initial_cum_infections_strain;
    std::vector<real_type> initial_cum_n_E_vacc_skip;
    std::vector<real_type> initial_cum_n_E_vaccinated;
    std::vector<real_type> initial_cum_n_I_A_vacc_skip;
    std::vector<real_type> initial_cum_n_I_A_vaccinated;
    std::vector<real_type> initial_cum_n_I_P_vacc_skip;
    std::vector<real_type> initial_cum_n_I_P_vaccinated;
    std::vector<real_type> initial_cum_n_R_vacc_skip;
    std::vector<real_type> initial_cum_n_R_vaccinated;
    std::vector<real_type> initial_cum_n_S_vacc_skip;
    std::vector<real_type> initial_cum_n_S_vaccinated;
    std::vector<real_type> initial_cum_n_vacc_skip;
    std::vector<real_type> initial_cum_n_vaccinated;
    real_type initial_cum_new_conf;
    real_type initial_cum_sympt_cases;
    real_type initial_cum_sympt_cases_15_24;
    real_type initial_cum_sympt_cases_25_49;
    real_type initial_cum_sympt_cases_50_64;
    real_type initial_cum_sympt_cases_65_79;
    real_type initial_cum_sympt_cases_80_plus;
    real_type initial_cum_sympt_cases_non_variant;
    real_type initial_cum_sympt_cases_non_variant_over25;
    real_type initial_cum_sympt_cases_over25;
    real_type initial_cum_sympt_cases_under15;
    std::vector<real_type> initial_diagnoses_admitted;
    std::vector<real_type> initial_effective_susceptible;
    real_type initial_general_tot;
    real_type initial_hfr;
    std::vector<real_type> initial_hfr_age;
    std::vector<real_type> initial_hfr_strain;
    real_type initial_hosp_tot;
    real_type initial_hospitalisations_inc;
    std::vector<real_type> initial_hospitalisations_inc_age;
    std::vector<real_type> initial_hospitalisations_inc_strain;
    real_type initial_ifr;
    std::vector<real_type> initial_ifr_age;
    std::vector<real_type> initial_ifr_strain;
    real_type initial_ihr;
    std::vector<real_type> initial_ihr_age;
    std::vector<real_type> initial_ihr_strain;
    real_type initial_infections_inc;
    std::vector<real_type> initial_infections_inc_age;
    std::vector<real_type> initial_infections_inc_strain;
    real_type initial_new_conf_inc;
    real_type initial_ons_positives;
    std::vector<real_type> initial_prob_strain;
    std::vector<real_type> initial_protected_R_unvaccinated;
    std::vector<real_type> initial_protected_R_vaccinated;
    std::vector<real_type> initial_protected_S_vaccinated;
    real_type initial_react_25_34_positives;
    real_type initial_react_35_44_positives;
    real_type initial_react_45_54_positives;
    real_type initial_react_55_64_positives;
    real_type initial_react_5_24_positives;
    real_type initial_react_65_plus_positives;
    real_type initial_react_positives;
    std::vector<real_type> initial_recovered;
    real_type initial_sero_pos_1;
    real_type initial_sero_pos_2;
    real_type initial_susceptible;
    real_type initial_sympt_cases_15_24_inc;
    real_type initial_sympt_cases_25_49_inc;
    real_type initial_sympt_cases_50_64_inc;
    real_type initial_sympt_cases_65_79_inc;
    real_type initial_sympt_cases_80_plus_inc;
    real_type initial_sympt_cases_inc;
    real_type initial_sympt_cases_non_variant_inc;
    real_type initial_sympt_cases_non_variant_over25_inc;
    real_type initial_sympt_cases_over25_inc;
    real_type initial_sympt_cases_under15_inc;
    real_type initial_time;
    std::vector<real_type> initial_tmp_vaccine_n_candidates;
    std::vector<real_type> initial_tmp_vaccine_probability;
    std::vector<real_type> initial_vaccine_missed_doses;
    int k_A;
    int k_C_1;
    int k_C_2;
    int k_E;
    int k_G_D;
    int k_H_D;
    int k_H_R;
    int k_ICU_D;
    int k_ICU_W_D;
    int k_ICU_W_R;
    int k_ICU_pre;
    int k_P;
    int k_PCR_pos;
    int k_PCR_pre;
    int k_W_D;
    int k_W_R;
    int k_sero_pos_1;
    int k_sero_pos_2;
    int k_sero_pre_1;
    int k_sero_pre_2;
    real_type kappa_ICU;
    real_type kappa_admitted;
    real_type kappa_all_admission;
    real_type kappa_death;
    real_type kappa_death_carehomes;
    real_type kappa_death_comm;
    real_type kappa_death_hosp;
    real_type kappa_death_non_hosp;
    real_type kappa_diagnoses;
    real_type kappa_general;
    real_type kappa_hosp;
    real_type kappa_pillar2_cases;
    std::vector<real_type> m;
    int n_age_groups;
    int n_doses;
    int n_gamma_A_steps;
    int n_gamma_C_1_steps;
    int n_gamma_C_2_steps;
    int n_gamma_E_steps;
    int n_gamma_G_D_steps;
    int n_gamma_H_D_steps;
    int n_gamma_H_R_steps;
    int n_gamma_ICU_D_steps;
    int n_gamma_ICU_W_D_steps;
    int n_gamma_ICU_W_R_steps;
    int n_gamma_ICU_pre_steps;
    int n_gamma_PCR_pos_steps;
    int n_gamma_PCR_pre_steps;
    int n_gamma_P_steps;
    int n_gamma_U_steps;
    int n_gamma_W_D_steps;
    int n_gamma_W_R_steps;
    int n_groups;
    int n_p_C_steps;
    int n_p_G_D_steps;
    int n_p_H_D_steps;
    int n_p_H_steps;
    int n_p_ICU_D_steps;
    int n_p_ICU_steps;
    int n_p_R_steps;
    int n_p_W_D_steps;
    int n_p_star_steps;
    int n_real_strains;
    int n_strains;
    int n_strains_R;
    int n_vacc_classes;
    int offset_variable_D;
    int offset_variable_D_hosp;
    int offset_variable_D_non_hosp;
    int offset_variable_E;
    int offset_variable_G_D;
    int offset_variable_HFR_disag_weighted_inc;
    int offset_variable_H_D_conf;
    int offset_variable_H_D_unconf;
    int offset_variable_H_R_conf;
    int offset_variable_H_R_unconf;
    int offset_variable_ICU_D_conf;
    int offset_variable_ICU_D_unconf;
    int offset_variable_ICU_W_D_conf;
    int offset_variable_ICU_W_D_unconf;
    int offset_variable_ICU_W_R_conf;
    int offset_variable_ICU_W_R_unconf;
    int offset_variable_ICU_pre_conf;
    int offset_variable_ICU_pre_unconf;
    int offset_variable_IFR_disag_weighted_inc;
    int offset_variable_IHR_disag_weighted_inc;
    int offset_variable_I_A;
    int offset_variable_I_C_1;
    int offset_variable_I_C_2;
    int offset_variable_I_P;
    int offset_variable_I_weighted;
    int offset_variable_N_tot;
    int offset_variable_R;
    int offset_variable_S;
    int offset_variable_T_PCR_neg;
    int offset_variable_T_PCR_pos;
    int offset_variable_T_PCR_pre;
    int offset_variable_T_sero_neg_1;
    int offset_variable_T_sero_neg_2;
    int offset_variable_T_sero_pos_1;
    int offset_variable_T_sero_pos_2;
    int offset_variable_T_sero_pre_1;
    int offset_variable_T_sero_pre_2;
    int offset_variable_W_D_conf;
    int offset_variable_W_D_unconf;
    int offset_variable_W_R_conf;
    int offset_variable_W_R_unconf;
    int offset_variable_cum_admit_by_age;
    int offset_variable_cum_infections_disag;
    int offset_variable_cum_n_E_vacc_skip;
    int offset_variable_cum_n_E_vaccinated;
    int offset_variable_cum_n_I_A_vacc_skip;
    int offset_variable_cum_n_I_A_vaccinated;
    int offset_variable_cum_n_I_P_vacc_skip;
    int offset_variable_cum_n_I_P_vaccinated;
    int offset_variable_cum_n_R_vacc_skip;
    int offset_variable_cum_n_R_vaccinated;
    int offset_variable_cum_n_S_vacc_skip;
    int offset_variable_cum_n_S_vaccinated;
    int offset_variable_cum_n_vacc_skip;
    int offset_variable_cum_n_vaccinated;
    int offset_variable_diagnoses_admitted;
    int offset_variable_effective_susceptible;
    int offset_variable_hfr_age;
    int offset_variable_hfr_strain;
    int offset_variable_hospitalisations_inc_age;
    int offset_variable_hospitalisations_inc_strain;
    int offset_variable_ifr_age;
    int offset_variable_ifr_strain;
    int offset_variable_ihr_age;
    int offset_variable_ihr_strain;
    int offset_variable_infections_inc_age;
    int offset_variable_infections_inc_strain;
    int offset_variable_prob_strain;
    int offset_variable_protected_R_unvaccinated;
    int offset_variable_protected_R_vaccinated;
    int offset_variable_protected_S_vaccinated;
    int offset_variable_recovered;
    int offset_variable_tmp_vaccine_n_candidates;
    int offset_variable_tmp_vaccine_probability;
    int offset_variable_vaccine_missed_doses;
    real_type ons_sensitivity;
    real_type ons_specificity;
    std::vector<real_type> p_C_step;
    std::vector<real_type> p_G_D_step;
    std::vector<real_type> p_H_D_step;
    std::vector<real_type> p_H_step;
    std::vector<real_type> p_ICU_D_step;
    std::vector<real_type> p_ICU_step;
    real_type p_NC_15_24;
    real_type p_NC_25_49;
    real_type p_NC_50_64;
    real_type p_NC_65_79;
    real_type p_NC_80_plus;
    real_type p_NC_under15;
    real_type p_NC_weekend_15_24;
    real_type p_NC_weekend_25_49;
    real_type p_NC_weekend_50_64;
    real_type p_NC_weekend_65_79;
    real_type p_NC_weekend_80_plus;
    real_type p_NC_weekend_under15;
    std::vector<real_type> p_R_step;
    real_type p_T_sero_pos_1_progress;
    real_type p_T_sero_pos_2_progress;
    real_type p_T_sero_pre_1_progress;
    real_type p_T_sero_pre_2_progress;
    std::vector<real_type> p_W_D_step;
    std::vector<real_type> p_sero_pos_1;
    std::vector<real_type> p_sero_pos_2;
    std::vector<real_type> p_star_step;
    real_type phi_ICU;
    real_type phi_admitted;
    real_type phi_all_admission;
    real_type phi_death_carehomes;
    real_type phi_death_comm;
    real_type phi_death_hosp;
    real_type phi_diagnoses;
    real_type phi_general;
    real_type phi_hosp;
    real_type phi_pillar2_cases_15_24;
    real_type phi_pillar2_cases_25_49;
    real_type phi_pillar2_cases_50_64;
    real_type phi_pillar2_cases_65_79;
    real_type phi_pillar2_cases_80_plus;
    real_type phi_pillar2_cases_under15;
    real_type phi_pillar2_cases_weekend_15_24;
    real_type phi_pillar2_cases_weekend_25_49;
    real_type phi_pillar2_cases_weekend_50_64;
    real_type phi_pillar2_cases_weekend_65_79;
    real_type phi_pillar2_cases_weekend_80_plus;
    real_type phi_pillar2_cases_weekend_under15;
    real_type pillar2_sensitivity;
    real_type pillar2_specificity;
    real_type react_sensitivity;
    real_type react_specificity;
    std::vector<real_type> rel_gamma_A;
    std::vector<real_type> rel_gamma_C_1;
    std::vector<real_type> rel_gamma_C_2;
    std::vector<real_type> rel_gamma_E;
    std::vector<real_type> rel_gamma_G_D;
    std::vector<real_type> rel_gamma_H_D;
    std::vector<real_type> rel_gamma_H_R;
    std::vector<real_type> rel_gamma_ICU_D;
    std::vector<real_type> rel_gamma_ICU_W_D;
    std::vector<real_type> rel_gamma_ICU_W_R;
    std::vector<real_type> rel_gamma_ICU_pre;
    std::vector<real_type> rel_gamma_P;
    std::vector<real_type> rel_gamma_PCR_pos;
    std::vector<real_type> rel_gamma_PCR_pre;
    std::vector<real_type> rel_gamma_W_D;
    std::vector<real_type> rel_gamma_W_R;
    std::vector<real_type> rel_infectivity;
    std::vector<real_type> rel_p_G_D;
    std::vector<real_type> rel_p_H_D;
    std::vector<real_type> rel_p_ICU;
    std::vector<real_type> rel_p_ICU_D;
    std::vector<real_type> rel_p_R;
    std::vector<real_type> rel_p_W_D;
    std::vector<real_type> rel_p_hosp_if_sympt;
    std::vector<real_type> rel_p_sympt;
    std::vector<real_type> rel_susceptibility;
    real_type rho_pillar2_tests;
    int seed_age_band;
    real_type seed_step_end;
    real_type seed_step_start;
    std::vector<real_type> seed_value;
    real_type sero_sensitivity_1;
    real_type sero_sensitivity_2;
    real_type sero_specificity_1;
    real_type sero_specificity_2;
    int steps_per_day;
    std::vector<real_type> strain_rel_p_G_D;
    std::vector<real_type> strain_rel_p_H_D;
    std::vector<real_type> strain_rel_p_ICU_D;
    std::vector<real_type> strain_rel_p_W_D;
    std::vector<real_type> strain_rel_p_hosp_if_sympt;
    std::vector<real_type> strain_rel_p_icu;
    std::vector<real_type> strain_rel_p_sympt;
    real_type strain_seed_step_end;
    real_type strain_seed_step_start;
    std::vector<real_type> strain_seed_value;
    std::vector<real_type> strain_transmission;
    std::vector<int> vacc_skip_dose;
    std::vector<int> vacc_skip_dose_inverse;
    std::vector<real_type> vacc_skip_dose_weight;
    std::vector<int> vacc_skip_from;
    std::vector<real_type> vacc_skip_progression_rate_base;
    std::vector<int> vacc_skip_to;
    std::vector<int> vacc_skipped;
    real_type vaccine_catchup_fraction;
    std::vector<real_type> vaccine_dose_step;
    std::vector<real_type> vaccine_progression_rate_base;
    std::vector<real_type> waning_rate;
  };
  struct internal_type {
    std::vector<real_type> HFR_disag;
    std::vector<real_type> IFR_disag;
    std::vector<real_type> IHR_disag;
    std::vector<real_type> I_with_diff_trans;
    std::vector<real_type> aux_H_D_conf;
    std::vector<real_type> aux_H_D_unconf;
    std::vector<real_type> aux_H_R_conf;
    std::vector<real_type> aux_H_R_unconf;
    std::vector<real_type> aux_ICU_D_conf;
    std::vector<real_type> aux_ICU_D_unconf;
    std::vector<real_type> aux_ICU_W_D_conf;
    std::vector<real_type> aux_ICU_W_D_unconf;
    std::vector<real_type> aux_ICU_W_R_conf;
    std::vector<real_type> aux_ICU_W_R_unconf;
    std::vector<real_type> aux_ICU_pre_conf;
    std::vector<real_type> aux_ICU_pre_unconf;
    std::vector<real_type> aux_W_D_conf;
    std::vector<real_type> aux_W_D_unconf;
    std::vector<real_type> aux_W_R_conf;
    std::vector<real_type> aux_W_R_unconf;
    std::vector<real_type> delta_D_hosp;
    std::vector<real_type> delta_D_hosp_disag;
    std::vector<real_type> delta_D_non_hosp;
    std::vector<real_type> delta_D_non_hosp_disag;
    std::vector<real_type> delta_diagnoses_admitted;
    std::vector<real_type> delta_hospitalisations_age;
    std::vector<real_type> delta_hospitalisations_strain;
    std::vector<real_type> delta_infections;
    std::vector<real_type> delta_infections_age;
    std::vector<real_type> delta_infections_strain;
    std::vector<real_type> eff_sus_R;
    std::vector<real_type> eff_sus_S;
    std::vector<real_type> gamma_A;
    std::vector<real_type> gamma_C_1;
    std::vector<real_type> gamma_C_2;
    std::vector<real_type> gamma_E;
    std::vector<real_type> gamma_G_D;
    std::vector<real_type> gamma_H_D;
    std::vector<real_type> gamma_H_R;
    std::vector<real_type> gamma_ICU_D;
    std::vector<real_type> gamma_ICU_W_D;
    std::vector<real_type> gamma_ICU_W_R;
    std::vector<real_type> gamma_ICU_pre;
    std::vector<real_type> gamma_P;
    std::vector<real_type> gamma_PCR_pos;
    std::vector<real_type> gamma_PCR_pre;
    std::vector<real_type> gamma_W_D;
    std::vector<real_type> gamma_W_R;
    std::vector<real_type> lambda;
    std::vector<real_type> lambda_susc;
    std::vector<real_type> n_EI_A;
    std::vector<real_type> n_EI_P;
    std::vector<real_type> n_E_next_vacc_class;
    std::vector<real_type> n_E_progress;
    std::vector<real_type> n_E_vacc_skip;
    std::vector<real_type> n_E_vaccinated;
    std::vector<real_type> n_G_D_progress;
    std::vector<real_type> n_H_D_conf_progress;
    std::vector<real_type> n_H_D_unconf_progress;
    std::vector<real_type> n_H_D_unconf_to_conf;
    std::vector<real_type> n_H_R_conf_progress;
    std::vector<real_type> n_H_R_unconf_progress;
    std::vector<real_type> n_H_R_unconf_to_conf;
    std::vector<real_type> n_ICU_D_conf_progress;
    std::vector<real_type> n_ICU_D_unconf_progress;
    std::vector<real_type> n_ICU_D_unconf_to_conf;
    std::vector<real_type> n_ICU_W_D_conf_progress;
    std::vector<real_type> n_ICU_W_D_unconf_progress;
    std::vector<real_type> n_ICU_W_D_unconf_to_conf;
    std::vector<real_type> n_ICU_W_R_conf_progress;
    std::vector<real_type> n_ICU_W_R_unconf_progress;
    std::vector<real_type> n_ICU_W_R_unconf_to_conf;
    std::vector<real_type> n_ICU_pre_conf_progress;
    std::vector<real_type> n_ICU_pre_conf_to_ICU_D_conf;
    std::vector<real_type> n_ICU_pre_conf_to_ICU_W_D_conf;
    std::vector<real_type> n_ICU_pre_conf_to_ICU_W_R_conf;
    std::vector<real_type> n_ICU_pre_unconf_progress;
    std::vector<real_type> n_ICU_pre_unconf_to_ICU_D_unconf;
    std::vector<real_type> n_ICU_pre_unconf_to_ICU_W_D_unconf;
    std::vector<real_type> n_ICU_pre_unconf_to_ICU_W_R_unconf;
    std::vector<real_type> n_ICU_pre_unconf_to_conf;
    std::vector<real_type> n_I_A_next_vacc_class;
    std::vector<real_type> n_I_A_progress;
    std::vector<real_type> n_I_A_vacc_skip;
    std::vector<real_type> n_I_A_vaccinated;
    std::vector<real_type> n_I_C_1_progress;
    std::vector<real_type> n_I_C_2_progress;
    std::vector<real_type> n_I_C_2_to_G_D;
    std::vector<real_type> n_I_C_2_to_H_D;
    std::vector<real_type> n_I_C_2_to_H_D_conf;
    std::vector<real_type> n_I_C_2_to_H_R;
    std::vector<real_type> n_I_C_2_to_H_R_conf;
    std::vector<real_type> n_I_C_2_to_ICU_pre;
    std::vector<real_type> n_I_C_2_to_ICU_pre_conf;
    std::vector<real_type> n_I_C_2_to_RS;
    std::vector<real_type> n_I_C_2_to_hosp;
    std::vector<real_type> n_I_P_next_vacc_class;
    std::vector<real_type> n_I_P_progress;
    std::vector<real_type> n_I_P_vacc_skip;
    std::vector<real_type> n_I_P_vaccinated;
    std::vector<real_type> n_R5_to_E3;
    std::vector<real_type> n_RE;
    std::vector<real_type> n_RS;
    std::vector<real_type> n_R_next_vacc_class;
    std::vector<real_type> n_R_progress;
    std::vector<real_type> n_R_tmp;
    std::vector<real_type> n_R_vacc_skip;
    std::vector<real_type> n_R_vaccinated;
    std::vector<real_type> n_S_next_vacc_class;
    std::vector<real_type> n_S_progress;
    std::vector<real_type> n_S_progress_tot;
    std::vector<real_type> n_S_vacc_skip;
    std::vector<real_type> n_S_vaccinated;
    std::vector<real_type> n_T_PCR_pos_progress;
    std::vector<real_type> n_T_PCR_pre_progress;
    std::vector<real_type> n_T_sero_pos_1_progress;
    std::vector<real_type> n_T_sero_pos_2_progress;
    std::vector<real_type> n_T_sero_pre_1_progress;
    std::vector<real_type> n_T_sero_pre_1_to_T_sero_pos_1;
    std::vector<real_type> n_T_sero_pre_2_progress;
    std::vector<real_type> n_T_sero_pre_2_to_T_sero_pos_2;
    std::vector<real_type> n_W_D_conf_progress;
    std::vector<real_type> n_W_D_unconf_progress;
    std::vector<real_type> n_W_D_unconf_to_conf;
    std::vector<real_type> n_W_R_conf_progress;
    std::vector<real_type> n_W_R_unconf_progress;
    std::vector<real_type> n_W_R_unconf_to_conf;
    std::vector<real_type> n_com_to_T_sero_pre;
    std::vector<real_type> n_hosp_non_ICU;
    std::vector<real_type> n_infected_to_R;
    std::vector<real_type> n_infected_to_S;
    std::vector<real_type> n_infection_end;
    std::vector<real_type> n_vacc_skip;
    std::vector<real_type> n_vaccinated;
    std::vector<real_type> new_E;
    std::vector<real_type> new_G_D;
    std::vector<real_type> new_HFR_disag_weighted_inc;
    std::vector<real_type> new_H_D_conf;
    std::vector<real_type> new_H_D_unconf;
    std::vector<real_type> new_H_R_conf;
    std::vector<real_type> new_H_R_unconf;
    std::vector<real_type> new_ICU_D_conf;
    std::vector<real_type> new_ICU_D_unconf;
    std::vector<real_type> new_ICU_W_D_conf;
    std::vector<real_type> new_ICU_W_D_unconf;
    std::vector<real_type> new_ICU_W_R_conf;
    std::vector<real_type> new_ICU_W_R_unconf;
    std::vector<real_type> new_ICU_pre_conf;
    std::vector<real_type> new_ICU_pre_unconf;
    std::vector<real_type> new_IFR_disag_weighted_inc;
    std::vector<real_type> new_IHR_disag_weighted_inc;
    std::vector<real_type> new_I_A;
    std::vector<real_type> new_I_C_1;
    std::vector<real_type> new_I_C_2;
    std::vector<real_type> new_I_P;
    std::vector<real_type> new_I_weighted;
    std::vector<real_type> new_R;
    std::vector<real_type> new_S;
    std::vector<real_type> new_T_PCR_neg;
    std::vector<real_type> new_T_PCR_pos;
    std::vector<real_type> new_T_PCR_pre;
    std::vector<real_type> new_T_sero_neg_1;
    std::vector<real_type> new_T_sero_neg_2;
    std::vector<real_type> new_T_sero_pos_1;
    std::vector<real_type> new_T_sero_pos_2;
    std::vector<real_type> new_T_sero_pre_1;
    std::vector<real_type> new_T_sero_pre_2;
    std::vector<real_type> new_W_D_conf;
    std::vector<real_type> new_W_D_unconf;
    std::vector<real_type> new_W_R_conf;
    std::vector<real_type> new_W_R_unconf;
    std::vector<real_type> new_hospitalisations_inc_age;
    std::vector<real_type> new_hospitalisations_inc_strain;
    std::vector<real_type> new_infections_inc_age;
    std::vector<real_type> new_infections_inc_strain;
    std::vector<real_type> p_C;
    std::vector<real_type> p_E_next_vacc_class;
    std::vector<real_type> p_E_progress;
    std::vector<real_type> p_E_vacc_skip;
    std::vector<real_type> p_G_D;
    std::vector<real_type> p_G_D_progress;
    std::vector<real_type> p_H;
    std::vector<real_type> p_H_D;
    std::vector<real_type> p_H_D_progress;
    std::vector<real_type> p_H_R_progress;
    std::vector<real_type> p_ICU;
    std::vector<real_type> p_ICU_D;
    std::vector<real_type> p_ICU_D_progress;
    std::vector<real_type> p_ICU_W_D_progress;
    std::vector<real_type> p_ICU_W_R_progress;
    std::vector<real_type> p_ICU_pre_progress;
    std::vector<real_type> p_I_A_next_vacc_class;
    std::vector<real_type> p_I_A_progress;
    std::vector<real_type> p_I_A_vacc_skip;
    std::vector<real_type> p_I_C_1_progress;
    std::vector<real_type> p_I_C_2_progress;
    std::vector<real_type> p_I_P_next_vacc_class;
    std::vector<real_type> p_I_P_progress;
    std::vector<real_type> p_I_P_vacc_skip;
    std::vector<real_type> p_R;
    std::vector<real_type> p_R5_to_E3;
    std::vector<real_type> p_RS;
    std::vector<real_type> p_R_next_vacc_class;
    std::vector<real_type> p_R_progress;
    std::vector<real_type> p_R_vacc_skip;
    std::vector<real_type> p_SE;
    std::vector<real_type> p_S_next_vacc_class;
    std::vector<real_type> p_S_vacc_skip;
    std::vector<real_type> p_T_PCR_pos_progress;
    std::vector<real_type> p_T_PCR_pre_progress;
    std::vector<real_type> p_W_D;
    std::vector<real_type> p_W_D_progress;
    std::vector<real_type> p_W_R_progress;
    std::vector<real_type> p_star;
    std::vector<real_type> rate_RE_progress;
    std::vector<real_type> rate_R_progress;
    std::vector<real_type> rel_foi_strain;
    std::vector<real_type> s_ij;
    std::vector<real_type> total_attempted_doses;
    std::vector<real_type> vacc_skip_attempted_doses;
    std::vector<real_type> vacc_skip_n_candidates;
    std::vector<real_type> vacc_skip_probability;
    std::vector<real_type> vaccine_attempted_doses;
    std::vector<real_type> vaccine_n_candidates;
    std::vector<real_type> vaccine_probability;
    std::vector<real_type> vaccine_probability_doses;
  };
  lancelot(const dust::pars_type<lancelot>& pars) :
    shared(pars.shared), internal(pars.internal) {
  }
  size_t size() const {
    return shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_PCR_pos + shared->dim_T_PCR_pre + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_T_sero_pos_1 + shared->dim_T_sero_pos_2 + shared->dim_T_sero_pre_1 + shared->dim_T_sero_pre_2 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  }
  std::vector<real_type> initial(size_t step, rng_state_type& rng_state) {
    std::vector<real_type> state(shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_PCR_pos + shared->dim_T_PCR_pre + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_T_sero_pos_1 + shared->dim_T_sero_pos_2 + shared->dim_T_sero_pre_1 + shared->dim_T_sero_pre_2 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90);
    state[0] = shared->initial_time;
    state[1] = shared->initial_admit_conf_inc;
    state[2] = shared->initial_new_conf_inc;
    state[3] = shared->initial_all_admission_0_9_conf_inc;
    state[4] = shared->initial_all_admission_10_19_conf_inc;
    state[5] = shared->initial_all_admission_20_29_conf_inc;
    state[6] = shared->initial_all_admission_30_39_conf_inc;
    state[7] = shared->initial_all_admission_40_49_conf_inc;
    state[8] = shared->initial_all_admission_50_59_conf_inc;
    state[9] = shared->initial_all_admission_60_69_conf_inc;
    state[10] = shared->initial_all_admission_70_79_conf_inc;
    state[11] = shared->initial_all_admission_80_plus_conf_inc;
    state[12] = shared->initial_cum_infections;
    state[13] = shared->initial_infections_inc;
    state[14] = shared->initial_hospitalisations_inc;
    state[15] = shared->initial_cum_admit_conf;
    state[16] = shared->initial_cum_new_conf;
    state[17] = shared->initial_beta_out;
    state[18] = shared->initial_N_tot_sero_1;
    state[19] = shared->initial_N_tot_sero_2;
    state[20] = shared->initial_N_tot_PCR;
    state[21] = shared->initial_ICU_tot;
    state[22] = shared->initial_general_tot;
    state[23] = shared->initial_hosp_tot;
    state[24] = shared->initial_D_hosp_tot;
    state[25] = shared->initial_D_hosp_0_49_tot;
    state[26] = shared->initial_D_hosp_50_54_tot;
    state[27] = shared->initial_D_hosp_55_59_tot;
    state[28] = shared->initial_D_hosp_60_64_tot;
    state[29] = shared->initial_D_hosp_65_69_tot;
    state[30] = shared->initial_D_hosp_70_74_tot;
    state[31] = shared->initial_D_hosp_75_79_tot;
    state[32] = shared->initial_D_hosp_80_plus_tot;
    state[33] = shared->initial_D_comm_tot;
    state[34] = shared->initial_D_comm_inc;
    state[35] = shared->initial_D_comm_0_49_inc;
    state[36] = shared->initial_D_comm_50_54_inc;
    state[37] = shared->initial_D_comm_55_59_inc;
    state[38] = shared->initial_D_comm_60_64_inc;
    state[39] = shared->initial_D_comm_65_69_inc;
    state[40] = shared->initial_D_comm_70_74_inc;
    state[41] = shared->initial_D_comm_75_79_inc;
    state[42] = shared->initial_D_comm_80_plus_inc;
    state[43] = shared->initial_D_carehomes_tot;
    state[44] = shared->initial_D_carehomes_inc;
    state[45] = shared->initial_D_tot;
    state[46] = shared->initial_D_inc;
    state[47] = shared->initial_D_hosp_inc;
    state[48] = shared->initial_D_hosp_0_49_inc;
    state[49] = shared->initial_D_hosp_50_54_inc;
    state[50] = shared->initial_D_hosp_55_59_inc;
    state[51] = shared->initial_D_hosp_60_64_inc;
    state[52] = shared->initial_D_hosp_65_69_inc;
    state[53] = shared->initial_D_hosp_70_74_inc;
    state[54] = shared->initial_D_hosp_75_79_inc;
    state[55] = shared->initial_D_hosp_80_plus_inc;
    state[56] = shared->initial_sero_pos_1;
    state[57] = shared->initial_sero_pos_2;
    state[58] = shared->initial_cum_sympt_cases;
    state[59] = shared->initial_cum_sympt_cases_non_variant;
    state[60] = shared->initial_cum_sympt_cases_over25;
    state[61] = shared->initial_cum_sympt_cases_non_variant_over25;
    state[62] = shared->initial_cum_sympt_cases_under15;
    state[63] = shared->initial_cum_sympt_cases_15_24;
    state[64] = shared->initial_cum_sympt_cases_25_49;
    state[65] = shared->initial_cum_sympt_cases_50_64;
    state[66] = shared->initial_cum_sympt_cases_65_79;
    state[67] = shared->initial_cum_sympt_cases_80_plus;
    state[68] = shared->initial_sympt_cases_inc;
    state[69] = shared->initial_sympt_cases_non_variant_inc;
    state[70] = shared->initial_sympt_cases_over25_inc;
    state[71] = shared->initial_sympt_cases_non_variant_over25_inc;
    state[72] = shared->initial_sympt_cases_under15_inc;
    state[73] = shared->initial_sympt_cases_15_24_inc;
    state[74] = shared->initial_sympt_cases_25_49_inc;
    state[75] = shared->initial_sympt_cases_50_64_inc;
    state[76] = shared->initial_sympt_cases_65_79_inc;
    state[77] = shared->initial_sympt_cases_80_plus_inc;
    state[78] = shared->initial_ons_positives;
    state[79] = shared->initial_react_positives;
    state[80] = shared->initial_react_5_24_positives;
    state[81] = shared->initial_react_25_34_positives;
    state[82] = shared->initial_react_35_44_positives;
    state[83] = shared->initial_react_45_54_positives;
    state[84] = shared->initial_react_55_64_positives;
    state[85] = shared->initial_react_65_plus_positives;
    state[86] = shared->initial_susceptible;
    state[87] = shared->initial_ihr;
    state[88] = shared->initial_hfr;
    state[89] = shared->initial_ifr;
    std::copy(shared->initial_cum_infections_strain.begin(), shared->initial_cum_infections_strain.end(), state.begin() + 90);
    std::copy(shared->initial_infections_inc_strain.begin(), shared->initial_infections_inc_strain.end(), state.begin() + shared->offset_variable_infections_inc_strain);
    std::copy(shared->initial_infections_inc_age.begin(), shared->initial_infections_inc_age.end(), state.begin() + shared->offset_variable_infections_inc_age);
    std::copy(shared->initial_hospitalisations_inc_strain.begin(), shared->initial_hospitalisations_inc_strain.end(), state.begin() + shared->offset_variable_hospitalisations_inc_strain);
    std::copy(shared->initial_hospitalisations_inc_age.begin(), shared->initial_hospitalisations_inc_age.end(), state.begin() + shared->offset_variable_hospitalisations_inc_age);
    std::copy(shared->initial_D_non_hosp.begin(), shared->initial_D_non_hosp.end(), state.begin() + shared->offset_variable_D_non_hosp);
    std::copy(shared->initial_cum_admit_by_age.begin(), shared->initial_cum_admit_by_age.end(), state.begin() + shared->offset_variable_cum_admit_by_age);
    std::copy(shared->initial_N_tot.begin(), shared->initial_N_tot.end(), state.begin() + shared->offset_variable_N_tot);
    std::copy(shared->initial_prob_strain.begin(), shared->initial_prob_strain.end(), state.begin() + shared->offset_variable_prob_strain);
    std::copy(shared->initial_effective_susceptible.begin(), shared->initial_effective_susceptible.end(), state.begin() + shared->offset_variable_effective_susceptible);
    std::copy(shared->initial_recovered.begin(), shared->initial_recovered.end(), state.begin() + shared->offset_variable_recovered);
    std::copy(shared->initial_protected_S_vaccinated.begin(), shared->initial_protected_S_vaccinated.end(), state.begin() + shared->offset_variable_protected_S_vaccinated);
    std::copy(shared->initial_protected_R_unvaccinated.begin(), shared->initial_protected_R_unvaccinated.end(), state.begin() + shared->offset_variable_protected_R_unvaccinated);
    std::copy(shared->initial_protected_R_vaccinated.begin(), shared->initial_protected_R_vaccinated.end(), state.begin() + shared->offset_variable_protected_R_vaccinated);
    std::copy(shared->initial_ifr_strain.begin(), shared->initial_ifr_strain.end(), state.begin() + shared->offset_variable_ifr_strain);
    std::copy(shared->initial_ihr_strain.begin(), shared->initial_ihr_strain.end(), state.begin() + shared->offset_variable_ihr_strain);
    std::copy(shared->initial_hfr_strain.begin(), shared->initial_hfr_strain.end(), state.begin() + shared->offset_variable_hfr_strain);
    std::copy(shared->initial_ifr_age.begin(), shared->initial_ifr_age.end(), state.begin() + shared->offset_variable_ifr_age);
    std::copy(shared->initial_ihr_age.begin(), shared->initial_ihr_age.end(), state.begin() + shared->offset_variable_ihr_age);
    std::copy(shared->initial_hfr_age.begin(), shared->initial_hfr_age.end(), state.begin() + shared->offset_variable_hfr_age);
    std::copy(shared->initial_cum_n_S_vaccinated.begin(), shared->initial_cum_n_S_vaccinated.end(), state.begin() + shared->offset_variable_cum_n_S_vaccinated);
    std::copy(shared->initial_cum_n_E_vaccinated.begin(), shared->initial_cum_n_E_vaccinated.end(), state.begin() + shared->offset_variable_cum_n_E_vaccinated);
    std::copy(shared->initial_cum_n_I_A_vaccinated.begin(), shared->initial_cum_n_I_A_vaccinated.end(), state.begin() + shared->offset_variable_cum_n_I_A_vaccinated);
    std::copy(shared->initial_cum_n_I_P_vaccinated.begin(), shared->initial_cum_n_I_P_vaccinated.end(), state.begin() + shared->offset_variable_cum_n_I_P_vaccinated);
    std::copy(shared->initial_cum_n_R_vaccinated.begin(), shared->initial_cum_n_R_vaccinated.end(), state.begin() + shared->offset_variable_cum_n_R_vaccinated);
    std::copy(shared->initial_cum_n_vaccinated.begin(), shared->initial_cum_n_vaccinated.end(), state.begin() + shared->offset_variable_cum_n_vaccinated);
    std::copy(shared->initial_cum_n_S_vacc_skip.begin(), shared->initial_cum_n_S_vacc_skip.end(), state.begin() + shared->offset_variable_cum_n_S_vacc_skip);
    std::copy(shared->initial_cum_n_E_vacc_skip.begin(), shared->initial_cum_n_E_vacc_skip.end(), state.begin() + shared->offset_variable_cum_n_E_vacc_skip);
    std::copy(shared->initial_cum_n_I_A_vacc_skip.begin(), shared->initial_cum_n_I_A_vacc_skip.end(), state.begin() + shared->offset_variable_cum_n_I_A_vacc_skip);
    std::copy(shared->initial_cum_n_I_P_vacc_skip.begin(), shared->initial_cum_n_I_P_vacc_skip.end(), state.begin() + shared->offset_variable_cum_n_I_P_vacc_skip);
    std::copy(shared->initial_cum_n_R_vacc_skip.begin(), shared->initial_cum_n_R_vacc_skip.end(), state.begin() + shared->offset_variable_cum_n_R_vacc_skip);
    std::copy(shared->initial_cum_n_vacc_skip.begin(), shared->initial_cum_n_vacc_skip.end(), state.begin() + shared->offset_variable_cum_n_vacc_skip);
    std::copy(shared->initial_diagnoses_admitted.begin(), shared->initial_diagnoses_admitted.end(), state.begin() + shared->offset_variable_diagnoses_admitted);
    std::copy(shared->initial_cum_infections_disag.begin(), shared->initial_cum_infections_disag.end(), state.begin() + shared->offset_variable_cum_infections_disag);
    std::copy(shared->initial_D.begin(), shared->initial_D.end(), state.begin() + shared->offset_variable_D);
    std::copy(shared->initial_S.begin(), shared->initial_S.end(), state.begin() + shared->offset_variable_S);
    std::copy(shared->initial_D_hosp.begin(), shared->initial_D_hosp.end(), state.begin() + shared->offset_variable_D_hosp);
    std::copy(shared->initial_vaccine_missed_doses.begin(), shared->initial_vaccine_missed_doses.end(), state.begin() + shared->offset_variable_vaccine_missed_doses);
    std::copy(shared->initial_tmp_vaccine_n_candidates.begin(), shared->initial_tmp_vaccine_n_candidates.end(), state.begin() + shared->offset_variable_tmp_vaccine_n_candidates);
    std::copy(shared->initial_tmp_vaccine_probability.begin(), shared->initial_tmp_vaccine_probability.end(), state.begin() + shared->offset_variable_tmp_vaccine_probability);
    std::copy(shared->initial_T_sero_neg_1.begin(), shared->initial_T_sero_neg_1.end(), state.begin() + shared->offset_variable_T_sero_neg_1);
    std::copy(shared->initial_T_sero_neg_2.begin(), shared->initial_T_sero_neg_2.end(), state.begin() + shared->offset_variable_T_sero_neg_2);
    std::copy(shared->initial_R.begin(), shared->initial_R.end(), state.begin() + shared->offset_variable_R);
    std::copy(shared->initial_T_PCR_neg.begin(), shared->initial_T_PCR_neg.end(), state.begin() + shared->offset_variable_T_PCR_neg);
    std::copy(shared->initial_I_weighted.begin(), shared->initial_I_weighted.end(), state.begin() + shared->offset_variable_I_weighted);
    std::copy(shared->initial_IHR_disag_weighted_inc.begin(), shared->initial_IHR_disag_weighted_inc.end(), state.begin() + shared->offset_variable_IHR_disag_weighted_inc);
    std::copy(shared->initial_HFR_disag_weighted_inc.begin(), shared->initial_HFR_disag_weighted_inc.end(), state.begin() + shared->offset_variable_HFR_disag_weighted_inc);
    std::copy(shared->initial_IFR_disag_weighted_inc.begin(), shared->initial_IFR_disag_weighted_inc.end(), state.begin() + shared->offset_variable_IFR_disag_weighted_inc);
    std::copy(shared->initial_E.begin(), shared->initial_E.end(), state.begin() + shared->offset_variable_E);
    std::copy(shared->initial_I_A.begin(), shared->initial_I_A.end(), state.begin() + shared->offset_variable_I_A);
    std::copy(shared->initial_I_P.begin(), shared->initial_I_P.end(), state.begin() + shared->offset_variable_I_P);
    std::copy(shared->initial_I_C_1.begin(), shared->initial_I_C_1.end(), state.begin() + shared->offset_variable_I_C_1);
    std::copy(shared->initial_I_C_2.begin(), shared->initial_I_C_2.end(), state.begin() + shared->offset_variable_I_C_2);
    std::copy(shared->initial_G_D.begin(), shared->initial_G_D.end(), state.begin() + shared->offset_variable_G_D);
    std::copy(shared->initial_ICU_pre_unconf.begin(), shared->initial_ICU_pre_unconf.end(), state.begin() + shared->offset_variable_ICU_pre_unconf);
    std::copy(shared->initial_ICU_pre_conf.begin(), shared->initial_ICU_pre_conf.end(), state.begin() + shared->offset_variable_ICU_pre_conf);
    std::copy(shared->initial_H_R_unconf.begin(), shared->initial_H_R_unconf.end(), state.begin() + shared->offset_variable_H_R_unconf);
    std::copy(shared->initial_H_R_conf.begin(), shared->initial_H_R_conf.end(), state.begin() + shared->offset_variable_H_R_conf);
    std::copy(shared->initial_H_D_unconf.begin(), shared->initial_H_D_unconf.end(), state.begin() + shared->offset_variable_H_D_unconf);
    std::copy(shared->initial_H_D_conf.begin(), shared->initial_H_D_conf.end(), state.begin() + shared->offset_variable_H_D_conf);
    std::copy(shared->initial_ICU_W_R_unconf.begin(), shared->initial_ICU_W_R_unconf.end(), state.begin() + shared->offset_variable_ICU_W_R_unconf);
    std::copy(shared->initial_ICU_W_R_conf.begin(), shared->initial_ICU_W_R_conf.end(), state.begin() + shared->offset_variable_ICU_W_R_conf);
    std::copy(shared->initial_ICU_W_D_unconf.begin(), shared->initial_ICU_W_D_unconf.end(), state.begin() + shared->offset_variable_ICU_W_D_unconf);
    std::copy(shared->initial_ICU_W_D_conf.begin(), shared->initial_ICU_W_D_conf.end(), state.begin() + shared->offset_variable_ICU_W_D_conf);
    std::copy(shared->initial_ICU_D_unconf.begin(), shared->initial_ICU_D_unconf.end(), state.begin() + shared->offset_variable_ICU_D_unconf);
    std::copy(shared->initial_ICU_D_conf.begin(), shared->initial_ICU_D_conf.end(), state.begin() + shared->offset_variable_ICU_D_conf);
    std::copy(shared->initial_W_R_unconf.begin(), shared->initial_W_R_unconf.end(), state.begin() + shared->offset_variable_W_R_unconf);
    std::copy(shared->initial_W_R_conf.begin(), shared->initial_W_R_conf.end(), state.begin() + shared->offset_variable_W_R_conf);
    std::copy(shared->initial_W_D_unconf.begin(), shared->initial_W_D_unconf.end(), state.begin() + shared->offset_variable_W_D_unconf);
    std::copy(shared->initial_W_D_conf.begin(), shared->initial_W_D_conf.end(), state.begin() + shared->offset_variable_W_D_conf);
    std::copy(shared->initial_T_sero_pre_1.begin(), shared->initial_T_sero_pre_1.end(), state.begin() + shared->offset_variable_T_sero_pre_1);
    std::copy(shared->initial_T_sero_pos_1.begin(), shared->initial_T_sero_pos_1.end(), state.begin() + shared->offset_variable_T_sero_pos_1);
    std::copy(shared->initial_T_sero_pre_2.begin(), shared->initial_T_sero_pre_2.end(), state.begin() + shared->offset_variable_T_sero_pre_2);
    std::copy(shared->initial_T_sero_pos_2.begin(), shared->initial_T_sero_pos_2.end(), state.begin() + shared->offset_variable_T_sero_pos_2);
    std::copy(shared->initial_T_PCR_pre.begin(), shared->initial_T_PCR_pre.end(), state.begin() + shared->offset_variable_T_PCR_pre);
    std::copy(shared->initial_T_PCR_pos.begin(), shared->initial_T_PCR_pos.end(), state.begin() + shared->offset_variable_T_PCR_pos);
    return state;
  }
  void update(size_t step, const real_type * state, rng_state_type& rng_state, real_type * state_next) {
    const real_type * cum_n_S_vaccinated = state + shared->offset_variable_cum_n_S_vaccinated;
    const real_type * cum_n_E_vaccinated = state + shared->offset_variable_cum_n_E_vaccinated;
    const real_type * cum_n_I_A_vaccinated = state + shared->offset_variable_cum_n_I_A_vaccinated;
    const real_type * cum_n_I_P_vaccinated = state + shared->offset_variable_cum_n_I_P_vaccinated;
    const real_type * cum_n_R_vaccinated = state + shared->offset_variable_cum_n_R_vaccinated;
    const real_type * cum_n_vaccinated = state + shared->offset_variable_cum_n_vaccinated;
    const real_type * cum_n_S_vacc_skip = state + shared->offset_variable_cum_n_S_vacc_skip;
    const real_type * cum_n_E_vacc_skip = state + shared->offset_variable_cum_n_E_vacc_skip;
    const real_type * cum_n_I_A_vacc_skip = state + shared->offset_variable_cum_n_I_A_vacc_skip;
    const real_type * cum_n_I_P_vacc_skip = state + shared->offset_variable_cum_n_I_P_vacc_skip;
    const real_type * cum_n_R_vacc_skip = state + shared->offset_variable_cum_n_R_vacc_skip;
    const real_type * cum_n_vacc_skip = state + shared->offset_variable_cum_n_vacc_skip;
    const real_type * S = state + shared->offset_variable_S;
    const real_type * E = state + shared->offset_variable_E;
    const real_type * I_A = state + shared->offset_variable_I_A;
    const real_type * I_P = state + shared->offset_variable_I_P;
    const real_type * I_C_1 = state + shared->offset_variable_I_C_1;
    const real_type * I_C_2 = state + shared->offset_variable_I_C_2;
    const real_type * G_D = state + shared->offset_variable_G_D;
    const real_type * ICU_pre_unconf = state + shared->offset_variable_ICU_pre_unconf;
    const real_type * ICU_pre_conf = state + shared->offset_variable_ICU_pre_conf;
    const real_type * H_R_unconf = state + shared->offset_variable_H_R_unconf;
    const real_type * H_R_conf = state + shared->offset_variable_H_R_conf;
    const real_type * H_D_unconf = state + shared->offset_variable_H_D_unconf;
    const real_type * H_D_conf = state + shared->offset_variable_H_D_conf;
    const real_type * ICU_W_R_unconf = state + shared->offset_variable_ICU_W_R_unconf;
    const real_type * ICU_W_R_conf = state + shared->offset_variable_ICU_W_R_conf;
    const real_type * ICU_W_D_unconf = state + shared->offset_variable_ICU_W_D_unconf;
    const real_type * ICU_W_D_conf = state + shared->offset_variable_ICU_W_D_conf;
    const real_type * ICU_D_unconf = state + shared->offset_variable_ICU_D_unconf;
    const real_type * ICU_D_conf = state + shared->offset_variable_ICU_D_conf;
    const real_type * W_R_unconf = state + shared->offset_variable_W_R_unconf;
    const real_type * W_R_conf = state + shared->offset_variable_W_R_conf;
    const real_type * W_D_unconf = state + shared->offset_variable_W_D_unconf;
    const real_type * W_D_conf = state + shared->offset_variable_W_D_conf;
    const real_type * T_sero_pre_1 = state + shared->offset_variable_T_sero_pre_1;
    const real_type * T_sero_pos_1 = state + shared->offset_variable_T_sero_pos_1;
    const real_type * T_sero_neg_1 = state + shared->offset_variable_T_sero_neg_1;
    const real_type * T_sero_pre_2 = state + shared->offset_variable_T_sero_pre_2;
    const real_type * T_sero_pos_2 = state + shared->offset_variable_T_sero_pos_2;
    const real_type * T_sero_neg_2 = state + shared->offset_variable_T_sero_neg_2;
    const real_type * R = state + shared->offset_variable_R;
    const real_type * D_hosp = state + shared->offset_variable_D_hosp;
    const real_type * D_non_hosp = state + shared->offset_variable_D_non_hosp;
    const real_type * T_PCR_pre = state + shared->offset_variable_T_PCR_pre;
    const real_type * T_PCR_pos = state + shared->offset_variable_T_PCR_pos;
    const real_type * T_PCR_neg = state + shared->offset_variable_T_PCR_neg;
    const real_type cum_admit_conf = state[15];
    const real_type cum_new_conf = state[16];
    const real_type * diagnoses_admitted = state + shared->offset_variable_diagnoses_admitted;
    const real_type * cum_infections_disag = state + shared->offset_variable_cum_infections_disag;
    const real_type admit_conf_inc = state[1];
    const real_type new_conf_inc = state[2];
    const real_type all_admission_0_9_conf_inc = state[3];
    const real_type all_admission_10_19_conf_inc = state[4];
    const real_type all_admission_20_29_conf_inc = state[5];
    const real_type all_admission_30_39_conf_inc = state[6];
    const real_type all_admission_40_49_conf_inc = state[7];
    const real_type all_admission_50_59_conf_inc = state[8];
    const real_type all_admission_60_69_conf_inc = state[9];
    const real_type all_admission_70_79_conf_inc = state[10];
    const real_type all_admission_80_plus_conf_inc = state[11];
    const real_type * cum_admit_by_age = state + shared->offset_variable_cum_admit_by_age;
    const real_type cum_infections = state[12];
    const real_type infections_inc = state[13];
    const real_type * cum_infections_strain = state + 90;
    const real_type * infections_inc_strain = state + shared->offset_variable_infections_inc_strain;
    const real_type * infections_inc_age = state + shared->offset_variable_infections_inc_age;
    const real_type hospitalisations_inc = state[14];
    const real_type * hospitalisations_inc_strain = state + shared->offset_variable_hospitalisations_inc_strain;
    const real_type * hospitalisations_inc_age = state + shared->offset_variable_hospitalisations_inc_age;
    const real_type * D = state + shared->offset_variable_D;
    const real_type D_hosp_tot = state[24];
    const real_type D_hosp_0_49_tot = state[25];
    const real_type D_hosp_50_54_tot = state[26];
    const real_type D_hosp_55_59_tot = state[27];
    const real_type D_hosp_60_64_tot = state[28];
    const real_type D_hosp_65_69_tot = state[29];
    const real_type D_hosp_70_74_tot = state[30];
    const real_type D_hosp_75_79_tot = state[31];
    const real_type D_hosp_80_plus_tot = state[32];
    const real_type D_comm_tot = state[33];
    const real_type D_comm_inc = state[34];
    const real_type D_comm_0_49_inc = state[35];
    const real_type D_comm_50_54_inc = state[36];
    const real_type D_comm_55_59_inc = state[37];
    const real_type D_comm_60_64_inc = state[38];
    const real_type D_comm_65_69_inc = state[39];
    const real_type D_comm_70_74_inc = state[40];
    const real_type D_comm_75_79_inc = state[41];
    const real_type D_comm_80_plus_inc = state[42];
    const real_type D_carehomes_tot = state[43];
    const real_type D_carehomes_inc = state[44];
    const real_type D_tot = state[45];
    const real_type D_inc = state[46];
    const real_type D_hosp_inc = state[47];
    const real_type D_hosp_0_49_inc = state[48];
    const real_type D_hosp_50_54_inc = state[49];
    const real_type D_hosp_55_59_inc = state[50];
    const real_type D_hosp_60_64_inc = state[51];
    const real_type D_hosp_65_69_inc = state[52];
    const real_type D_hosp_70_74_inc = state[53];
    const real_type D_hosp_75_79_inc = state[54];
    const real_type D_hosp_80_plus_inc = state[55];
    const real_type cum_sympt_cases = state[58];
    const real_type cum_sympt_cases_non_variant = state[59];
    const real_type cum_sympt_cases_over25 = state[60];
    const real_type cum_sympt_cases_non_variant_over25 = state[61];
    const real_type cum_sympt_cases_under15 = state[62];
    const real_type cum_sympt_cases_15_24 = state[63];
    const real_type cum_sympt_cases_25_49 = state[64];
    const real_type cum_sympt_cases_50_64 = state[65];
    const real_type cum_sympt_cases_65_79 = state[66];
    const real_type cum_sympt_cases_80_plus = state[67];
    const real_type sympt_cases_inc = state[68];
    const real_type sympt_cases_non_variant_inc = state[69];
    const real_type sympt_cases_over25_inc = state[70];
    const real_type sympt_cases_non_variant_over25_inc = state[71];
    const real_type sympt_cases_under15_inc = state[72];
    const real_type sympt_cases_15_24_inc = state[73];
    const real_type sympt_cases_25_49_inc = state[74];
    const real_type sympt_cases_50_64_inc = state[75];
    const real_type sympt_cases_65_79_inc = state[76];
    const real_type sympt_cases_80_plus_inc = state[77];
    const real_type * vaccine_missed_doses = state + shared->offset_variable_vaccine_missed_doses;
    const real_type * IHR_disag_weighted_inc = state + shared->offset_variable_IHR_disag_weighted_inc;
    const real_type * HFR_disag_weighted_inc = state + shared->offset_variable_HFR_disag_weighted_inc;
    const real_type * IFR_disag_weighted_inc = state + shared->offset_variable_IFR_disag_weighted_inc;
    state_next[20] = odin_sum1<real_type>(S, 0, shared->dim_S) + odin_sum1<real_type>(T_PCR_pre, 0, shared->dim_T_PCR_pre) + odin_sum1<real_type>(T_PCR_pos, 0, shared->dim_T_PCR_pos) + odin_sum1<real_type>(T_PCR_neg, 0, shared->dim_T_PCR_neg);
    state_next[18] = odin_sum1<real_type>(S, 0, shared->dim_S) + odin_sum1<real_type>(T_sero_pre_1, 0, shared->dim_T_sero_pre_1) + odin_sum1<real_type>(T_sero_pos_1, 0, shared->dim_T_sero_pos_1) + odin_sum1<real_type>(T_sero_neg_1, 0, shared->dim_T_sero_neg_1) + odin_sum1<real_type>(E, 0, shared->dim_E);
    state_next[19] = odin_sum1<real_type>(S, 0, shared->dim_S) + odin_sum1<real_type>(T_sero_pre_2, 0, shared->dim_T_sero_pre_2) + odin_sum1<real_type>(T_sero_pos_2, 0, shared->dim_T_sero_pos_2) + odin_sum1<real_type>(T_sero_neg_2, 0, shared->dim_T_sero_neg_2) + odin_sum1<real_type>(E, 0, shared->dim_E);
    real_type beta = (static_cast<int>(step) >= shared->dim_beta_step ? shared->beta_step[shared->dim_beta_step - 1] : shared->beta_step[step + 1 - 1]);
    state_next[0] = (step + 1) * shared->dt;
    for (int i = 1; i <= shared->dim_gamma_A; ++i) {
      internal.gamma_A[i - 1] = (static_cast<int>(step) >= shared->n_gamma_A_steps ? shared->gamma_A_step[shared->n_gamma_A_steps - 1] * shared->rel_gamma_A[i - 1] : shared->gamma_A_step[step + 1 - 1] * shared->rel_gamma_A[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_C_1; ++i) {
      internal.gamma_C_1[i - 1] = (static_cast<int>(step) >= shared->n_gamma_C_1_steps ? shared->gamma_C_1_step[shared->n_gamma_C_1_steps - 1] * shared->rel_gamma_C_1[i - 1] : shared->gamma_C_1_step[step + 1 - 1] * shared->rel_gamma_C_1[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_C_2; ++i) {
      internal.gamma_C_2[i - 1] = (static_cast<int>(step) >= shared->n_gamma_C_2_steps ? shared->gamma_C_2_step[shared->n_gamma_C_2_steps - 1] * shared->rel_gamma_C_2[i - 1] : shared->gamma_C_2_step[step + 1 - 1] * shared->rel_gamma_C_2[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_E; ++i) {
      internal.gamma_E[i - 1] = (static_cast<int>(step) >= shared->n_gamma_E_steps ? shared->gamma_E_step[shared->n_gamma_E_steps - 1] * shared->rel_gamma_E[i - 1] : shared->gamma_E_step[step + 1 - 1] * shared->rel_gamma_E[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_G_D; ++i) {
      internal.gamma_G_D[i - 1] = (static_cast<int>(step) >= shared->n_gamma_G_D_steps ? shared->gamma_G_D_step[shared->n_gamma_G_D_steps - 1] * shared->rel_gamma_G_D[i - 1] : shared->gamma_G_D_step[step + 1 - 1] * shared->rel_gamma_G_D[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_H_D; ++i) {
      internal.gamma_H_D[i - 1] = (static_cast<int>(step) >= shared->n_gamma_H_D_steps ? shared->gamma_H_D_step[shared->n_gamma_H_D_steps - 1] * shared->rel_gamma_H_D[i - 1] : shared->gamma_H_D_step[step + 1 - 1] * shared->rel_gamma_H_D[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_H_R; ++i) {
      internal.gamma_H_R[i - 1] = (static_cast<int>(step) >= shared->n_gamma_H_R_steps ? shared->gamma_H_R_step[shared->n_gamma_H_R_steps - 1] * shared->rel_gamma_H_R[i - 1] : shared->gamma_H_R_step[step + 1 - 1] * shared->rel_gamma_H_R[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_ICU_D; ++i) {
      internal.gamma_ICU_D[i - 1] = (static_cast<int>(step) >= shared->n_gamma_ICU_D_steps ? shared->gamma_ICU_D_step[shared->n_gamma_ICU_D_steps - 1] * shared->rel_gamma_ICU_D[i - 1] : shared->gamma_ICU_D_step[step + 1 - 1] * shared->rel_gamma_ICU_D[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_ICU_W_D; ++i) {
      internal.gamma_ICU_W_D[i - 1] = (static_cast<int>(step) >= shared->n_gamma_ICU_W_D_steps ? shared->gamma_ICU_W_D_step[shared->n_gamma_ICU_W_D_steps - 1] * shared->rel_gamma_ICU_W_D[i - 1] : shared->gamma_ICU_W_D_step[step + 1 - 1] * shared->rel_gamma_ICU_W_D[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_ICU_W_R; ++i) {
      internal.gamma_ICU_W_R[i - 1] = (static_cast<int>(step) >= shared->n_gamma_ICU_W_R_steps ? shared->gamma_ICU_W_R_step[shared->n_gamma_ICU_W_R_steps - 1] * shared->rel_gamma_ICU_W_R[i - 1] : shared->gamma_ICU_W_R_step[step + 1 - 1] * shared->rel_gamma_ICU_W_R[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_ICU_pre; ++i) {
      internal.gamma_ICU_pre[i - 1] = (static_cast<int>(step) >= shared->n_gamma_ICU_pre_steps ? shared->gamma_ICU_pre_step[shared->n_gamma_ICU_pre_steps - 1] * shared->rel_gamma_ICU_pre[i - 1] : shared->gamma_ICU_pre_step[step + 1 - 1] * shared->rel_gamma_ICU_pre[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_P; ++i) {
      internal.gamma_P[i - 1] = (static_cast<int>(step) >= shared->n_gamma_P_steps ? shared->gamma_P_step[shared->n_gamma_P_steps - 1] * shared->rel_gamma_P[i - 1] : shared->gamma_P_step[step + 1 - 1] * shared->rel_gamma_P[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_PCR_pos; ++i) {
      internal.gamma_PCR_pos[i - 1] = (static_cast<int>(step) >= shared->n_gamma_PCR_pos_steps ? shared->gamma_PCR_pos_step[shared->n_gamma_PCR_pos_steps - 1] * shared->rel_gamma_PCR_pos[i - 1] : shared->gamma_PCR_pos_step[step + 1 - 1] * shared->rel_gamma_PCR_pos[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_PCR_pre; ++i) {
      internal.gamma_PCR_pre[i - 1] = (static_cast<int>(step) >= shared->n_gamma_PCR_pre_steps ? shared->gamma_PCR_pre_step[shared->n_gamma_PCR_pre_steps - 1] * shared->rel_gamma_PCR_pre[i - 1] : shared->gamma_PCR_pre_step[step + 1 - 1] * shared->rel_gamma_PCR_pre[i - 1]);
    }
    real_type gamma_U = (static_cast<int>(step) >= shared->n_gamma_U_steps ? shared->gamma_U_step[shared->n_gamma_U_steps - 1] : shared->gamma_U_step[step + 1 - 1]);
    for (int i = 1; i <= shared->dim_gamma_W_D; ++i) {
      internal.gamma_W_D[i - 1] = (static_cast<int>(step) >= shared->n_gamma_W_D_steps ? shared->gamma_W_D_step[shared->n_gamma_W_D_steps - 1] * shared->rel_gamma_W_D[i - 1] : shared->gamma_W_D_step[step + 1 - 1] * shared->rel_gamma_W_D[i - 1]);
    }
    for (int i = 1; i <= shared->dim_gamma_W_R; ++i) {
      internal.gamma_W_R[i - 1] = (static_cast<int>(step) >= shared->n_gamma_W_R_steps ? shared->gamma_W_R_step[shared->n_gamma_W_R_steps - 1] * shared->rel_gamma_W_R[i - 1] : shared->gamma_W_R_step[step + 1 - 1] * shared->rel_gamma_W_R[i - 1]);
    }
    real_type seed_rate = (step >= shared->seed_step_start && step < shared->seed_step_end ? shared->seed_value[static_cast<int>(step - shared->seed_step_start + 1) - 1] : 0);
    real_type strain_seed_rate = (step >= shared->strain_seed_step_start && step < shared->strain_seed_step_end ? shared->strain_seed_value[static_cast<int>(step - shared->strain_seed_step_start + 1) - 1] : 0);
    for (int i = 1; i <= shared->dim_N_tot; ++i) {
      state_next[shared->offset_variable_N_tot + i - 1] = odin_sum2<real_type>(S, i - 1, i, 0, shared->dim_S_2, shared->dim_S_1) + odin_sum3<real_type>(R, i - 1, i, 0, shared->dim_R_2, 0, shared->dim_R_3, shared->dim_R_1, shared->dim_R_12) + odin_sum2<real_type>(D_hosp, i - 1, i, 0, shared->dim_D_hosp_2, shared->dim_D_hosp_1) + odin_sum4<real_type>(E, i - 1, i, 0, shared->dim_E_2, 0, shared->dim_E_3, 0, shared->dim_E_4, shared->dim_E_1, shared->dim_E_12, shared->dim_E_123) + odin_sum4<real_type>(I_A, i - 1, i, 0, shared->dim_I_A_2, 0, shared->dim_I_A_3, 0, shared->dim_I_A_4, shared->dim_I_A_1, shared->dim_I_A_12, shared->dim_I_A_123) + odin_sum4<real_type>(I_P, i - 1, i, 0, shared->dim_I_P_2, 0, shared->dim_I_P_3, 0, shared->dim_I_P_4, shared->dim_I_P_1, shared->dim_I_P_12, shared->dim_I_P_123) + odin_sum4<real_type>(I_C_1, i - 1, i, 0, shared->dim_I_C_1_2, 0, shared->dim_I_C_1_3, 0, shared->dim_I_C_1_4, shared->dim_I_C_1_1, shared->dim_I_C_1_12, shared->dim_I_C_1_123) + odin_sum4<real_type>(I_C_2, i - 1, i, 0, shared->dim_I_C_2_2, 0, shared->dim_I_C_2_3, 0, shared->dim_I_C_2_4, shared->dim_I_C_2_1, shared->dim_I_C_2_12, shared->dim_I_C_2_123) + odin_sum4<real_type>(ICU_pre_conf, i - 1, i, 0, shared->dim_ICU_pre_conf_2, 0, shared->dim_ICU_pre_conf_3, 0, shared->dim_ICU_pre_conf_4, shared->dim_ICU_pre_conf_1, shared->dim_ICU_pre_conf_12, shared->dim_ICU_pre_conf_123) + odin_sum4<real_type>(ICU_pre_unconf, i - 1, i, 0, shared->dim_ICU_pre_unconf_2, 0, shared->dim_ICU_pre_unconf_3, 0, shared->dim_ICU_pre_unconf_4, shared->dim_ICU_pre_unconf_1, shared->dim_ICU_pre_unconf_12, shared->dim_ICU_pre_unconf_123) + odin_sum4<real_type>(H_R_conf, i - 1, i, 0, shared->dim_H_R_conf_2, 0, shared->dim_H_R_conf_3, 0, shared->dim_H_R_conf_4, shared->dim_H_R_conf_1, shared->dim_H_R_conf_12, shared->dim_H_R_conf_123) + odin_sum4<real_type>(H_R_unconf, i - 1, i, 0, shared->dim_H_R_unconf_2, 0, shared->dim_H_R_unconf_3, 0, shared->dim_H_R_unconf_4, shared->dim_H_R_unconf_1, shared->dim_H_R_unconf_12, shared->dim_H_R_unconf_123) + odin_sum4<real_type>(H_D_conf, i - 1, i, 0, shared->dim_H_D_conf_2, 0, shared->dim_H_D_conf_3, 0, shared->dim_H_D_conf_4, shared->dim_H_D_conf_1, shared->dim_H_D_conf_12, shared->dim_H_D_conf_123) + odin_sum4<real_type>(H_D_unconf, i - 1, i, 0, shared->dim_H_D_unconf_2, 0, shared->dim_H_D_unconf_3, 0, shared->dim_H_D_unconf_4, shared->dim_H_D_unconf_1, shared->dim_H_D_unconf_12, shared->dim_H_D_unconf_123) + odin_sum4<real_type>(ICU_W_R_conf, i - 1, i, 0, shared->dim_ICU_W_R_conf_2, 0, shared->dim_ICU_W_R_conf_3, 0, shared->dim_ICU_W_R_conf_4, shared->dim_ICU_W_R_conf_1, shared->dim_ICU_W_R_conf_12, shared->dim_ICU_W_R_conf_123) + odin_sum4<real_type>(ICU_W_R_unconf, i - 1, i, 0, shared->dim_ICU_W_R_unconf_2, 0, shared->dim_ICU_W_R_unconf_3, 0, shared->dim_ICU_W_R_unconf_4, shared->dim_ICU_W_R_unconf_1, shared->dim_ICU_W_R_unconf_12, shared->dim_ICU_W_R_unconf_123) + odin_sum4<real_type>(ICU_W_D_conf, i - 1, i, 0, shared->dim_ICU_W_D_conf_2, 0, shared->dim_ICU_W_D_conf_3, 0, shared->dim_ICU_W_D_conf_4, shared->dim_ICU_W_D_conf_1, shared->dim_ICU_W_D_conf_12, shared->dim_ICU_W_D_conf_123) + odin_sum4<real_type>(ICU_W_D_unconf, i - 1, i, 0, shared->dim_ICU_W_D_unconf_2, 0, shared->dim_ICU_W_D_unconf_3, 0, shared->dim_ICU_W_D_unconf_4, shared->dim_ICU_W_D_unconf_1, shared->dim_ICU_W_D_unconf_12, shared->dim_ICU_W_D_unconf_123) + odin_sum4<real_type>(ICU_D_conf, i - 1, i, 0, shared->dim_ICU_D_conf_2, 0, shared->dim_ICU_D_conf_3, 0, shared->dim_ICU_D_conf_4, shared->dim_ICU_D_conf_1, shared->dim_ICU_D_conf_12, shared->dim_ICU_D_conf_123) + odin_sum4<real_type>(ICU_D_unconf, i - 1, i, 0, shared->dim_ICU_D_unconf_2, 0, shared->dim_ICU_D_unconf_3, 0, shared->dim_ICU_D_unconf_4, shared->dim_ICU_D_unconf_1, shared->dim_ICU_D_unconf_12, shared->dim_ICU_D_unconf_123) + odin_sum4<real_type>(W_R_conf, i - 1, i, 0, shared->dim_W_R_conf_2, 0, shared->dim_W_R_conf_3, 0, shared->dim_W_R_conf_4, shared->dim_W_R_conf_1, shared->dim_W_R_conf_12, shared->dim_W_R_conf_123) + odin_sum4<real_type>(W_R_unconf, i - 1, i, 0, shared->dim_W_R_unconf_2, 0, shared->dim_W_R_unconf_3, 0, shared->dim_W_R_unconf_4, shared->dim_W_R_unconf_1, shared->dim_W_R_unconf_12, shared->dim_W_R_unconf_123) + odin_sum4<real_type>(W_D_conf, i - 1, i, 0, shared->dim_W_D_conf_2, 0, shared->dim_W_D_conf_3, 0, shared->dim_W_D_conf_4, shared->dim_W_D_conf_1, shared->dim_W_D_conf_12, shared->dim_W_D_conf_123) + odin_sum4<real_type>(W_D_unconf, i - 1, i, 0, shared->dim_W_D_unconf_2, 0, shared->dim_W_D_unconf_3, 0, shared->dim_W_D_unconf_4, shared->dim_W_D_unconf_1, shared->dim_W_D_unconf_12, shared->dim_W_D_unconf_123) + odin_sum4<real_type>(G_D, i - 1, i, 0, shared->dim_G_D_2, 0, shared->dim_G_D_3, 0, shared->dim_G_D_4, shared->dim_G_D_1, shared->dim_G_D_12, shared->dim_G_D_123) + D_non_hosp[i - 1];
    }
    state_next[17] = beta;
    for (int i = 1; i <= shared->dim_I_with_diff_trans_1; ++i) {
      for (int j = 1; j <= shared->dim_I_with_diff_trans_2; ++j) {
        for (int k = 1; k <= shared->dim_I_with_diff_trans_3; ++k) {
          internal.I_with_diff_trans[i - 1 + shared->dim_I_with_diff_trans_1 * (j - 1) + shared->dim_I_with_diff_trans_12 * (k - 1)] = shared->rel_infectivity[shared->dim_rel_infectivity_12 * (k - 1) + shared->dim_rel_infectivity_1 * (j - 1) + i - 1] * shared->strain_transmission[j - 1] * (shared->I_A_transmission * odin_sum4<real_type>(I_A, i - 1, i, j - 1, j, 0, shared->dim_I_A_3, k - 1, k, shared->dim_I_A_1, shared->dim_I_A_12, shared->dim_I_A_123) + shared->I_P_transmission * odin_sum4<real_type>(I_P, i - 1, i, j - 1, j, 0, shared->dim_I_P_3, k - 1, k, shared->dim_I_P_1, shared->dim_I_P_12, shared->dim_I_P_123) + shared->I_C_1_transmission * odin_sum4<real_type>(I_C_1, i - 1, i, j - 1, j, 0, shared->dim_I_C_1_3, k - 1, k, shared->dim_I_C_1_1, shared->dim_I_C_1_12, shared->dim_I_C_1_123) + shared->I_C_2_transmission * odin_sum4<real_type>(I_C_2, i - 1, i, j - 1, j, 0, shared->dim_I_C_2_3, k - 1, k, shared->dim_I_C_2_1, shared->dim_I_C_2_12, shared->dim_I_C_2_123) + shared->hosp_transmission * (odin_sum4<real_type>(ICU_pre_unconf, i - 1, i, j - 1, j, 0, shared->dim_ICU_pre_unconf_3, k - 1, k, shared->dim_ICU_pre_unconf_1, shared->dim_ICU_pre_unconf_12, shared->dim_ICU_pre_unconf_123) + odin_sum4<real_type>(ICU_pre_conf, i - 1, i, j - 1, j, 0, shared->dim_ICU_pre_conf_3, k - 1, k, shared->dim_ICU_pre_conf_1, shared->dim_ICU_pre_conf_12, shared->dim_ICU_pre_conf_123) + odin_sum4<real_type>(H_R_unconf, i - 1, i, j - 1, j, 0, shared->dim_H_R_unconf_3, k - 1, k, shared->dim_H_R_unconf_1, shared->dim_H_R_unconf_12, shared->dim_H_R_unconf_123) + odin_sum4<real_type>(H_R_conf, i - 1, i, j - 1, j, 0, shared->dim_H_R_conf_3, k - 1, k, shared->dim_H_R_conf_1, shared->dim_H_R_conf_12, shared->dim_H_R_conf_123) + odin_sum4<real_type>(H_D_unconf, i - 1, i, j - 1, j, 0, shared->dim_H_D_unconf_3, k - 1, k, shared->dim_H_D_unconf_1, shared->dim_H_D_unconf_12, shared->dim_H_D_unconf_123) + odin_sum4<real_type>(H_D_conf, i - 1, i, j - 1, j, 0, shared->dim_H_D_conf_3, k - 1, k, shared->dim_H_D_conf_1, shared->dim_H_D_conf_12, shared->dim_H_D_conf_123)) + shared->ICU_transmission * (odin_sum4<real_type>(ICU_W_R_unconf, i - 1, i, j - 1, j, 0, shared->dim_ICU_W_R_unconf_3, k - 1, k, shared->dim_ICU_W_R_unconf_1, shared->dim_ICU_W_R_unconf_12, shared->dim_ICU_W_R_unconf_123) + odin_sum4<real_type>(ICU_W_R_conf, i - 1, i, j - 1, j, 0, shared->dim_ICU_W_R_conf_3, k - 1, k, shared->dim_ICU_W_R_conf_1, shared->dim_ICU_W_R_conf_12, shared->dim_ICU_W_R_conf_123) + odin_sum4<real_type>(ICU_W_D_unconf, i - 1, i, j - 1, j, 0, shared->dim_ICU_W_D_unconf_3, k - 1, k, shared->dim_ICU_W_D_unconf_1, shared->dim_ICU_W_D_unconf_12, shared->dim_ICU_W_D_unconf_123) + odin_sum4<real_type>(ICU_W_D_conf, i - 1, i, j - 1, j, 0, shared->dim_ICU_W_D_conf_3, k - 1, k, shared->dim_ICU_W_D_conf_1, shared->dim_ICU_W_D_conf_12, shared->dim_ICU_W_D_conf_123) + odin_sum4<real_type>(ICU_D_unconf, i - 1, i, j - 1, j, 0, shared->dim_ICU_D_unconf_3, k - 1, k, shared->dim_ICU_D_unconf_1, shared->dim_ICU_D_unconf_12, shared->dim_ICU_D_unconf_123) + odin_sum4<real_type>(ICU_D_conf, i - 1, i, j - 1, j, 0, shared->dim_ICU_D_conf_3, k - 1, k, shared->dim_ICU_D_conf_1, shared->dim_ICU_D_conf_12, shared->dim_ICU_D_conf_123)) + shared->G_D_transmission * odin_sum4<real_type>(G_D, i - 1, i, j - 1, j, 0, shared->dim_G_D_3, k - 1, k, shared->dim_G_D_1, shared->dim_G_D_12, shared->dim_G_D_123));
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_sero_pos_1_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_sero_pos_1_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_sero_pos_1_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_T_sero_pos_1_progress_4; ++l) {
            internal.n_T_sero_pos_1_progress[i - 1 + shared->dim_n_T_sero_pos_1_progress_1 * (j - 1) + shared->dim_n_T_sero_pos_1_progress_12 * (k - 1) + shared->dim_n_T_sero_pos_1_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, T_sero_pos_1[shared->dim_T_sero_pos_1_123 * (l - 1) + shared->dim_T_sero_pos_1_12 * (k - 1) + shared->dim_T_sero_pos_1_1 * (j - 1) + i - 1], shared->p_T_sero_pos_1_progress);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_sero_pos_2_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_sero_pos_2_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_sero_pos_2_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_T_sero_pos_2_progress_4; ++l) {
            internal.n_T_sero_pos_2_progress[i - 1 + shared->dim_n_T_sero_pos_2_progress_1 * (j - 1) + shared->dim_n_T_sero_pos_2_progress_12 * (k - 1) + shared->dim_n_T_sero_pos_2_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, T_sero_pos_2[shared->dim_T_sero_pos_2_123 * (l - 1) + shared->dim_T_sero_pos_2_12 * (k - 1) + shared->dim_T_sero_pos_2_1 * (j - 1) + i - 1], shared->p_T_sero_pos_2_progress);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_sero_pre_1_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_sero_pre_1_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_sero_pre_1_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_T_sero_pre_1_progress_4; ++l) {
            internal.n_T_sero_pre_1_progress[i - 1 + shared->dim_n_T_sero_pre_1_progress_1 * (j - 1) + shared->dim_n_T_sero_pre_1_progress_12 * (k - 1) + shared->dim_n_T_sero_pre_1_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, T_sero_pre_1[shared->dim_T_sero_pre_1_123 * (l - 1) + shared->dim_T_sero_pre_1_12 * (k - 1) + shared->dim_T_sero_pre_1_1 * (j - 1) + i - 1], shared->p_T_sero_pre_1_progress);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_sero_pre_2_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_sero_pre_2_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_sero_pre_2_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_T_sero_pre_2_progress_4; ++l) {
            internal.n_T_sero_pre_2_progress[i - 1 + shared->dim_n_T_sero_pre_2_progress_1 * (j - 1) + shared->dim_n_T_sero_pre_2_progress_12 * (k - 1) + shared->dim_n_T_sero_pre_2_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, T_sero_pre_2[shared->dim_T_sero_pre_2_123 * (l - 1) + shared->dim_T_sero_pre_2_12 * (k - 1) + shared->dim_T_sero_pre_2_1 * (j - 1) + i - 1], shared->p_T_sero_pre_2_progress);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_C_1; ++i) {
      for (int j = 1; j <= shared->dim_p_C_2; ++j) {
        for (int k = 1; k <= shared->dim_p_C_3; ++k) {
          internal.p_C[i - 1 + shared->dim_p_C_1 * (j - 1) + shared->dim_p_C_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_C_steps ? dust::math::min(shared->p_C_step[shared->dim_p_C_step_1 * (i - 1) + shared->n_p_C_steps - 1] * shared->rel_p_sympt[shared->dim_rel_p_sympt_12 * (k - 1) + shared->dim_rel_p_sympt_1 * (j - 1) + i - 1] * shared->strain_rel_p_sympt[j - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_C_step[shared->dim_p_C_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_sympt[shared->dim_rel_p_sympt_12 * (k - 1) + shared->dim_rel_p_sympt_1 * (j - 1) + i - 1] * shared->strain_rel_p_sympt[j - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_E_progress; ++i) {
      internal.p_E_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_E[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_G_D_1; ++i) {
      for (int j = 1; j <= shared->dim_p_G_D_2; ++j) {
        for (int k = 1; k <= shared->dim_p_G_D_3; ++k) {
          internal.p_G_D[i - 1 + shared->dim_p_G_D_1 * (j - 1) + shared->dim_p_G_D_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_G_D_steps ? dust::math::min(shared->p_G_D_step[shared->dim_p_G_D_step_1 * (i - 1) + shared->n_p_G_D_steps - 1] * shared->rel_p_G_D[shared->dim_rel_p_G_D_12 * (k - 1) + shared->dim_rel_p_G_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_G_D[j - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_G_D_step[shared->dim_p_G_D_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_G_D[shared->dim_rel_p_G_D_12 * (k - 1) + shared->dim_rel_p_G_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_G_D[j - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_G_D_progress; ++i) {
      internal.p_G_D_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_G_D[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_H_1; ++i) {
      for (int j = 1; j <= shared->dim_p_H_2; ++j) {
        for (int k = 1; k <= shared->dim_p_H_3; ++k) {
          internal.p_H[i - 1 + shared->dim_p_H_1 * (j - 1) + shared->dim_p_H_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_H_steps ? dust::math::min(shared->p_H_step[shared->dim_p_H_step_1 * (i - 1) + shared->n_p_H_steps - 1] * shared->rel_p_hosp_if_sympt[shared->dim_rel_p_hosp_if_sympt_12 * (k - 1) + shared->dim_rel_p_hosp_if_sympt_1 * (j - 1) + i - 1] * shared->strain_rel_p_hosp_if_sympt[j - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_H_step[shared->dim_p_H_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_hosp_if_sympt[shared->dim_rel_p_hosp_if_sympt_12 * (k - 1) + shared->dim_rel_p_hosp_if_sympt_1 * (j - 1) + i - 1] * shared->strain_rel_p_hosp_if_sympt[j - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_H_D_1; ++i) {
      for (int j = 1; j <= shared->dim_p_H_D_2; ++j) {
        for (int k = 1; k <= shared->dim_p_H_D_3; ++k) {
          internal.p_H_D[i - 1 + shared->dim_p_H_D_1 * (j - 1) + shared->dim_p_H_D_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_H_D_steps ? dust::math::min(shared->p_H_D_step[shared->dim_p_H_D_step_1 * (i - 1) + shared->n_p_H_D_steps - 1] * shared->rel_p_H_D[shared->dim_rel_p_H_D_12 * (k - 1) + shared->dim_rel_p_H_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_H_D[j - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_H_D_step[shared->dim_p_H_D_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_H_D[shared->dim_rel_p_H_D_12 * (k - 1) + shared->dim_rel_p_H_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_H_D[j - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_H_D_progress; ++i) {
      internal.p_H_D_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_H_D[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_H_R_progress; ++i) {
      internal.p_H_R_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_H_R[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_ICU_1; ++i) {
      for (int j = 1; j <= shared->dim_p_ICU_2; ++j) {
        for (int k = 1; k <= shared->dim_p_ICU_3; ++k) {
          internal.p_ICU[i - 1 + shared->dim_p_ICU_1 * (j - 1) + shared->dim_p_ICU_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_ICU_steps ? dust::math::min(shared->p_ICU_step[shared->dim_p_ICU_step_1 * (i - 1) + shared->n_p_ICU_steps - 1] * shared->rel_p_ICU[shared->dim_rel_p_ICU_12 * (k - 1) + shared->dim_rel_p_ICU_1 * (j - 1) + i - 1] * shared->strain_rel_p_icu[j - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_ICU_step[shared->dim_p_ICU_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_ICU[shared->dim_rel_p_ICU_12 * (k - 1) + shared->dim_rel_p_ICU_1 * (j - 1) + i - 1] * shared->strain_rel_p_icu[j - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_ICU_D_1; ++i) {
      for (int j = 1; j <= shared->dim_p_ICU_D_2; ++j) {
        for (int k = 1; k <= shared->dim_p_ICU_D_3; ++k) {
          internal.p_ICU_D[i - 1 + shared->dim_p_ICU_D_1 * (j - 1) + shared->dim_p_ICU_D_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_ICU_D_steps ? dust::math::min(shared->p_ICU_D_step[shared->dim_p_ICU_D_step_1 * (i - 1) + shared->n_p_ICU_D_steps - 1] * shared->rel_p_ICU_D[shared->dim_rel_p_ICU_D_12 * (k - 1) + shared->dim_rel_p_ICU_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_ICU_D[j - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_ICU_D_step[shared->dim_p_ICU_D_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_ICU_D[shared->dim_rel_p_ICU_D_12 * (k - 1) + shared->dim_rel_p_ICU_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_ICU_D[j - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_ICU_D_progress; ++i) {
      internal.p_ICU_D_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_ICU_D[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_ICU_W_D_progress; ++i) {
      internal.p_ICU_W_D_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_ICU_W_D[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_ICU_W_R_progress; ++i) {
      internal.p_ICU_W_R_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_ICU_W_R[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_ICU_pre_progress; ++i) {
      internal.p_ICU_pre_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_ICU_pre[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_I_A_progress; ++i) {
      internal.p_I_A_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_A[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_I_C_1_progress; ++i) {
      internal.p_I_C_1_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_C_1[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_I_C_2_progress; ++i) {
      internal.p_I_C_2_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_C_2[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_I_P_progress; ++i) {
      internal.p_I_P_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_P[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_R_1; ++i) {
      for (int j = 1; j <= shared->dim_p_R_2; ++j) {
        for (int k = 1; k <= shared->dim_p_R_3; ++k) {
          internal.p_R[i - 1 + shared->dim_p_R_1 * (j - 1) + shared->dim_p_R_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_R_steps ? dust::math::min(shared->p_R_step[shared->dim_p_R_step_1 * (i - 1) + shared->n_p_R_steps - 1] * shared->rel_p_R[shared->dim_rel_p_R_12 * (k - 1) + shared->dim_rel_p_R_1 * (j - 1) + i - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_R_step[shared->dim_p_R_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_R[shared->dim_rel_p_R_12 * (k - 1) + shared->dim_rel_p_R_1 * (j - 1) + i - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_T_PCR_pos_progress; ++i) {
      internal.p_T_PCR_pos_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_PCR_pos[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_T_PCR_pre_progress; ++i) {
      internal.p_T_PCR_pre_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_PCR_pre[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_W_D_1; ++i) {
      for (int j = 1; j <= shared->dim_p_W_D_2; ++j) {
        for (int k = 1; k <= shared->dim_p_W_D_3; ++k) {
          internal.p_W_D[i - 1 + shared->dim_p_W_D_1 * (j - 1) + shared->dim_p_W_D_12 * (k - 1)] = (static_cast<int>(step) >= shared->n_p_W_D_steps ? dust::math::min(shared->p_W_D_step[shared->dim_p_W_D_step_1 * (i - 1) + shared->n_p_W_D_steps - 1] * shared->rel_p_W_D[shared->dim_rel_p_W_D_12 * (k - 1) + shared->dim_rel_p_W_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_W_D[j - 1], static_cast<real_type>(1)) : dust::math::min(shared->p_W_D_step[shared->dim_p_W_D_step_1 * (i - 1) + step + 1 - 1] * shared->rel_p_W_D[shared->dim_rel_p_W_D_12 * (k - 1) + shared->dim_rel_p_W_D_1 * (j - 1) + i - 1] * shared->strain_rel_p_W_D[j - 1], static_cast<real_type>(1)));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_W_D_progress; ++i) {
      internal.p_W_D_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_W_D[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_W_R_progress; ++i) {
      internal.p_W_R_progress[i - 1] = 1 - dust::math::exp(- internal.gamma_W_R[i - 1] * shared->dt);
    }
    for (int i = 1; i <= shared->dim_p_star; ++i) {
      internal.p_star[i - 1] = (static_cast<int>(step) >= shared->n_p_star_steps ? shared->p_star_step[shared->dim_p_star_step_1 * (i - 1) + shared->n_p_star_steps - 1] : shared->p_star_step[shared->dim_p_star_step_1 * (i - 1) + step + 1 - 1]);
    }
    real_type p_test = 1 - dust::math::exp(- gamma_U * shared->dt);
    real_type seed = dust::random::poisson<real_type>(rng_state, seed_rate);
    real_type strain_seed = dust::random::poisson<real_type>(rng_state, strain_seed_rate);
    for (int i = 1; i <= shared->dim_total_attempted_doses_1; ++i) {
      for (int j = 1; j <= shared->dim_total_attempted_doses_2; ++j) {
        internal.total_attempted_doses[i - 1 + shared->dim_total_attempted_doses_1 * (j - 1)] = vaccine_missed_doses[shared->dim_vaccine_missed_doses_1 * (j - 1) + i - 1] + ((static_cast<int>(step) >= shared->dim_vaccine_dose_step_3 ? 0 : shared->vaccine_dose_step[shared->dim_vaccine_dose_step_12 * (step + 1 - 1) + shared->dim_vaccine_dose_step_1 * (j - 1) + i - 1]));
      }
    }
    for (int i = 1; i <= shared->dim_vacc_skip_n_candidates_1; ++i) {
      for (int j = 1; j <= shared->dim_vacc_skip_n_candidates_2; ++j) {
        internal.vacc_skip_n_candidates[i - 1 + shared->dim_vacc_skip_n_candidates_1 * (j - 1)] = ((shared->vacc_skip_dose[j - 1] > 0 ? S[shared->dim_S_1 * (shared->vacc_skip_dose[j - 1] - 1) + i - 1] + odin_sum4<real_type>(E, i - 1, i, 0, shared->dim_E_2, 0, shared->dim_E_3, shared->vacc_skip_dose[j - 1] - 1, shared->vacc_skip_dose[j - 1], shared->dim_E_1, shared->dim_E_12, shared->dim_E_123) + odin_sum4<real_type>(I_A, i - 1, i, 0, shared->dim_I_A_2, 0, shared->dim_I_A_3, shared->vacc_skip_dose[j - 1] - 1, shared->vacc_skip_dose[j - 1], shared->dim_I_A_1, shared->dim_I_A_12, shared->dim_I_A_123) + odin_sum4<real_type>(I_P, i - 1, i, 0, shared->dim_I_P_2, 0, shared->dim_I_P_3, shared->vacc_skip_dose[j - 1] - 1, shared->vacc_skip_dose[j - 1], shared->dim_I_P_1, shared->dim_I_P_12, shared->dim_I_P_123) + odin_sum3<real_type>(R, i - 1, i, 0, shared->dim_R_2, shared->vacc_skip_dose[j - 1] - 1, shared->vacc_skip_dose[j - 1], shared->dim_R_1, shared->dim_R_12) : 0));
      }
    }
    for (int i = 1; i <= shared->dim_vaccine_n_candidates_1; ++i) {
      for (int j = 1; j <= shared->dim_vaccine_n_candidates_2; ++j) {
        internal.vaccine_n_candidates[i - 1 + shared->dim_vaccine_n_candidates_1 * (j - 1)] = S[shared->dim_S_1 * (shared->index_dose[j - 1] - 1) + i - 1] + odin_sum4<real_type>(E, i - 1, i, 0, shared->dim_E_2, 0, shared->dim_E_3, shared->index_dose[j - 1] - 1, shared->index_dose[j - 1], shared->dim_E_1, shared->dim_E_12, shared->dim_E_123) + odin_sum4<real_type>(I_A, i - 1, i, 0, shared->dim_I_A_2, 0, shared->dim_I_A_3, shared->index_dose[j - 1] - 1, shared->index_dose[j - 1], shared->dim_I_A_1, shared->dim_I_A_12, shared->dim_I_A_123) + odin_sum4<real_type>(I_P, i - 1, i, 0, shared->dim_I_P_2, 0, shared->dim_I_P_3, shared->index_dose[j - 1] - 1, shared->index_dose[j - 1], shared->dim_I_P_1, shared->dim_I_P_12, shared->dim_I_P_123) + odin_sum3<real_type>(R, i - 1, i, 0, shared->dim_R_2, shared->index_dose[j - 1] - 1, shared->index_dose[j - 1], shared->dim_R_1, shared->dim_R_12);
      }
    }
    for (int i = 1; i <= shared->dim_HFR_disag_1; ++i) {
      for (int j = 1; j <= shared->dim_HFR_disag_2; ++j) {
        for (int k = 1; k <= shared->dim_HFR_disag_3; ++k) {
          internal.HFR_disag[i - 1 + shared->dim_HFR_disag_1 * (j - 1) + shared->dim_HFR_disag_12 * (k - 1)] = (1 - internal.p_ICU[shared->dim_p_ICU_12 * (k - 1) + shared->dim_p_ICU_1 * (j - 1) + i - 1]) * internal.p_H_D[shared->dim_p_H_D_12 * (k - 1) + shared->dim_p_H_D_1 * (j - 1) + i - 1] + internal.p_ICU[shared->dim_p_ICU_12 * (k - 1) + shared->dim_p_ICU_1 * (j - 1) + i - 1] * internal.p_ICU_D[shared->dim_p_ICU_D_12 * (k - 1) + shared->dim_p_ICU_D_1 * (j - 1) + i - 1] + internal.p_ICU[shared->dim_p_ICU_12 * (k - 1) + shared->dim_p_ICU_1 * (j - 1) + i - 1] * (1 - internal.p_ICU_D[shared->dim_p_ICU_D_12 * (k - 1) + shared->dim_p_ICU_D_1 * (j - 1) + i - 1]) * internal.p_W_D[shared->dim_p_W_D_12 * (k - 1) + shared->dim_p_W_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_IHR_disag_1; ++i) {
      for (int j = 1; j <= shared->dim_IHR_disag_2; ++j) {
        for (int k = 1; k <= shared->dim_IHR_disag_3; ++k) {
          internal.IHR_disag[i - 1 + shared->dim_IHR_disag_1 * (j - 1) + shared->dim_IHR_disag_12 * (k - 1)] = internal.p_C[shared->dim_p_C_12 * (k - 1) + shared->dim_p_C_1 * (j - 1) + i - 1] * internal.p_H[shared->dim_p_H_12 * (k - 1) + shared->dim_p_H_1 * (j - 1) + i - 1] * (1 - internal.p_G_D[shared->dim_p_G_D_12 * (k - 1) + shared->dim_p_G_D_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_E_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_E_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_E_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_E_progress_4; ++l) {
            internal.n_E_progress[i - 1 + shared->dim_n_E_progress_1 * (j - 1) + shared->dim_n_E_progress_12 * (k - 1) + shared->dim_n_E_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, E[shared->dim_E_123 * (l - 1) + shared->dim_E_12 * (k - 1) + shared->dim_E_1 * (j - 1) + i - 1], internal.p_E_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_G_D_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_G_D_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_G_D_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_G_D_progress_4; ++l) {
            internal.n_G_D_progress[i - 1 + shared->dim_n_G_D_progress_1 * (j - 1) + shared->dim_n_G_D_progress_12 * (k - 1) + shared->dim_n_G_D_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, G_D[shared->dim_G_D_123 * (l - 1) + shared->dim_G_D_12 * (k - 1) + shared->dim_G_D_1 * (j - 1) + i - 1], internal.p_G_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_H_D_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_H_D_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_H_D_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_H_D_conf_progress_4; ++l) {
            internal.n_H_D_conf_progress[i - 1 + shared->dim_n_H_D_conf_progress_1 * (j - 1) + shared->dim_n_H_D_conf_progress_12 * (k - 1) + shared->dim_n_H_D_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, H_D_conf[shared->dim_H_D_conf_123 * (l - 1) + shared->dim_H_D_conf_12 * (k - 1) + shared->dim_H_D_conf_1 * (j - 1) + i - 1], internal.p_H_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_H_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_H_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_H_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_H_D_unconf_progress_4; ++l) {
            internal.n_H_D_unconf_progress[i - 1 + shared->dim_n_H_D_unconf_progress_1 * (j - 1) + shared->dim_n_H_D_unconf_progress_12 * (k - 1) + shared->dim_n_H_D_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, H_D_unconf[shared->dim_H_D_unconf_123 * (l - 1) + shared->dim_H_D_unconf_12 * (k - 1) + shared->dim_H_D_unconf_1 * (j - 1) + i - 1], internal.p_H_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_H_R_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_H_R_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_H_R_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_H_R_conf_progress_4; ++l) {
            internal.n_H_R_conf_progress[i - 1 + shared->dim_n_H_R_conf_progress_1 * (j - 1) + shared->dim_n_H_R_conf_progress_12 * (k - 1) + shared->dim_n_H_R_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, H_R_conf[shared->dim_H_R_conf_123 * (l - 1) + shared->dim_H_R_conf_12 * (k - 1) + shared->dim_H_R_conf_1 * (j - 1) + i - 1], internal.p_H_R_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_H_R_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_H_R_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_H_R_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_H_R_unconf_progress_4; ++l) {
            internal.n_H_R_unconf_progress[i - 1 + shared->dim_n_H_R_unconf_progress_1 * (j - 1) + shared->dim_n_H_R_unconf_progress_12 * (k - 1) + shared->dim_n_H_R_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, H_R_unconf[shared->dim_H_R_unconf_123 * (l - 1) + shared->dim_H_R_unconf_12 * (k - 1) + shared->dim_H_R_unconf_1 * (j - 1) + i - 1], internal.p_H_R_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_D_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_D_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_D_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_D_conf_progress_4; ++l) {
            internal.n_ICU_D_conf_progress[i - 1 + shared->dim_n_ICU_D_conf_progress_1 * (j - 1) + shared->dim_n_ICU_D_conf_progress_12 * (k - 1) + shared->dim_n_ICU_D_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_D_conf[shared->dim_ICU_D_conf_123 * (l - 1) + shared->dim_ICU_D_conf_12 * (k - 1) + shared->dim_ICU_D_conf_1 * (j - 1) + i - 1], internal.p_ICU_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_D_unconf_progress_4; ++l) {
            internal.n_ICU_D_unconf_progress[i - 1 + shared->dim_n_ICU_D_unconf_progress_1 * (j - 1) + shared->dim_n_ICU_D_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_D_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_D_unconf[shared->dim_ICU_D_unconf_123 * (l - 1) + shared->dim_ICU_D_unconf_12 * (k - 1) + shared->dim_ICU_D_unconf_1 * (j - 1) + i - 1], internal.p_ICU_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_W_D_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_W_D_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_W_D_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_W_D_conf_progress_4; ++l) {
            internal.n_ICU_W_D_conf_progress[i - 1 + shared->dim_n_ICU_W_D_conf_progress_1 * (j - 1) + shared->dim_n_ICU_W_D_conf_progress_12 * (k - 1) + shared->dim_n_ICU_W_D_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_W_D_conf[shared->dim_ICU_W_D_conf_123 * (l - 1) + shared->dim_ICU_W_D_conf_12 * (k - 1) + shared->dim_ICU_W_D_conf_1 * (j - 1) + i - 1], internal.p_ICU_W_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_W_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_W_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_W_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_W_D_unconf_progress_4; ++l) {
            internal.n_ICU_W_D_unconf_progress[i - 1 + shared->dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + shared->dim_n_ICU_W_D_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_W_D_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_W_D_unconf[shared->dim_ICU_W_D_unconf_123 * (l - 1) + shared->dim_ICU_W_D_unconf_12 * (k - 1) + shared->dim_ICU_W_D_unconf_1 * (j - 1) + i - 1], internal.p_ICU_W_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_W_R_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_W_R_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_W_R_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_W_R_conf_progress_4; ++l) {
            internal.n_ICU_W_R_conf_progress[i - 1 + shared->dim_n_ICU_W_R_conf_progress_1 * (j - 1) + shared->dim_n_ICU_W_R_conf_progress_12 * (k - 1) + shared->dim_n_ICU_W_R_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_W_R_conf[shared->dim_ICU_W_R_conf_123 * (l - 1) + shared->dim_ICU_W_R_conf_12 * (k - 1) + shared->dim_ICU_W_R_conf_1 * (j - 1) + i - 1], internal.p_ICU_W_R_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_W_R_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_W_R_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_W_R_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_W_R_unconf_progress_4; ++l) {
            internal.n_ICU_W_R_unconf_progress[i - 1 + shared->dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + shared->dim_n_ICU_W_R_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_W_R_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_W_R_unconf[shared->dim_ICU_W_R_unconf_123 * (l - 1) + shared->dim_ICU_W_R_unconf_12 * (k - 1) + shared->dim_ICU_W_R_unconf_1 * (j - 1) + i - 1], internal.p_ICU_W_R_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_pre_conf_progress_4; ++l) {
            internal.n_ICU_pre_conf_progress[i - 1 + shared->dim_n_ICU_pre_conf_progress_1 * (j - 1) + shared->dim_n_ICU_pre_conf_progress_12 * (k - 1) + shared->dim_n_ICU_pre_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_pre_conf[shared->dim_ICU_pre_conf_123 * (l - 1) + shared->dim_ICU_pre_conf_12 * (k - 1) + shared->dim_ICU_pre_conf_1 * (j - 1) + i - 1], internal.p_ICU_pre_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_pre_unconf_progress_4; ++l) {
            internal.n_ICU_pre_unconf_progress[i - 1 + shared->dim_n_ICU_pre_unconf_progress_1 * (j - 1) + shared->dim_n_ICU_pre_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, ICU_pre_unconf[shared->dim_ICU_pre_unconf_123 * (l - 1) + shared->dim_ICU_pre_unconf_12 * (k - 1) + shared->dim_ICU_pre_unconf_1 * (j - 1) + i - 1], internal.p_ICU_pre_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_A_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_A_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_A_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_A_progress_4; ++l) {
            internal.n_I_A_progress[i - 1 + shared->dim_n_I_A_progress_1 * (j - 1) + shared->dim_n_I_A_progress_12 * (k - 1) + shared->dim_n_I_A_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_A[shared->dim_I_A_123 * (l - 1) + shared->dim_I_A_12 * (k - 1) + shared->dim_I_A_1 * (j - 1) + i - 1], internal.p_I_A_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_1_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_1_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_1_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_C_1_progress_4; ++l) {
            internal.n_I_C_1_progress[i - 1 + shared->dim_n_I_C_1_progress_1 * (j - 1) + shared->dim_n_I_C_1_progress_12 * (k - 1) + shared->dim_n_I_C_1_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_C_1[shared->dim_I_C_1_123 * (l - 1) + shared->dim_I_C_1_12 * (k - 1) + shared->dim_I_C_1_1 * (j - 1) + i - 1], internal.p_I_C_1_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_C_2_progress_4; ++l) {
            internal.n_I_C_2_progress[i - 1 + shared->dim_n_I_C_2_progress_1 * (j - 1) + shared->dim_n_I_C_2_progress_12 * (k - 1) + shared->dim_n_I_C_2_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_C_2[shared->dim_I_C_2_123 * (l - 1) + shared->dim_I_C_2_12 * (k - 1) + shared->dim_I_C_2_1 * (j - 1) + i - 1], internal.p_I_C_2_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_P_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_P_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_P_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_P_progress_4; ++l) {
            internal.n_I_P_progress[i - 1 + shared->dim_n_I_P_progress_1 * (j - 1) + shared->dim_n_I_P_progress_12 * (k - 1) + shared->dim_n_I_P_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_P[shared->dim_I_P_123 * (l - 1) + shared->dim_I_P_12 * (k - 1) + shared->dim_I_P_1 * (j - 1) + i - 1], internal.p_I_P_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_PCR_pos_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_PCR_pos_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_PCR_pos_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_T_PCR_pos_progress_4; ++l) {
            internal.n_T_PCR_pos_progress[i - 1 + shared->dim_n_T_PCR_pos_progress_1 * (j - 1) + shared->dim_n_T_PCR_pos_progress_12 * (k - 1) + shared->dim_n_T_PCR_pos_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, T_PCR_pos[shared->dim_T_PCR_pos_123 * (l - 1) + shared->dim_T_PCR_pos_12 * (k - 1) + shared->dim_T_PCR_pos_1 * (j - 1) + i - 1], internal.p_T_PCR_pos_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_PCR_pre_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_PCR_pre_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_PCR_pre_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_T_PCR_pre_progress_4; ++l) {
            internal.n_T_PCR_pre_progress[i - 1 + shared->dim_n_T_PCR_pre_progress_1 * (j - 1) + shared->dim_n_T_PCR_pre_progress_12 * (k - 1) + shared->dim_n_T_PCR_pre_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, T_PCR_pre[shared->dim_T_PCR_pre_123 * (l - 1) + shared->dim_T_PCR_pre_12 * (k - 1) + shared->dim_T_PCR_pre_1 * (j - 1) + i - 1], internal.p_T_PCR_pre_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_3; ++k) {
          internal.n_T_sero_pre_1_to_T_sero_pos_1[i - 1 + shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_1 * (j - 1) + shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_T_sero_pre_1_progress[shared->dim_n_T_sero_pre_1_progress_123 * (k - 1) + shared->dim_n_T_sero_pre_1_progress_12 * (shared->k_sero_pre_1 - 1) + shared->dim_n_T_sero_pre_1_progress_1 * (j - 1) + i - 1], shared->p_sero_pos_1[i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_1; ++i) {
      for (int j = 1; j <= shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_2; ++j) {
        for (int k = 1; k <= shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_3; ++k) {
          internal.n_T_sero_pre_2_to_T_sero_pos_2[i - 1 + shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_1 * (j - 1) + shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_T_sero_pre_2_progress[shared->dim_n_T_sero_pre_2_progress_123 * (k - 1) + shared->dim_n_T_sero_pre_2_progress_12 * (shared->k_sero_pre_2 - 1) + shared->dim_n_T_sero_pre_2_progress_1 * (j - 1) + i - 1], shared->p_sero_pos_2[i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_W_D_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_W_D_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_W_D_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_W_D_conf_progress_4; ++l) {
            internal.n_W_D_conf_progress[i - 1 + shared->dim_n_W_D_conf_progress_1 * (j - 1) + shared->dim_n_W_D_conf_progress_12 * (k - 1) + shared->dim_n_W_D_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, W_D_conf[shared->dim_W_D_conf_123 * (l - 1) + shared->dim_W_D_conf_12 * (k - 1) + shared->dim_W_D_conf_1 * (j - 1) + i - 1], internal.p_W_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_W_D_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_W_D_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_W_D_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_W_D_unconf_progress_4; ++l) {
            internal.n_W_D_unconf_progress[i - 1 + shared->dim_n_W_D_unconf_progress_1 * (j - 1) + shared->dim_n_W_D_unconf_progress_12 * (k - 1) + shared->dim_n_W_D_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, W_D_unconf[shared->dim_W_D_unconf_123 * (l - 1) + shared->dim_W_D_unconf_12 * (k - 1) + shared->dim_W_D_unconf_1 * (j - 1) + i - 1], internal.p_W_D_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_W_R_conf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_W_R_conf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_W_R_conf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_W_R_conf_progress_4; ++l) {
            internal.n_W_R_conf_progress[i - 1 + shared->dim_n_W_R_conf_progress_1 * (j - 1) + shared->dim_n_W_R_conf_progress_12 * (k - 1) + shared->dim_n_W_R_conf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, W_R_conf[shared->dim_W_R_conf_123 * (l - 1) + shared->dim_W_R_conf_12 * (k - 1) + shared->dim_W_R_conf_1 * (j - 1) + i - 1], internal.p_W_R_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_W_R_unconf_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_W_R_unconf_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_W_R_unconf_progress_3; ++k) {
          for (int l = 1; l <= shared->dim_n_W_R_unconf_progress_4; ++l) {
            internal.n_W_R_unconf_progress[i - 1 + shared->dim_n_W_R_unconf_progress_1 * (j - 1) + shared->dim_n_W_R_unconf_progress_12 * (k - 1) + shared->dim_n_W_R_unconf_progress_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, W_R_unconf[shared->dim_W_R_unconf_123 * (l - 1) + shared->dim_W_R_unconf_12 * (k - 1) + shared->dim_W_R_unconf_1 * (j - 1) + i - 1], internal.p_W_R_progress[j - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_s_ij_1; ++i) {
      for (int j = 1; j <= shared->dim_s_ij_2; ++j) {
        for (int k = 1; k <= shared->dim_s_ij_3; ++k) {
          internal.s_ij[i - 1 + shared->dim_s_ij_1 * (j - 1) + shared->dim_s_ij_12 * (k - 1)] = shared->m[shared->dim_m_1 * (j - 1) + i - 1] * odin_sum3<real_type>(internal.I_with_diff_trans.data(), j - 1, j, k - 1, k, 0, shared->dim_I_with_diff_trans_3, shared->dim_I_with_diff_trans_1, shared->dim_I_with_diff_trans_12);
        }
      }
    }
    for (int i = 1; i <= shared->n_age_groups; ++i) {
      for (int j = 1; j <= shared->n_groups; ++j) {
        for (int k = 1; k <= shared->dim_s_ij_3; ++k) {
          internal.s_ij[i - 1 + shared->dim_s_ij_1 * (j - 1) + shared->dim_s_ij_12 * (k - 1)] = beta * internal.s_ij[shared->dim_s_ij_12 * (k - 1) + shared->dim_s_ij_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = (shared->n_age_groups + 1); i <= shared->n_groups; ++i) {
      for (int j = 1; j <= shared->n_age_groups; ++j) {
        for (int k = 1; k <= shared->dim_s_ij_3; ++k) {
          internal.s_ij[i - 1 + shared->dim_s_ij_1 * (j - 1) + shared->dim_s_ij_12 * (k - 1)] = beta * internal.s_ij[shared->dim_s_ij_12 * (k - 1) + shared->dim_s_ij_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_tmp_vaccine_n_candidates_1; ++i) {
      for (int j = 1; j <= shared->dim_tmp_vaccine_n_candidates_2; ++j) {
        state_next[shared->offset_variable_tmp_vaccine_n_candidates + i - 1 + shared->dim_tmp_vaccine_n_candidates_1 * (j - 1)] = internal.vaccine_n_candidates[shared->dim_vaccine_n_candidates_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_vaccine_attempted_doses_1; ++i) {
      for (int j = 1; j <= shared->dim_vaccine_attempted_doses_2; ++j) {
        internal.vaccine_attempted_doses[i - 1 + shared->dim_vaccine_attempted_doses_1 * (j - 1)] = ((internal.vaccine_n_candidates[shared->dim_vaccine_n_candidates_1 * (j - 1) + i - 1] == 0 ? 0 : dust::math::min(internal.vaccine_n_candidates[shared->dim_vaccine_n_candidates_1 * (j - 1) + i - 1] / (real_type) (internal.vaccine_n_candidates[shared->dim_vaccine_n_candidates_1 * (j - 1) + i - 1] + shared->vacc_skip_dose_weight[j - 1] * internal.vacc_skip_n_candidates[shared->dim_vacc_skip_n_candidates_1 * (j - 1) + i - 1]) * internal.total_attempted_doses[shared->dim_total_attempted_doses_1 * (j - 1) + i - 1], internal.vaccine_n_candidates[shared->dim_vaccine_n_candidates_1 * (j - 1) + i - 1])));
      }
    }
    for (int i = 1; i <= shared->dim_IFR_disag_1; ++i) {
      for (int j = 1; j <= shared->dim_IFR_disag_2; ++j) {
        for (int k = 1; k <= shared->dim_IFR_disag_3; ++k) {
          internal.IFR_disag[i - 1 + shared->dim_IFR_disag_1 * (j - 1) + shared->dim_IFR_disag_12 * (k - 1)] = internal.IHR_disag[shared->dim_IHR_disag_12 * (k - 1) + shared->dim_IHR_disag_1 * (j - 1) + i - 1] * internal.HFR_disag[shared->dim_HFR_disag_12 * (k - 1) + shared->dim_HFR_disag_1 * (j - 1) + i - 1] + internal.p_C[shared->dim_p_C_12 * (k - 1) + shared->dim_p_C_1 * (j - 1) + i - 1] * internal.p_H[shared->dim_p_H_12 * (k - 1) + shared->dim_p_H_1 * (j - 1) + i - 1] * internal.p_G_D[shared->dim_p_G_D_12 * (k - 1) + shared->dim_p_G_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_H_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_H_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_H_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_H_D_conf_4; ++l) {
            internal.aux_H_D_conf[i - 1 + shared->dim_aux_H_D_conf_1 * (j - 1) + shared->dim_aux_H_D_conf_12 * (k - 1) + shared->dim_aux_H_D_conf_123 * (l - 1)] = H_D_conf[shared->dim_H_D_conf_123 * (l - 1) + shared->dim_H_D_conf_12 * (k - 1) + shared->dim_H_D_conf_1 * (j - 1) + i - 1] + ((k > 1 ? internal.n_H_D_conf_progress[shared->dim_n_H_D_conf_progress_123 * (l - 1) + shared->dim_n_H_D_conf_progress_12 * (k - 1 - 1) + shared->dim_n_H_D_conf_progress_1 * (j - 1) + i - 1] : 0)) - internal.n_H_D_conf_progress[shared->dim_n_H_D_conf_progress_123 * (l - 1) + shared->dim_n_H_D_conf_progress_12 * (k - 1) + shared->dim_n_H_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_H_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_H_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_H_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_H_D_unconf_4; ++l) {
            internal.aux_H_D_unconf[i - 1 + shared->dim_aux_H_D_unconf_1 * (j - 1) + shared->dim_aux_H_D_unconf_12 * (k - 1) + shared->dim_aux_H_D_unconf_123 * (l - 1)] = H_D_unconf[shared->dim_H_D_unconf_123 * (l - 1) + shared->dim_H_D_unconf_12 * (k - 1) + shared->dim_H_D_unconf_1 * (j - 1) + i - 1] + ((k > 1 ? internal.n_H_D_unconf_progress[shared->dim_n_H_D_unconf_progress_123 * (l - 1) + shared->dim_n_H_D_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_H_D_unconf_progress_1 * (j - 1) + i - 1] : 0)) - internal.n_H_D_unconf_progress[shared->dim_n_H_D_unconf_progress_123 * (l - 1) + shared->dim_n_H_D_unconf_progress_12 * (k - 1) + shared->dim_n_H_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_H_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_H_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_H_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_H_R_conf_4; ++l) {
            internal.aux_H_R_conf[i - 1 + shared->dim_aux_H_R_conf_1 * (j - 1) + shared->dim_aux_H_R_conf_12 * (k - 1) + shared->dim_aux_H_R_conf_123 * (l - 1)] = H_R_conf[shared->dim_H_R_conf_123 * (l - 1) + shared->dim_H_R_conf_12 * (k - 1) + shared->dim_H_R_conf_1 * (j - 1) + i - 1] + ((k > 1 ? internal.n_H_R_conf_progress[shared->dim_n_H_R_conf_progress_123 * (l - 1) + shared->dim_n_H_R_conf_progress_12 * (k - 1 - 1) + shared->dim_n_H_R_conf_progress_1 * (j - 1) + i - 1] : 0)) - internal.n_H_R_conf_progress[shared->dim_n_H_R_conf_progress_123 * (l - 1) + shared->dim_n_H_R_conf_progress_12 * (k - 1) + shared->dim_n_H_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_H_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_H_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_H_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_H_R_unconf_4; ++l) {
            internal.aux_H_R_unconf[i - 1 + shared->dim_aux_H_R_unconf_1 * (j - 1) + shared->dim_aux_H_R_unconf_12 * (k - 1) + shared->dim_aux_H_R_unconf_123 * (l - 1)] = H_R_unconf[shared->dim_H_R_unconf_123 * (l - 1) + shared->dim_H_R_unconf_12 * (k - 1) + shared->dim_H_R_unconf_1 * (j - 1) + i - 1] + ((k > 1 ? internal.n_H_R_unconf_progress[shared->dim_n_H_R_unconf_progress_123 * (l - 1) + shared->dim_n_H_R_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_H_R_unconf_progress_1 * (j - 1) + i - 1] : 0)) - internal.n_H_R_unconf_progress[shared->dim_n_H_R_unconf_progress_123 * (l - 1) + shared->dim_n_H_R_unconf_progress_12 * (k - 1) + shared->dim_n_H_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_pre_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_pre_conf_4; ++l) {
            internal.aux_ICU_pre_conf[i - 1 + shared->dim_aux_ICU_pre_conf_1 * (j - 1) + shared->dim_aux_ICU_pre_conf_12 * (k - 1) + shared->dim_aux_ICU_pre_conf_123 * (l - 1)] = ICU_pre_conf[shared->dim_ICU_pre_conf_123 * (l - 1) + shared->dim_ICU_pre_conf_12 * (k - 1) + shared->dim_ICU_pre_conf_1 * (j - 1) + i - 1] + ((k > 1 ? internal.n_ICU_pre_conf_progress[shared->dim_n_ICU_pre_conf_progress_123 * (l - 1) + shared->dim_n_ICU_pre_conf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1] : 0)) - internal.n_ICU_pre_conf_progress[shared->dim_n_ICU_pre_conf_progress_123 * (l - 1) + shared->dim_n_ICU_pre_conf_progress_12 * (k - 1) + shared->dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_pre_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_pre_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_pre_unconf_4; ++l) {
            internal.aux_ICU_pre_unconf[i - 1 + shared->dim_aux_ICU_pre_unconf_1 * (j - 1) + shared->dim_aux_ICU_pre_unconf_12 * (k - 1) + shared->dim_aux_ICU_pre_unconf_123 * (l - 1)] = ICU_pre_unconf[shared->dim_ICU_pre_unconf_123 * (l - 1) + shared->dim_ICU_pre_unconf_12 * (k - 1) + shared->dim_ICU_pre_unconf_1 * (j - 1) + i - 1] + ((k > 1 ? internal.n_ICU_pre_unconf_progress[shared->dim_n_ICU_pre_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_pre_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1] : 0)) - internal.n_ICU_pre_unconf_progress[shared->dim_n_ICU_pre_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_pre_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_W_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_W_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_W_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_W_D_conf_4; ++l) {
            internal.aux_W_D_conf[i - 1 + shared->dim_aux_W_D_conf_1 * (j - 1) + shared->dim_aux_W_D_conf_12 * (k - 1) + shared->dim_aux_W_D_conf_123 * (l - 1)] = W_D_conf[shared->dim_W_D_conf_123 * (l - 1) + shared->dim_W_D_conf_12 * (k - 1) + shared->dim_W_D_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_W_D_conf_progress[shared->dim_n_ICU_W_D_conf_progress_123 * (l - 1) + shared->dim_n_ICU_W_D_conf_progress_12 * (shared->k_ICU_W_D - 1) + shared->dim_n_ICU_W_D_conf_progress_1 * (j - 1) + i - 1] : internal.n_W_D_conf_progress[shared->dim_n_W_D_conf_progress_123 * (l - 1) + shared->dim_n_W_D_conf_progress_12 * (k - 1 - 1) + shared->dim_n_W_D_conf_progress_1 * (j - 1) + i - 1])) - internal.n_W_D_conf_progress[shared->dim_n_W_D_conf_progress_123 * (l - 1) + shared->dim_n_W_D_conf_progress_12 * (k - 1) + shared->dim_n_W_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_W_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_W_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_W_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_W_D_unconf_4; ++l) {
            internal.aux_W_D_unconf[i - 1 + shared->dim_aux_W_D_unconf_1 * (j - 1) + shared->dim_aux_W_D_unconf_12 * (k - 1) + shared->dim_aux_W_D_unconf_123 * (l - 1)] = W_D_unconf[shared->dim_W_D_unconf_123 * (l - 1) + shared->dim_W_D_unconf_12 * (k - 1) + shared->dim_W_D_unconf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_W_D_unconf_progress[shared->dim_n_ICU_W_D_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_W_D_unconf_progress_12 * (shared->k_ICU_W_D - 1) + shared->dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + i - 1] : internal.n_W_D_unconf_progress[shared->dim_n_W_D_unconf_progress_123 * (l - 1) + shared->dim_n_W_D_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_W_D_unconf_progress_1 * (j - 1) + i - 1])) - internal.n_W_D_unconf_progress[shared->dim_n_W_D_unconf_progress_123 * (l - 1) + shared->dim_n_W_D_unconf_progress_12 * (k - 1) + shared->dim_n_W_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_W_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_W_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_W_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_W_R_conf_4; ++l) {
            internal.aux_W_R_conf[i - 1 + shared->dim_aux_W_R_conf_1 * (j - 1) + shared->dim_aux_W_R_conf_12 * (k - 1) + shared->dim_aux_W_R_conf_123 * (l - 1)] = W_R_conf[shared->dim_W_R_conf_123 * (l - 1) + shared->dim_W_R_conf_12 * (k - 1) + shared->dim_W_R_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_W_R_conf_progress[shared->dim_n_ICU_W_R_conf_progress_123 * (l - 1) + shared->dim_n_ICU_W_R_conf_progress_12 * (shared->k_ICU_W_R - 1) + shared->dim_n_ICU_W_R_conf_progress_1 * (j - 1) + i - 1] : internal.n_W_R_conf_progress[shared->dim_n_W_R_conf_progress_123 * (l - 1) + shared->dim_n_W_R_conf_progress_12 * (k - 1 - 1) + shared->dim_n_W_R_conf_progress_1 * (j - 1) + i - 1])) - internal.n_W_R_conf_progress[shared->dim_n_W_R_conf_progress_123 * (l - 1) + shared->dim_n_W_R_conf_progress_12 * (k - 1) + shared->dim_n_W_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_W_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_W_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_W_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_W_R_unconf_4; ++l) {
            internal.aux_W_R_unconf[i - 1 + shared->dim_aux_W_R_unconf_1 * (j - 1) + shared->dim_aux_W_R_unconf_12 * (k - 1) + shared->dim_aux_W_R_unconf_123 * (l - 1)] = W_R_unconf[shared->dim_W_R_unconf_123 * (l - 1) + shared->dim_W_R_unconf_12 * (k - 1) + shared->dim_W_R_unconf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_W_R_unconf_progress[shared->dim_n_ICU_W_R_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_W_R_unconf_progress_12 * (shared->k_ICU_W_R - 1) + shared->dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + i - 1] : internal.n_W_R_unconf_progress[shared->dim_n_W_R_unconf_progress_123 * (l - 1) + shared->dim_n_W_R_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_W_R_unconf_progress_1 * (j - 1) + i - 1])) - internal.n_W_R_unconf_progress[shared->dim_n_W_R_unconf_progress_123 * (l - 1) + shared->dim_n_W_R_unconf_progress_12 * (k - 1) + shared->dim_n_W_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_delta_D_hosp_disag_1; ++i) {
      for (int j = 1; j <= shared->dim_delta_D_hosp_disag_2; ++j) {
        internal.delta_D_hosp_disag[i - 1 + shared->dim_delta_D_hosp_disag_1 * (j - 1)] = odin_sum4<real_type>(internal.n_H_D_unconf_progress.data(), i - 1, i, 0, shared->dim_n_H_D_unconf_progress_2, shared->k_H_D - 1, shared->k_H_D, j - 1, j, shared->dim_n_H_D_unconf_progress_1, shared->dim_n_H_D_unconf_progress_12, shared->dim_n_H_D_unconf_progress_123) + odin_sum4<real_type>(internal.n_H_D_conf_progress.data(), i - 1, i, 0, shared->dim_n_H_D_conf_progress_2, shared->k_H_D - 1, shared->k_H_D, j - 1, j, shared->dim_n_H_D_conf_progress_1, shared->dim_n_H_D_conf_progress_12, shared->dim_n_H_D_conf_progress_123) + odin_sum4<real_type>(internal.n_ICU_D_unconf_progress.data(), i - 1, i, 0, shared->dim_n_ICU_D_unconf_progress_2, shared->k_ICU_D - 1, shared->k_ICU_D, j - 1, j, shared->dim_n_ICU_D_unconf_progress_1, shared->dim_n_ICU_D_unconf_progress_12, shared->dim_n_ICU_D_unconf_progress_123) + odin_sum4<real_type>(internal.n_ICU_D_conf_progress.data(), i - 1, i, 0, shared->dim_n_ICU_D_conf_progress_2, shared->k_ICU_D - 1, shared->k_ICU_D, j - 1, j, shared->dim_n_ICU_D_conf_progress_1, shared->dim_n_ICU_D_conf_progress_12, shared->dim_n_ICU_D_conf_progress_123) + odin_sum4<real_type>(internal.n_W_D_unconf_progress.data(), i - 1, i, 0, shared->dim_n_W_D_unconf_progress_2, shared->k_W_D - 1, shared->k_W_D, j - 1, j, shared->dim_n_W_D_unconf_progress_1, shared->dim_n_W_D_unconf_progress_12, shared->dim_n_W_D_unconf_progress_123) + odin_sum4<real_type>(internal.n_W_D_conf_progress.data(), i - 1, i, 0, shared->dim_n_W_D_conf_progress_2, shared->k_W_D - 1, shared->k_W_D, j - 1, j, shared->dim_n_W_D_conf_progress_1, shared->dim_n_W_D_conf_progress_12, shared->dim_n_W_D_conf_progress_123);
      }
    }
    for (int i = 1; i <= shared->dim_delta_D_non_hosp_disag_1; ++i) {
      for (int j = 1; j <= shared->dim_delta_D_non_hosp_disag_2; ++j) {
        internal.delta_D_non_hosp_disag[i - 1 + shared->dim_delta_D_non_hosp_disag_1 * (j - 1)] = odin_sum4<real_type>(internal.n_G_D_progress.data(), i - 1, i, 0, shared->dim_n_G_D_progress_2, shared->k_G_D - 1, shared->k_G_D, j - 1, j, shared->dim_n_G_D_progress_1, shared->dim_n_G_D_progress_12, shared->dim_n_G_D_progress_123);
      }
    }
    for (int i = 1; i <= shared->dim_lambda_1; ++i) {
      for (int j = 1; j <= shared->dim_lambda_2; ++j) {
        internal.lambda[i - 1 + shared->dim_lambda_1 * (j - 1)] = (shared->n_real_strains == 1 ? odin_sum3<real_type>(internal.s_ij.data(), i - 1, i, 0, shared->dim_s_ij_2, 0, 1, shared->dim_s_ij_1, shared->dim_s_ij_12) : ((j == 1 ? odin_sum3<real_type>(internal.s_ij.data(), i - 1, i, 0, shared->dim_s_ij_2, 0, 1, shared->dim_s_ij_1, shared->dim_s_ij_12) + odin_sum3<real_type>(internal.s_ij.data(), i - 1, i, 0, shared->dim_s_ij_2, 3, 4, shared->dim_s_ij_1, shared->dim_s_ij_12) : odin_sum3<real_type>(internal.s_ij.data(), i - 1, i, 0, shared->dim_s_ij_2, 1, 2, shared->dim_s_ij_1, shared->dim_s_ij_12) + odin_sum3<real_type>(internal.s_ij.data(), i - 1, i, 0, shared->dim_s_ij_2, 2, 3, shared->dim_s_ij_1, shared->dim_s_ij_12))));
      }
    }
    for (int i = 1; i <= shared->dim_n_EI_A_1; ++i) {
      for (int j = 1; j <= shared->dim_n_EI_A_2; ++j) {
        for (int k = 1; k <= shared->dim_n_EI_A_3; ++k) {
          internal.n_EI_A[i - 1 + shared->dim_n_EI_A_1 * (j - 1) + shared->dim_n_EI_A_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_E_progress[shared->dim_n_E_progress_123 * (k - 1) + shared->dim_n_E_progress_12 * (shared->k_E - 1) + shared->dim_n_E_progress_1 * (j - 1) + i - 1], 1 - internal.p_C[shared->dim_p_C_12 * (k - 1) + shared->dim_p_C_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_conf_to_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_conf_to_ICU_D_conf_3; ++k) {
          internal.n_ICU_pre_conf_to_ICU_D_conf[i - 1 + shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + shared->dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_ICU_pre_conf_progress[shared->dim_n_ICU_pre_conf_progress_123 * (k - 1) + shared->dim_n_ICU_pre_conf_progress_12 * (shared->k_ICU_pre - 1) + shared->dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1], internal.p_ICU_D[shared->dim_p_ICU_D_12 * (k - 1) + shared->dim_p_ICU_D_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_3; ++k) {
          internal.n_ICU_pre_unconf_to_ICU_D_unconf[i - 1 + shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_ICU_pre_unconf_progress[shared->dim_n_ICU_pre_unconf_progress_123 * (k - 1) + shared->dim_n_ICU_pre_unconf_progress_12 * (shared->k_ICU_pre - 1) + shared->dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1], internal.p_ICU_D[shared->dim_p_ICU_D_12 * (k - 1) + shared->dim_p_ICU_D_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_RS_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_RS_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_RS_3; ++k) {
          internal.n_I_C_2_to_RS[i - 1 + shared->dim_n_I_C_2_to_RS_1 * (j - 1) + shared->dim_n_I_C_2_to_RS_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_I_C_2_progress[shared->dim_n_I_C_2_progress_123 * (k - 1) + shared->dim_n_I_C_2_progress_12 * (shared->k_C_2 - 1) + shared->dim_n_I_C_2_progress_1 * (j - 1) + i - 1], 1 - internal.p_H[shared->dim_p_H_12 * (k - 1) + shared->dim_p_H_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_com_to_T_sero_pre_1; ++i) {
      for (int j = 1; j <= shared->dim_n_com_to_T_sero_pre_2; ++j) {
        for (int k = 1; k <= shared->dim_n_com_to_T_sero_pre_3; ++k) {
          internal.n_com_to_T_sero_pre[i - 1 + shared->dim_n_com_to_T_sero_pre_1 * (j - 1) + shared->dim_n_com_to_T_sero_pre_12 * (k - 1)] = internal.n_E_progress[shared->dim_n_E_progress_123 * (k - 1) + shared->dim_n_E_progress_12 * (shared->k_E - 1) + shared->dim_n_E_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_I_C_1_1; ++i) {
      for (int j = 1; j <= shared->dim_new_I_C_1_2; ++j) {
        for (int k = 1; k <= shared->dim_new_I_C_1_3; ++k) {
          for (int l = 1; l <= shared->dim_new_I_C_1_4; ++l) {
            internal.new_I_C_1[i - 1 + shared->dim_new_I_C_1_1 * (j - 1) + shared->dim_new_I_C_1_12 * (k - 1) + shared->dim_new_I_C_1_123 * (l - 1)] = I_C_1[shared->dim_I_C_1_123 * (l - 1) + shared->dim_I_C_1_12 * (k - 1) + shared->dim_I_C_1_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_P_progress[shared->dim_n_I_P_progress_123 * (l - 1) + shared->dim_n_I_P_progress_12 * (shared->k_P - 1) + shared->dim_n_I_P_progress_1 * (j - 1) + i - 1] : internal.n_I_C_1_progress[shared->dim_n_I_C_1_progress_123 * (l - 1) + shared->dim_n_I_C_1_progress_12 * (k - 1 - 1) + shared->dim_n_I_C_1_progress_1 * (j - 1) + i - 1])) - internal.n_I_C_1_progress[shared->dim_n_I_C_1_progress_123 * (l - 1) + shared->dim_n_I_C_1_progress_12 * (k - 1) + shared->dim_n_I_C_1_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_I_C_2_1; ++i) {
      for (int j = 1; j <= shared->dim_new_I_C_2_2; ++j) {
        for (int k = 1; k <= shared->dim_new_I_C_2_3; ++k) {
          for (int l = 1; l <= shared->dim_new_I_C_2_4; ++l) {
            internal.new_I_C_2[i - 1 + shared->dim_new_I_C_2_1 * (j - 1) + shared->dim_new_I_C_2_12 * (k - 1) + shared->dim_new_I_C_2_123 * (l - 1)] = I_C_2[shared->dim_I_C_2_123 * (l - 1) + shared->dim_I_C_2_12 * (k - 1) + shared->dim_I_C_2_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_1_progress[shared->dim_n_I_C_1_progress_123 * (l - 1) + shared->dim_n_I_C_1_progress_12 * (shared->k_C_1 - 1) + shared->dim_n_I_C_1_progress_1 * (j - 1) + i - 1] : internal.n_I_C_2_progress[shared->dim_n_I_C_2_progress_123 * (l - 1) + shared->dim_n_I_C_2_progress_12 * (k - 1 - 1) + shared->dim_n_I_C_2_progress_1 * (j - 1) + i - 1])) - internal.n_I_C_2_progress[shared->dim_n_I_C_2_progress_123 * (l - 1) + shared->dim_n_I_C_2_progress_12 * (k - 1) + shared->dim_n_I_C_2_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_PCR_neg_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_PCR_neg_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_PCR_neg_3; ++k) {
          internal.new_T_PCR_neg[i - 1 + shared->dim_new_T_PCR_neg_1 * (j - 1) + shared->dim_new_T_PCR_neg_12 * (k - 1)] = T_PCR_neg[shared->dim_T_PCR_neg_12 * (k - 1) + shared->dim_T_PCR_neg_1 * (j - 1) + i - 1] + internal.n_T_PCR_pos_progress[shared->dim_n_T_PCR_pos_progress_123 * (k - 1) + shared->dim_n_T_PCR_pos_progress_12 * (shared->k_PCR_pos - 1) + shared->dim_n_T_PCR_pos_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_PCR_pos_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_PCR_pos_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_PCR_pos_3; ++k) {
          for (int l = 1; l <= shared->dim_new_T_PCR_pos_4; ++l) {
            internal.new_T_PCR_pos[i - 1 + shared->dim_new_T_PCR_pos_1 * (j - 1) + shared->dim_new_T_PCR_pos_12 * (k - 1) + shared->dim_new_T_PCR_pos_123 * (l - 1)] = T_PCR_pos[shared->dim_T_PCR_pos_123 * (l - 1) + shared->dim_T_PCR_pos_12 * (k - 1) + shared->dim_T_PCR_pos_1 * (j - 1) + i - 1] - internal.n_T_PCR_pos_progress[shared->dim_n_T_PCR_pos_progress_123 * (l - 1) + shared->dim_n_T_PCR_pos_progress_12 * (k - 1) + shared->dim_n_T_PCR_pos_progress_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_T_PCR_pre_progress[shared->dim_n_T_PCR_pre_progress_123 * (l - 1) + shared->dim_n_T_PCR_pre_progress_12 * (shared->k_PCR_pre - 1) + shared->dim_n_T_PCR_pre_progress_1 * (j - 1) + i - 1] : internal.n_T_PCR_pos_progress[shared->dim_n_T_PCR_pos_progress_123 * (l - 1) + shared->dim_n_T_PCR_pos_progress_12 * (k - 1 - 1) + shared->dim_n_T_PCR_pos_progress_1 * (j - 1) + i - 1]));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_sero_neg_1_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_sero_neg_1_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_sero_neg_1_3; ++k) {
          internal.new_T_sero_neg_1[i - 1 + shared->dim_new_T_sero_neg_1_1 * (j - 1) + shared->dim_new_T_sero_neg_1_12 * (k - 1)] = T_sero_neg_1[shared->dim_T_sero_neg_1_12 * (k - 1) + shared->dim_T_sero_neg_1_1 * (j - 1) + i - 1] + internal.n_T_sero_pre_1_progress[shared->dim_n_T_sero_pre_1_progress_123 * (k - 1) + shared->dim_n_T_sero_pre_1_progress_12 * (shared->k_sero_pre_1 - 1) + shared->dim_n_T_sero_pre_1_progress_1 * (j - 1) + i - 1] - internal.n_T_sero_pre_1_to_T_sero_pos_1[shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_12 * (k - 1) + shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_1 * (j - 1) + i - 1] + internal.n_T_sero_pos_1_progress[shared->dim_n_T_sero_pos_1_progress_123 * (k - 1) + shared->dim_n_T_sero_pos_1_progress_12 * (shared->k_sero_pos_1 - 1) + shared->dim_n_T_sero_pos_1_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_sero_neg_2_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_sero_neg_2_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_sero_neg_2_3; ++k) {
          internal.new_T_sero_neg_2[i - 1 + shared->dim_new_T_sero_neg_2_1 * (j - 1) + shared->dim_new_T_sero_neg_2_12 * (k - 1)] = T_sero_neg_2[shared->dim_T_sero_neg_2_12 * (k - 1) + shared->dim_T_sero_neg_2_1 * (j - 1) + i - 1] + internal.n_T_sero_pre_2_progress[shared->dim_n_T_sero_pre_2_progress_123 * (k - 1) + shared->dim_n_T_sero_pre_2_progress_12 * (shared->k_sero_pre_2 - 1) + shared->dim_n_T_sero_pre_2_progress_1 * (j - 1) + i - 1] - internal.n_T_sero_pre_2_to_T_sero_pos_2[shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_12 * (k - 1) + shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_1 * (j - 1) + i - 1] + internal.n_T_sero_pos_2_progress[shared->dim_n_T_sero_pos_2_progress_123 * (k - 1) + shared->dim_n_T_sero_pos_2_progress_12 * (shared->k_sero_pos_2 - 1) + shared->dim_n_T_sero_pos_2_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_sero_pos_1_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_sero_pos_1_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_sero_pos_1_3; ++k) {
          for (int l = 1; l <= shared->dim_new_T_sero_pos_1_4; ++l) {
            internal.new_T_sero_pos_1[i - 1 + shared->dim_new_T_sero_pos_1_1 * (j - 1) + shared->dim_new_T_sero_pos_1_12 * (k - 1) + shared->dim_new_T_sero_pos_1_123 * (l - 1)] = T_sero_pos_1[shared->dim_T_sero_pos_1_123 * (l - 1) + shared->dim_T_sero_pos_1_12 * (k - 1) + shared->dim_T_sero_pos_1_1 * (j - 1) + i - 1] - internal.n_T_sero_pos_1_progress[shared->dim_n_T_sero_pos_1_progress_123 * (l - 1) + shared->dim_n_T_sero_pos_1_progress_12 * (k - 1) + shared->dim_n_T_sero_pos_1_progress_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_T_sero_pre_1_to_T_sero_pos_1[shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_12 * (l - 1) + shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_1 * (j - 1) + i - 1] : internal.n_T_sero_pos_1_progress[shared->dim_n_T_sero_pos_1_progress_123 * (l - 1) + shared->dim_n_T_sero_pos_1_progress_12 * (k - 1 - 1) + shared->dim_n_T_sero_pos_1_progress_1 * (j - 1) + i - 1]));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_sero_pos_2_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_sero_pos_2_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_sero_pos_2_3; ++k) {
          for (int l = 1; l <= shared->dim_new_T_sero_pos_2_4; ++l) {
            internal.new_T_sero_pos_2[i - 1 + shared->dim_new_T_sero_pos_2_1 * (j - 1) + shared->dim_new_T_sero_pos_2_12 * (k - 1) + shared->dim_new_T_sero_pos_2_123 * (l - 1)] = T_sero_pos_2[shared->dim_T_sero_pos_2_123 * (l - 1) + shared->dim_T_sero_pos_2_12 * (k - 1) + shared->dim_T_sero_pos_2_1 * (j - 1) + i - 1] - internal.n_T_sero_pos_2_progress[shared->dim_n_T_sero_pos_2_progress_123 * (l - 1) + shared->dim_n_T_sero_pos_2_progress_12 * (k - 1) + shared->dim_n_T_sero_pos_2_progress_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_T_sero_pre_2_to_T_sero_pos_2[shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_12 * (l - 1) + shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_1 * (j - 1) + i - 1] : internal.n_T_sero_pos_2_progress[shared->dim_n_T_sero_pos_2_progress_123 * (l - 1) + shared->dim_n_T_sero_pos_2_progress_12 * (k - 1 - 1) + shared->dim_n_T_sero_pos_2_progress_1 * (j - 1) + i - 1]));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_vacc_skip_attempted_doses_1; ++i) {
      for (int j = 1; j <= shared->dim_vacc_skip_attempted_doses_2; ++j) {
        internal.vacc_skip_attempted_doses[i - 1 + shared->dim_vacc_skip_attempted_doses_1 * (j - 1)] = ((shared->vacc_skip_dose_weight[j - 1] > 0 ? ((shared->vacc_skip_dose[j - 1] > 0 ? internal.total_attempted_doses[shared->dim_total_attempted_doses_1 * (j - 1) + i - 1] - internal.vaccine_attempted_doses[shared->dim_vaccine_attempted_doses_1 * (j - 1) + i - 1] : 0)) : 0));
      }
    }
    for (int i = 1; i <= shared->dim_vaccine_probability_doses_1; ++i) {
      for (int j = 1; j <= shared->dim_vaccine_probability_doses_2; ++j) {
        internal.vaccine_probability_doses[i - 1 + shared->dim_vaccine_probability_doses_1 * (j - 1)] = dust::math::min((internal.vaccine_n_candidates[shared->dim_vaccine_n_candidates_1 * (j - 1) + i - 1] > 0 ? internal.vaccine_attempted_doses[shared->dim_vaccine_attempted_doses_1 * (j - 1) + i - 1] / (real_type) internal.vaccine_n_candidates[shared->dim_vaccine_n_candidates_1 * (j - 1) + i - 1] : 0), static_cast<real_type>(1));
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_D_conf_4; ++l) {
            internal.aux_ICU_D_conf[i - 1 + shared->dim_aux_ICU_D_conf_1 * (j - 1) + shared->dim_aux_ICU_D_conf_12 * (k - 1) + shared->dim_aux_ICU_D_conf_123 * (l - 1)] = ICU_D_conf[shared->dim_ICU_D_conf_123 * (l - 1) + shared->dim_ICU_D_conf_12 * (k - 1) + shared->dim_ICU_D_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_pre_conf_to_ICU_D_conf[shared->dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (l - 1) + shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + i - 1] : internal.n_ICU_D_conf_progress[shared->dim_n_ICU_D_conf_progress_123 * (l - 1) + shared->dim_n_ICU_D_conf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_D_conf_progress_1 * (j - 1) + i - 1])) - internal.n_ICU_D_conf_progress[shared->dim_n_ICU_D_conf_progress_123 * (l - 1) + shared->dim_n_ICU_D_conf_progress_12 * (k - 1) + shared->dim_n_ICU_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_D_unconf_4; ++l) {
            internal.aux_ICU_D_unconf[i - 1 + shared->dim_aux_ICU_D_unconf_1 * (j - 1) + shared->dim_aux_ICU_D_unconf_12 * (k - 1) + shared->dim_aux_ICU_D_unconf_123 * (l - 1)] = ICU_D_unconf[shared->dim_ICU_D_unconf_123 * (l - 1) + shared->dim_ICU_D_unconf_12 * (k - 1) + shared->dim_ICU_D_unconf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_pre_unconf_to_ICU_D_unconf[shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (l - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + i - 1] : internal.n_ICU_D_unconf_progress[shared->dim_n_ICU_D_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_D_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_D_unconf_progress_1 * (j - 1) + i - 1])) - internal.n_ICU_D_unconf_progress[shared->dim_n_ICU_D_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_D_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_delta_D_hosp; ++i) {
      internal.delta_D_hosp[i - 1] = odin_sum2<real_type>(internal.delta_D_hosp_disag.data(), i - 1, i, 0, shared->dim_delta_D_hosp_disag_2, shared->dim_delta_D_hosp_disag_1);
    }
    for (int i = 1; i <= shared->dim_delta_D_non_hosp; ++i) {
      internal.delta_D_non_hosp[i - 1] = odin_sum2<real_type>(internal.delta_D_non_hosp_disag.data(), i - 1, i, 0, shared->dim_delta_D_non_hosp_disag_2, shared->dim_delta_D_non_hosp_disag_1);
    }
    for (int i = 1; i <= shared->dim_lambda_susc_1; ++i) {
      for (int j = 1; j <= shared->dim_lambda_susc_2; ++j) {
        for (int k = 1; k <= shared->dim_lambda_susc_3; ++k) {
          internal.lambda_susc[i - 1 + shared->dim_lambda_susc_1 * (j - 1) + shared->dim_lambda_susc_12 * (k - 1)] = internal.lambda[shared->dim_lambda_1 * (j - 1) + i - 1] * shared->rel_susceptibility[shared->dim_rel_susceptibility_12 * (k - 1) + shared->dim_rel_susceptibility_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_EI_P_1; ++i) {
      for (int j = 1; j <= shared->dim_n_EI_P_2; ++j) {
        for (int k = 1; k <= shared->dim_n_EI_P_3; ++k) {
          internal.n_EI_P[i - 1 + shared->dim_n_EI_P_1 * (j - 1) + shared->dim_n_EI_P_12 * (k - 1)] = internal.n_E_progress[shared->dim_n_E_progress_123 * (k - 1) + shared->dim_n_E_progress_12 * (shared->k_E - 1) + shared->dim_n_E_progress_1 * (j - 1) + i - 1] - internal.n_EI_A[shared->dim_n_EI_A_12 * (k - 1) + shared->dim_n_EI_A_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_H_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_H_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_H_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_H_D_unconf_to_conf_4; ++l) {
            internal.n_H_D_unconf_to_conf[i - 1 + shared->dim_n_H_D_unconf_to_conf_1 * (j - 1) + shared->dim_n_H_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_H_D_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_H_D_unconf[shared->dim_aux_H_D_unconf_123 * (l - 1) + shared->dim_aux_H_D_unconf_12 * (k - 1) + shared->dim_aux_H_D_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_H_R_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_H_R_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_H_R_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_H_R_unconf_to_conf_4; ++l) {
            internal.n_H_R_unconf_to_conf[i - 1 + shared->dim_n_H_R_unconf_to_conf_1 * (j - 1) + shared->dim_n_H_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_H_R_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_H_R_unconf[shared->dim_aux_H_R_unconf_123 * (l - 1) + shared->dim_aux_H_R_unconf_12 * (k - 1) + shared->dim_aux_H_R_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_3; ++k) {
          internal.n_ICU_pre_conf_to_ICU_W_D_conf[i - 1 + shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * (j - 1) + shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_ICU_pre_conf_progress[shared->dim_n_ICU_pre_conf_progress_123 * (k - 1) + shared->dim_n_ICU_pre_conf_progress_12 * (shared->k_ICU_pre - 1) + shared->dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_conf_to_ICU_D_conf[shared->dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (k - 1) + shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + i - 1], internal.p_W_D[shared->dim_p_W_D_12 * (k - 1) + shared->dim_p_W_D_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3; ++k) {
          internal.n_ICU_pre_unconf_to_ICU_W_D_unconf[i - 1 + shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * (j - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_ICU_pre_unconf_progress[shared->dim_n_ICU_pre_unconf_progress_123 * (k - 1) + shared->dim_n_ICU_pre_unconf_progress_12 * (shared->k_ICU_pre - 1) + shared->dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_ICU_D_unconf[shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + i - 1], internal.p_W_D[shared->dim_p_W_D_12 * (k - 1) + shared->dim_p_W_D_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_pre_unconf_to_conf_4; ++l) {
            internal.n_ICU_pre_unconf_to_conf[i - 1 + shared->dim_n_ICU_pre_unconf_to_conf_1 * (j - 1) + shared->dim_n_ICU_pre_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_ICU_pre_unconf[shared->dim_aux_ICU_pre_unconf_123 * (l - 1) + shared->dim_aux_ICU_pre_unconf_12 * (k - 1) + shared->dim_aux_ICU_pre_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_G_D_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_G_D_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_G_D_3; ++k) {
          internal.n_I_C_2_to_G_D[i - 1 + shared->dim_n_I_C_2_to_G_D_1 * (j - 1) + shared->dim_n_I_C_2_to_G_D_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_I_C_2_progress[shared->dim_n_I_C_2_progress_123 * (k - 1) + shared->dim_n_I_C_2_progress_12 * (shared->k_C_2 - 1) + shared->dim_n_I_C_2_progress_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_RS[shared->dim_n_I_C_2_to_RS_12 * (k - 1) + shared->dim_n_I_C_2_to_RS_1 * (j - 1) + i - 1], internal.p_G_D[shared->dim_p_G_D_12 * (k - 1) + shared->dim_p_G_D_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_W_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_W_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_W_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_W_D_unconf_to_conf_4; ++l) {
            internal.n_W_D_unconf_to_conf[i - 1 + shared->dim_n_W_D_unconf_to_conf_1 * (j - 1) + shared->dim_n_W_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_W_D_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_W_D_unconf[shared->dim_aux_W_D_unconf_123 * (l - 1) + shared->dim_aux_W_D_unconf_12 * (k - 1) + shared->dim_aux_W_D_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_W_R_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_W_R_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_W_R_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_W_R_unconf_to_conf_4; ++l) {
            internal.n_W_R_unconf_to_conf[i - 1 + shared->dim_n_W_R_unconf_to_conf_1 * (j - 1) + shared->dim_n_W_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_W_R_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_W_R_unconf[shared->dim_aux_W_R_unconf_123 * (l - 1) + shared->dim_aux_W_R_unconf_12 * (k - 1) + shared->dim_aux_W_R_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_infection_end_1; ++i) {
      for (int j = 1; j <= shared->dim_n_infection_end_2; ++j) {
        for (int k = 1; k <= shared->dim_n_infection_end_3; ++k) {
          internal.n_infection_end[i - 1 + shared->dim_n_infection_end_1 * (j - 1) + shared->dim_n_infection_end_12 * (k - 1)] = internal.n_I_A_progress[shared->dim_n_I_A_progress_123 * (k - 1) + shared->dim_n_I_A_progress_12 * (shared->k_A - 1) + shared->dim_n_I_A_progress_1 * (j - 1) + i - 1] + internal.n_I_C_2_to_RS[shared->dim_n_I_C_2_to_RS_12 * (k - 1) + shared->dim_n_I_C_2_to_RS_1 * (j - 1) + i - 1] + internal.n_H_R_conf_progress[shared->dim_n_H_R_conf_progress_123 * (k - 1) + shared->dim_n_H_R_conf_progress_12 * (shared->k_H_R - 1) + shared->dim_n_H_R_conf_progress_1 * (j - 1) + i - 1] + internal.n_H_R_unconf_progress[shared->dim_n_H_R_unconf_progress_123 * (k - 1) + shared->dim_n_H_R_unconf_progress_12 * (shared->k_H_R - 1) + shared->dim_n_H_R_unconf_progress_1 * (j - 1) + i - 1] + internal.n_W_R_conf_progress[shared->dim_n_W_R_conf_progress_123 * (k - 1) + shared->dim_n_W_R_conf_progress_12 * (shared->k_W_R - 1) + shared->dim_n_W_R_conf_progress_1 * (j - 1) + i - 1] + internal.n_W_R_unconf_progress[shared->dim_n_W_R_unconf_progress_123 * (k - 1) + shared->dim_n_W_R_unconf_progress_12 * (shared->k_W_R - 1) + shared->dim_n_W_R_unconf_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_sero_pre_1_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_sero_pre_1_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_sero_pre_1_3; ++k) {
          for (int l = 1; l <= shared->dim_new_T_sero_pre_1_4; ++l) {
            internal.new_T_sero_pre_1[i - 1 + shared->dim_new_T_sero_pre_1_1 * (j - 1) + shared->dim_new_T_sero_pre_1_12 * (k - 1) + shared->dim_new_T_sero_pre_1_123 * (l - 1)] = T_sero_pre_1[shared->dim_T_sero_pre_1_123 * (l - 1) + shared->dim_T_sero_pre_1_12 * (k - 1) + shared->dim_T_sero_pre_1_1 * (j - 1) + i - 1] - internal.n_T_sero_pre_1_progress[shared->dim_n_T_sero_pre_1_progress_123 * (l - 1) + shared->dim_n_T_sero_pre_1_progress_12 * (k - 1) + shared->dim_n_T_sero_pre_1_progress_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_com_to_T_sero_pre[shared->dim_n_com_to_T_sero_pre_12 * (l - 1) + shared->dim_n_com_to_T_sero_pre_1 * (j - 1) + i - 1] : internal.n_T_sero_pre_1_progress[shared->dim_n_T_sero_pre_1_progress_123 * (l - 1) + shared->dim_n_T_sero_pre_1_progress_12 * (k - 1 - 1) + shared->dim_n_T_sero_pre_1_progress_1 * (j - 1) + i - 1]));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_sero_pre_2_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_sero_pre_2_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_sero_pre_2_3; ++k) {
          for (int l = 1; l <= shared->dim_new_T_sero_pre_2_4; ++l) {
            internal.new_T_sero_pre_2[i - 1 + shared->dim_new_T_sero_pre_2_1 * (j - 1) + shared->dim_new_T_sero_pre_2_12 * (k - 1) + shared->dim_new_T_sero_pre_2_123 * (l - 1)] = T_sero_pre_2[shared->dim_T_sero_pre_2_123 * (l - 1) + shared->dim_T_sero_pre_2_12 * (k - 1) + shared->dim_T_sero_pre_2_1 * (j - 1) + i - 1] - internal.n_T_sero_pre_2_progress[shared->dim_n_T_sero_pre_2_progress_123 * (l - 1) + shared->dim_n_T_sero_pre_2_progress_12 * (k - 1) + shared->dim_n_T_sero_pre_2_progress_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_com_to_T_sero_pre[shared->dim_n_com_to_T_sero_pre_12 * (l - 1) + shared->dim_n_com_to_T_sero_pre_1 * (j - 1) + i - 1] : internal.n_T_sero_pre_2_progress[shared->dim_n_T_sero_pre_2_progress_123 * (l - 1) + shared->dim_n_T_sero_pre_2_progress_12 * (k - 1 - 1) + shared->dim_n_T_sero_pre_2_progress_1 * (j - 1) + i - 1]));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_D_1; ++i) {
      for (int j = 1; j <= shared->dim_D_2; ++j) {
        state_next[shared->offset_variable_D + i - 1 + shared->dim_D_1 * (j - 1)] = D[shared->dim_D_1 * (j - 1) + i - 1] + internal.delta_D_hosp_disag[shared->dim_delta_D_hosp_disag_1 * (j - 1) + i - 1] + internal.delta_D_non_hosp_disag[shared->dim_delta_D_non_hosp_disag_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_D_hosp_1; ++i) {
      for (int j = 1; j <= shared->dim_D_hosp_2; ++j) {
        state_next[shared->offset_variable_D_hosp + i - 1 + shared->dim_D_hosp_1 * (j - 1)] = D_hosp[shared->dim_D_hosp_1 * (j - 1) + i - 1] + internal.delta_D_hosp_disag[shared->dim_delta_D_hosp_disag_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_I_C_1_1; ++i) {
      for (int j = 1; j <= shared->dim_I_C_1_2; ++j) {
        for (int k = 1; k <= shared->dim_I_C_1_3; ++k) {
          for (int l = 1; l <= shared->dim_I_C_1_4; ++l) {
            state_next[shared->offset_variable_I_C_1 + i - 1 + shared->dim_I_C_1_1 * (j - 1) + shared->dim_I_C_1_12 * (k - 1) + shared->dim_I_C_1_123 * (l - 1)] = internal.new_I_C_1[shared->dim_new_I_C_1_123 * (l - 1) + shared->dim_new_I_C_1_12 * (k - 1) + shared->dim_new_I_C_1_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_I_C_2_1; ++i) {
      for (int j = 1; j <= shared->dim_I_C_2_2; ++j) {
        for (int k = 1; k <= shared->dim_I_C_2_3; ++k) {
          for (int l = 1; l <= shared->dim_I_C_2_4; ++l) {
            state_next[shared->offset_variable_I_C_2 + i - 1 + shared->dim_I_C_2_1 * (j - 1) + shared->dim_I_C_2_12 * (k - 1) + shared->dim_I_C_2_123 * (l - 1)] = internal.new_I_C_2[shared->dim_new_I_C_2_123 * (l - 1) + shared->dim_new_I_C_2_12 * (k - 1) + shared->dim_new_I_C_2_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_PCR_neg_1; ++i) {
      for (int j = 1; j <= shared->dim_T_PCR_neg_2; ++j) {
        for (int k = 1; k <= shared->dim_T_PCR_neg_3; ++k) {
          state_next[shared->offset_variable_T_PCR_neg + i - 1 + shared->dim_T_PCR_neg_1 * (j - 1) + shared->dim_T_PCR_neg_12 * (k - 1)] = internal.new_T_PCR_neg[shared->dim_new_T_PCR_neg_12 * (k - 1) + shared->dim_new_T_PCR_neg_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_PCR_pos_1; ++i) {
      for (int j = 1; j <= shared->dim_T_PCR_pos_2; ++j) {
        for (int k = 1; k <= shared->dim_T_PCR_pos_3; ++k) {
          for (int l = 1; l <= shared->dim_T_PCR_pos_4; ++l) {
            state_next[shared->offset_variable_T_PCR_pos + i - 1 + shared->dim_T_PCR_pos_1 * (j - 1) + shared->dim_T_PCR_pos_12 * (k - 1) + shared->dim_T_PCR_pos_123 * (l - 1)] = internal.new_T_PCR_pos[shared->dim_new_T_PCR_pos_123 * (l - 1) + shared->dim_new_T_PCR_pos_12 * (k - 1) + shared->dim_new_T_PCR_pos_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_sero_neg_1_1; ++i) {
      for (int j = 1; j <= shared->dim_T_sero_neg_1_2; ++j) {
        for (int k = 1; k <= shared->dim_T_sero_neg_1_3; ++k) {
          state_next[shared->offset_variable_T_sero_neg_1 + i - 1 + shared->dim_T_sero_neg_1_1 * (j - 1) + shared->dim_T_sero_neg_1_12 * (k - 1)] = internal.new_T_sero_neg_1[shared->dim_new_T_sero_neg_1_12 * (k - 1) + shared->dim_new_T_sero_neg_1_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_sero_neg_2_1; ++i) {
      for (int j = 1; j <= shared->dim_T_sero_neg_2_2; ++j) {
        for (int k = 1; k <= shared->dim_T_sero_neg_2_3; ++k) {
          state_next[shared->offset_variable_T_sero_neg_2 + i - 1 + shared->dim_T_sero_neg_2_1 * (j - 1) + shared->dim_T_sero_neg_2_12 * (k - 1)] = internal.new_T_sero_neg_2[shared->dim_new_T_sero_neg_2_12 * (k - 1) + shared->dim_new_T_sero_neg_2_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_sero_pos_1_1; ++i) {
      for (int j = 1; j <= shared->dim_T_sero_pos_1_2; ++j) {
        for (int k = 1; k <= shared->dim_T_sero_pos_1_3; ++k) {
          for (int l = 1; l <= shared->dim_T_sero_pos_1_4; ++l) {
            state_next[shared->offset_variable_T_sero_pos_1 + i - 1 + shared->dim_T_sero_pos_1_1 * (j - 1) + shared->dim_T_sero_pos_1_12 * (k - 1) + shared->dim_T_sero_pos_1_123 * (l - 1)] = internal.new_T_sero_pos_1[shared->dim_new_T_sero_pos_1_123 * (l - 1) + shared->dim_new_T_sero_pos_1_12 * (k - 1) + shared->dim_new_T_sero_pos_1_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_sero_pos_2_1; ++i) {
      for (int j = 1; j <= shared->dim_T_sero_pos_2_2; ++j) {
        for (int k = 1; k <= shared->dim_T_sero_pos_2_3; ++k) {
          for (int l = 1; l <= shared->dim_T_sero_pos_2_4; ++l) {
            state_next[shared->offset_variable_T_sero_pos_2 + i - 1 + shared->dim_T_sero_pos_2_1 * (j - 1) + shared->dim_T_sero_pos_2_12 * (k - 1) + shared->dim_T_sero_pos_2_123 * (l - 1)] = internal.new_T_sero_pos_2[shared->dim_new_T_sero_pos_2_123 * (l - 1) + shared->dim_new_T_sero_pos_2_12 * (k - 1) + shared->dim_new_T_sero_pos_2_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    state_next[78] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 0, 1, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) * 3 / (real_type) 5 + odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 1, 18, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123);
    state_next[81] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 5, 7, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) + odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 17, 18, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) * 2 / (real_type) 8;
    state_next[82] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 7, 9, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) + odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 17, 18, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) * 2 / (real_type) 8;
    state_next[83] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 9, 11, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) + odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 17, 18, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) * 2 / (real_type) 8;
    state_next[84] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 11, 13, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) + odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 17, 18, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123) * 2 / (real_type) 8;
    state_next[80] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 1, 5, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123);
    state_next[85] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 13, 17, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123);
    state_next[79] = odin_sum4<real_type>(internal.new_T_PCR_pos.data(), 1, 18, 0, shared->dim_new_T_PCR_pos_2, 0, shared->dim_new_T_PCR_pos_3, 0, shared->dim_new_T_PCR_pos_4, shared->dim_new_T_PCR_pos_1, shared->dim_new_T_PCR_pos_12, shared->dim_new_T_PCR_pos_123);
    state_next[56] = odin_sum4<real_type>(internal.new_T_sero_pos_1.data(), 3, 13, 0, shared->dim_new_T_sero_pos_1_2, 0, shared->dim_new_T_sero_pos_1_3, 0, shared->dim_new_T_sero_pos_1_4, shared->dim_new_T_sero_pos_1_1, shared->dim_new_T_sero_pos_1_12, shared->dim_new_T_sero_pos_1_123);
    state_next[57] = odin_sum4<real_type>(internal.new_T_sero_pos_2.data(), 3, 13, 0, shared->dim_new_T_sero_pos_2_2, 0, shared->dim_new_T_sero_pos_2_3, 0, shared->dim_new_T_sero_pos_2_4, shared->dim_new_T_sero_pos_2_1, shared->dim_new_T_sero_pos_2_12, shared->dim_new_T_sero_pos_2_123);
    for (int i = 1; i <= shared->dim_vacc_skip_probability_1; ++i) {
      for (int j = 1; j <= shared->dim_vacc_skip_probability_2; ++j) {
        internal.vacc_skip_probability[i - 1 + shared->dim_vacc_skip_probability_1 * (j - 1)] = ((shared->vacc_skip_dose_inverse[j - 1] > 0 ? ((internal.vacc_skip_n_candidates[shared->dim_vacc_skip_n_candidates_1 * (shared->vacc_skip_dose_inverse[j - 1] - 1) + i - 1] > 0 ? dust::math::min(internal.vacc_skip_attempted_doses[shared->dim_vacc_skip_attempted_doses_1 * (shared->vacc_skip_dose_inverse[j - 1] - 1) + i - 1] / (real_type) internal.vacc_skip_n_candidates[shared->dim_vacc_skip_n_candidates_1 * (shared->vacc_skip_dose_inverse[j - 1] - 1) + i - 1], static_cast<real_type>(1)) : 0)) : 1 - dust::math::exp(- shared->vacc_skip_progression_rate_base[j - 1] * shared->dt)));
      }
    }
    for (int i = 1; i <= shared->dim_vaccine_probability_1; ++i) {
      for (int j = 1; j <= shared->dim_vaccine_probability_2; ++j) {
        internal.vaccine_probability[i - 1 + shared->dim_vaccine_probability_1 * (j - 1)] = ((shared->index_dose_inverse[j - 1] > 0 ? internal.vaccine_probability_doses[shared->dim_vaccine_probability_doses_1 * (shared->index_dose_inverse[j - 1] - 1) + i - 1] : 1 - dust::math::exp(- shared->vaccine_progression_rate_base[shared->dim_vaccine_progression_rate_base_1 * (j - 1) + i - 1] * shared->dt)));
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_W_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_W_D_conf_4; ++l) {
            internal.aux_ICU_W_D_conf[i - 1 + shared->dim_aux_ICU_W_D_conf_1 * (j - 1) + shared->dim_aux_ICU_W_D_conf_12 * (k - 1) + shared->dim_aux_ICU_W_D_conf_123 * (l - 1)] = ICU_W_D_conf[shared->dim_ICU_W_D_conf_123 * (l - 1) + shared->dim_ICU_W_D_conf_12 * (k - 1) + shared->dim_ICU_W_D_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_pre_conf_to_ICU_W_D_conf[shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 * (l - 1) + shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * (j - 1) + i - 1] : internal.n_ICU_W_D_conf_progress[shared->dim_n_ICU_W_D_conf_progress_123 * (l - 1) + shared->dim_n_ICU_W_D_conf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_W_D_conf_progress_1 * (j - 1) + i - 1])) - internal.n_ICU_W_D_conf_progress[shared->dim_n_ICU_W_D_conf_progress_123 * (l - 1) + shared->dim_n_ICU_W_D_conf_progress_12 * (k - 1) + shared->dim_n_ICU_W_D_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_W_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_W_D_unconf_4; ++l) {
            internal.aux_ICU_W_D_unconf[i - 1 + shared->dim_aux_ICU_W_D_unconf_1 * (j - 1) + shared->dim_aux_ICU_W_D_unconf_12 * (k - 1) + shared->dim_aux_ICU_W_D_unconf_123 * (l - 1)] = ICU_W_D_unconf[shared->dim_ICU_W_D_unconf_123 * (l - 1) + shared->dim_ICU_W_D_unconf_12 * (k - 1) + shared->dim_ICU_W_D_unconf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_pre_unconf_to_ICU_W_D_unconf[shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 * (l - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * (j - 1) + i - 1] : internal.n_ICU_W_D_unconf_progress[shared->dim_n_ICU_W_D_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_W_D_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + i - 1])) - internal.n_ICU_W_D_unconf_progress[shared->dim_n_ICU_W_D_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_W_D_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_W_D_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    real_type delta_D_carehomes_tot = internal.delta_D_non_hosp[18];
    real_type delta_D_comm_0_49 = odin_sum1<real_type>(internal.delta_D_non_hosp.data(), 0, 10) + internal.delta_D_non_hosp[17] * 3 / (real_type) 8;
    real_type delta_D_comm_50_54 = internal.delta_D_non_hosp[10] + internal.delta_D_non_hosp[17] * 1 / (real_type) 8;
    real_type delta_D_comm_55_59 = internal.delta_D_non_hosp[11] + internal.delta_D_non_hosp[17] * 2 / (real_type) 8;
    real_type delta_D_comm_60_64 = internal.delta_D_non_hosp[12] + internal.delta_D_non_hosp[17] * 2 / (real_type) 8;
    real_type delta_D_comm_65_69 = internal.delta_D_non_hosp[13];
    real_type delta_D_comm_70_74 = internal.delta_D_non_hosp[14];
    real_type delta_D_comm_75_79 = internal.delta_D_non_hosp[15];
    real_type delta_D_comm_80_plus = internal.delta_D_non_hosp[16];
    real_type delta_D_comm_tot = odin_sum1<real_type>(internal.delta_D_non_hosp.data(), 0, 18);
    real_type delta_D_hosp_0_49_tot = odin_sum1<real_type>(internal.delta_D_hosp.data(), 0, 10) + internal.delta_D_hosp[17] * 3 / (real_type) 8;
    real_type delta_D_hosp_50_54_tot = internal.delta_D_hosp[10] + internal.delta_D_hosp[17] * 1 / (real_type) 8;
    real_type delta_D_hosp_55_59_tot = internal.delta_D_hosp[11] + internal.delta_D_hosp[17] * 2 / (real_type) 8;
    real_type delta_D_hosp_60_64_tot = internal.delta_D_hosp[12] + internal.delta_D_hosp[17] * 2 / (real_type) 8;
    real_type delta_D_hosp_65_69_tot = internal.delta_D_hosp[13] + internal.delta_D_hosp[18] * static_cast<real_type>(0.050000000000000003);
    real_type delta_D_hosp_70_74_tot = internal.delta_D_hosp[14] + internal.delta_D_hosp[18] * static_cast<real_type>(0.050000000000000003);
    real_type delta_D_hosp_75_79_tot = internal.delta_D_hosp[15] + internal.delta_D_hosp[18] * static_cast<real_type>(0.14999999999999999);
    real_type delta_D_hosp_80_plus_tot = internal.delta_D_hosp[16] + internal.delta_D_hosp[18] * static_cast<real_type>(0.75);
    real_type delta_D_hosp_tot = odin_sum1<real_type>(internal.delta_D_hosp.data(), 0, shared->dim_delta_D_hosp);
    for (int i = 1; i <= shared->dim_n_ICU_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_D_unconf_to_conf_4; ++l) {
            internal.n_ICU_D_unconf_to_conf[i - 1 + shared->dim_n_ICU_D_unconf_to_conf_1 * (j - 1) + shared->dim_n_ICU_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_D_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_ICU_D_unconf[shared->dim_aux_ICU_D_unconf_123 * (l - 1) + shared->dim_aux_ICU_D_unconf_12 * (k - 1) + shared->dim_aux_ICU_D_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_3; ++k) {
          internal.n_ICU_pre_conf_to_ICU_W_R_conf[i - 1 + shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * (j - 1) + shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_12 * (k - 1)] = internal.n_ICU_pre_conf_progress[shared->dim_n_ICU_pre_conf_progress_123 * (k - 1) + shared->dim_n_ICU_pre_conf_progress_12 * (shared->k_ICU_pre - 1) + shared->dim_n_ICU_pre_conf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_conf_to_ICU_D_conf[shared->dim_n_ICU_pre_conf_to_ICU_D_conf_12 * (k - 1) + shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_conf_to_ICU_W_D_conf[shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 * (k - 1) + shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3; ++k) {
          internal.n_ICU_pre_unconf_to_ICU_W_R_unconf[i - 1 + shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * (j - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12 * (k - 1)] = internal.n_ICU_pre_unconf_progress[shared->dim_n_ICU_pre_unconf_progress_123 * (k - 1) + shared->dim_n_ICU_pre_unconf_progress_12 * (shared->k_ICU_pre - 1) + shared->dim_n_ICU_pre_unconf_progress_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_ICU_D_unconf[shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_ICU_W_D_unconf[shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_hosp_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_hosp_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_hosp_3; ++k) {
          internal.n_I_C_2_to_hosp[i - 1 + shared->dim_n_I_C_2_to_hosp_1 * (j - 1) + shared->dim_n_I_C_2_to_hosp_12 * (k - 1)] = internal.n_I_C_2_progress[shared->dim_n_I_C_2_progress_123 * (k - 1) + shared->dim_n_I_C_2_progress_12 * (shared->k_C_2 - 1) + shared->dim_n_I_C_2_progress_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_RS[shared->dim_n_I_C_2_to_RS_12 * (k - 1) + shared->dim_n_I_C_2_to_RS_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_G_D[shared->dim_n_I_C_2_to_G_D_12 * (k - 1) + shared->dim_n_I_C_2_to_G_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_infected_to_R_1; ++i) {
      for (int j = 1; j <= shared->dim_n_infected_to_R_2; ++j) {
        for (int k = 1; k <= shared->dim_n_infected_to_R_3; ++k) {
          internal.n_infected_to_R[i - 1 + shared->dim_n_infected_to_R_1 * (j - 1) + shared->dim_n_infected_to_R_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_infection_end[shared->dim_n_infection_end_12 * (k - 1) + shared->dim_n_infection_end_1 * (j - 1) + i - 1], internal.p_R[shared->dim_p_R_12 * (k - 1) + shared->dim_p_R_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_G_D_1; ++i) {
      for (int j = 1; j <= shared->dim_new_G_D_2; ++j) {
        for (int k = 1; k <= shared->dim_new_G_D_3; ++k) {
          for (int l = 1; l <= shared->dim_new_G_D_4; ++l) {
            internal.new_G_D[i - 1 + shared->dim_new_G_D_1 * (j - 1) + shared->dim_new_G_D_12 * (k - 1) + shared->dim_new_G_D_123 * (l - 1)] = G_D[shared->dim_G_D_123 * (l - 1) + shared->dim_G_D_12 * (k - 1) + shared->dim_G_D_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_2_to_G_D[shared->dim_n_I_C_2_to_G_D_12 * (l - 1) + shared->dim_n_I_C_2_to_G_D_1 * (j - 1) + i - 1] : internal.n_G_D_progress[shared->dim_n_G_D_progress_123 * (l - 1) + shared->dim_n_G_D_progress_12 * (k - 1 - 1) + shared->dim_n_G_D_progress_1 * (j - 1) + i - 1])) - internal.n_G_D_progress[shared->dim_n_G_D_progress_123 * (l - 1) + shared->dim_n_G_D_progress_12 * (k - 1) + shared->dim_n_G_D_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_W_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_W_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_W_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_W_D_conf_4; ++l) {
            internal.new_W_D_conf[i - 1 + shared->dim_new_W_D_conf_1 * (j - 1) + shared->dim_new_W_D_conf_12 * (k - 1) + shared->dim_new_W_D_conf_123 * (l - 1)] = internal.aux_W_D_conf[shared->dim_aux_W_D_conf_123 * (l - 1) + shared->dim_aux_W_D_conf_12 * (k - 1) + shared->dim_aux_W_D_conf_1 * (j - 1) + i - 1] + internal.n_W_D_unconf_to_conf[shared->dim_n_W_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_W_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_W_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_W_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_W_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_W_D_unconf_4; ++l) {
            internal.new_W_D_unconf[i - 1 + shared->dim_new_W_D_unconf_1 * (j - 1) + shared->dim_new_W_D_unconf_12 * (k - 1) + shared->dim_new_W_D_unconf_123 * (l - 1)] = internal.aux_W_D_unconf[shared->dim_aux_W_D_unconf_123 * (l - 1) + shared->dim_aux_W_D_unconf_12 * (k - 1) + shared->dim_aux_W_D_unconf_1 * (j - 1) + i - 1] - internal.n_W_D_unconf_to_conf[shared->dim_n_W_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_W_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_W_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_W_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_W_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_W_R_conf_4; ++l) {
            internal.new_W_R_conf[i - 1 + shared->dim_new_W_R_conf_1 * (j - 1) + shared->dim_new_W_R_conf_12 * (k - 1) + shared->dim_new_W_R_conf_123 * (l - 1)] = internal.aux_W_R_conf[shared->dim_aux_W_R_conf_123 * (l - 1) + shared->dim_aux_W_R_conf_12 * (k - 1) + shared->dim_aux_W_R_conf_1 * (j - 1) + i - 1] + internal.n_W_R_unconf_to_conf[shared->dim_n_W_R_unconf_to_conf_123 * (l - 1) + shared->dim_n_W_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_W_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_W_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_W_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_W_R_unconf_4; ++l) {
            internal.new_W_R_unconf[i - 1 + shared->dim_new_W_R_unconf_1 * (j - 1) + shared->dim_new_W_R_unconf_12 * (k - 1) + shared->dim_new_W_R_unconf_123 * (l - 1)] = internal.aux_W_R_unconf[shared->dim_aux_W_R_unconf_123 * (l - 1) + shared->dim_aux_W_R_unconf_12 * (k - 1) + shared->dim_aux_W_R_unconf_1 * (j - 1) + i - 1] - internal.n_W_R_unconf_to_conf[shared->dim_n_W_R_unconf_to_conf_123 * (l - 1) + shared->dim_n_W_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    real_type new_sympt_cases = odin_sum1<real_type>(internal.n_EI_P.data(), 0, shared->dim_n_EI_P);
    real_type new_sympt_cases_15_24 = odin_sum3<real_type>(internal.n_EI_P.data(), 3, 5, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12);
    real_type new_sympt_cases_25_49 = odin_sum3<real_type>(internal.n_EI_P.data(), 5, 10, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) + (odin_sum3<real_type>(internal.n_EI_P.data(), 17, 18, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) / (real_type) 8) * 5;
    real_type new_sympt_cases_50_64 = odin_sum3<real_type>(internal.n_EI_P.data(), 10, 13, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) + (odin_sum3<real_type>(internal.n_EI_P.data(), 17, 18, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) / (real_type) 8) * 3;
    real_type new_sympt_cases_65_79 = odin_sum3<real_type>(internal.n_EI_P.data(), 13, 16, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) + (odin_sum3<real_type>(internal.n_EI_P.data(), 18, 19, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) * static_cast<real_type>(0.25));
    real_type new_sympt_cases_80_plus = odin_sum3<real_type>(internal.n_EI_P.data(), 16, 17, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) + (odin_sum3<real_type>(internal.n_EI_P.data(), 18, 19, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) * static_cast<real_type>(0.75));
    real_type new_sympt_cases_non_variant = odin_sum3<real_type>(internal.n_EI_P.data(), 0, shared->dim_n_EI_P_1, 0, 1, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) + ((shared->n_real_strains == 2 ? odin_sum3<real_type>(internal.n_EI_P.data(), 0, shared->dim_n_EI_P_1, 3, 4, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) : 0));
    real_type new_sympt_cases_non_variant_over25 = odin_sum3<real_type>(internal.n_EI_P.data(), 5, shared->n_groups, 0, 1, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) + ((shared->n_real_strains == 2 ? odin_sum3<real_type>(internal.n_EI_P.data(), 5, shared->n_groups, 3, 4, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12) : 0));
    real_type new_sympt_cases_over25 = odin_sum3<real_type>(internal.n_EI_P.data(), 5, shared->n_groups, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12);
    real_type new_sympt_cases_under15 = odin_sum3<real_type>(internal.n_EI_P.data(), 0, 3, 0, shared->dim_n_EI_P_2, 0, shared->dim_n_EI_P_3, shared->dim_n_EI_P_1, shared->dim_n_EI_P_12);
    for (int i = 1; i <= shared->dim_p_E_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_p_E_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_p_E_next_vacc_class_3; ++k) {
          for (int l = 1; l <= shared->dim_p_E_next_vacc_class_4; ++l) {
            internal.p_E_next_vacc_class[i - 1 + shared->dim_p_E_next_vacc_class_1 * (j - 1) + shared->dim_p_E_next_vacc_class_12 * (k - 1) + shared->dim_p_E_next_vacc_class_123 * (l - 1)] = internal.vaccine_probability[shared->dim_vaccine_probability_1 * (l - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_E_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_p_E_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_p_E_vacc_skip_3; ++k) {
          for (int l = 1; l <= shared->dim_p_E_vacc_skip_4; ++l) {
            internal.p_E_vacc_skip[i - 1 + shared->dim_p_E_vacc_skip_1 * (j - 1) + shared->dim_p_E_vacc_skip_12 * (k - 1) + shared->dim_p_E_vacc_skip_123 * (l - 1)] = internal.vacc_skip_probability[shared->dim_vacc_skip_probability_1 * (l - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_I_A_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_p_I_A_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_p_I_A_next_vacc_class_3; ++k) {
          for (int l = 1; l <= shared->dim_p_I_A_next_vacc_class_4; ++l) {
            internal.p_I_A_next_vacc_class[i - 1 + shared->dim_p_I_A_next_vacc_class_1 * (j - 1) + shared->dim_p_I_A_next_vacc_class_12 * (k - 1) + shared->dim_p_I_A_next_vacc_class_123 * (l - 1)] = internal.vaccine_probability[shared->dim_vaccine_probability_1 * (l - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_I_A_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_p_I_A_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_p_I_A_vacc_skip_3; ++k) {
          for (int l = 1; l <= shared->dim_p_I_A_vacc_skip_4; ++l) {
            internal.p_I_A_vacc_skip[i - 1 + shared->dim_p_I_A_vacc_skip_1 * (j - 1) + shared->dim_p_I_A_vacc_skip_12 * (k - 1) + shared->dim_p_I_A_vacc_skip_123 * (l - 1)] = internal.vacc_skip_probability[shared->dim_vacc_skip_probability_1 * (l - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_I_P_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_p_I_P_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_p_I_P_next_vacc_class_3; ++k) {
          for (int l = 1; l <= shared->dim_p_I_P_next_vacc_class_4; ++l) {
            internal.p_I_P_next_vacc_class[i - 1 + shared->dim_p_I_P_next_vacc_class_1 * (j - 1) + shared->dim_p_I_P_next_vacc_class_12 * (k - 1) + shared->dim_p_I_P_next_vacc_class_123 * (l - 1)] = internal.vaccine_probability[shared->dim_vaccine_probability_1 * (l - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_I_P_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_p_I_P_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_p_I_P_vacc_skip_3; ++k) {
          for (int l = 1; l <= shared->dim_p_I_P_vacc_skip_4; ++l) {
            internal.p_I_P_vacc_skip[i - 1 + shared->dim_p_I_P_vacc_skip_1 * (j - 1) + shared->dim_p_I_P_vacc_skip_12 * (k - 1) + shared->dim_p_I_P_vacc_skip_123 * (l - 1)] = internal.vacc_skip_probability[shared->dim_vacc_skip_probability_1 * (l - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_R_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_p_R_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_p_R_next_vacc_class_3; ++k) {
          internal.p_R_next_vacc_class[i - 1 + shared->dim_p_R_next_vacc_class_1 * (j - 1) + shared->dim_p_R_next_vacc_class_12 * (k - 1)] = internal.vaccine_probability[shared->dim_vaccine_probability_1 * (k - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_R_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_p_R_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_p_R_vacc_skip_3; ++k) {
          internal.p_R_vacc_skip[i - 1 + shared->dim_p_R_vacc_skip_1 * (j - 1) + shared->dim_p_R_vacc_skip_12 * (k - 1)] = internal.vacc_skip_probability[shared->dim_vacc_skip_probability_1 * (k - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_SE_1; ++i) {
      for (int j = 1; j <= shared->dim_p_SE_2; ++j) {
        internal.p_SE[i - 1 + shared->dim_p_SE_1 * (j - 1)] = 1 - dust::math::exp(- odin_sum3<real_type>(internal.lambda_susc.data(), i - 1, i, 0, shared->dim_lambda_susc_2, j - 1, j, shared->dim_lambda_susc_1, shared->dim_lambda_susc_12) * shared->dt);
      }
    }
    for (int i = 1; i <= shared->dim_p_S_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_p_S_next_vacc_class_2; ++j) {
        internal.p_S_next_vacc_class[i - 1 + shared->dim_p_S_next_vacc_class_1 * (j - 1)] = internal.vaccine_probability[shared->dim_vaccine_probability_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_p_S_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_p_S_vacc_skip_2; ++j) {
        internal.p_S_vacc_skip[i - 1 + shared->dim_p_S_vacc_skip_1 * (j - 1)] = internal.vacc_skip_probability[shared->dim_vacc_skip_probability_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_rate_RE_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_rate_RE_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_rate_RE_progress_3; ++k) {
          internal.rate_RE_progress[i - 1 + shared->dim_rate_RE_progress_1 * (j - 1) + shared->dim_rate_RE_progress_12 * (k - 1)] = (shared->n_strains == 1 ? 0 : internal.lambda_susc[shared->dim_lambda_susc_12 * (k - 1) + shared->dim_lambda_susc_1 * (3 - j - 1) + i - 1] * (1 - shared->cross_immunity[j - 1]));
        }
      }
    }
    for (int i = 1; i <= shared->dim_rel_foi_strain_1; ++i) {
      for (int j = 1; j <= shared->dim_rel_foi_strain_2; ++j) {
        for (int k = 1; k <= shared->dim_rel_foi_strain_3; ++k) {
          internal.rel_foi_strain[i - 1 + shared->dim_rel_foi_strain_1 * (j - 1) + shared->dim_rel_foi_strain_12 * (k - 1)] = ((odin_sum3<real_type>(internal.lambda_susc.data(), i - 1, i, 0, shared->dim_lambda_susc_2, k - 1, k, shared->dim_lambda_susc_1, shared->dim_lambda_susc_12) == 0 ? ((j == 1 ? 1 : 0)) : dust::math::min(internal.lambda_susc[shared->dim_lambda_susc_12 * (k - 1) + shared->dim_lambda_susc_1 * (j - 1) + i - 1] / (real_type) odin_sum3<real_type>(internal.lambda_susc.data(), i - 1, i, 0, shared->dim_lambda_susc_2, k - 1, k, shared->dim_lambda_susc_1, shared->dim_lambda_susc_12), static_cast<real_type>(1))));
        }
      }
    }
    for (int i = 1; i <= shared->dim_D_non_hosp; ++i) {
      state_next[shared->offset_variable_D_non_hosp + i - 1] = D_non_hosp[i - 1] + internal.delta_D_non_hosp[i - 1];
    }
    for (int i = 1; i <= shared->dim_T_sero_pre_1_1; ++i) {
      for (int j = 1; j <= shared->dim_T_sero_pre_1_2; ++j) {
        for (int k = 1; k <= shared->dim_T_sero_pre_1_3; ++k) {
          for (int l = 1; l <= shared->dim_T_sero_pre_1_4; ++l) {
            state_next[shared->offset_variable_T_sero_pre_1 + i - 1 + shared->dim_T_sero_pre_1_1 * (j - 1) + shared->dim_T_sero_pre_1_12 * (k - 1) + shared->dim_T_sero_pre_1_123 * (l - 1)] = internal.new_T_sero_pre_1[shared->dim_new_T_sero_pre_1_123 * (l - 1) + shared->dim_new_T_sero_pre_1_12 * (k - 1) + shared->dim_new_T_sero_pre_1_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_sero_pre_2_1; ++i) {
      for (int j = 1; j <= shared->dim_T_sero_pre_2_2; ++j) {
        for (int k = 1; k <= shared->dim_T_sero_pre_2_3; ++k) {
          for (int l = 1; l <= shared->dim_T_sero_pre_2_4; ++l) {
            state_next[shared->offset_variable_T_sero_pre_2 + i - 1 + shared->dim_T_sero_pre_2_1 * (j - 1) + shared->dim_T_sero_pre_2_12 * (k - 1) + shared->dim_T_sero_pre_2_123 * (l - 1)] = internal.new_T_sero_pre_2[shared->dim_new_T_sero_pre_2_123 * (l - 1) + shared->dim_new_T_sero_pre_2_12 * (k - 1) + shared->dim_new_T_sero_pre_2_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_tmp_vaccine_probability_1; ++i) {
      for (int j = 1; j <= shared->dim_tmp_vaccine_probability_2; ++j) {
        state_next[shared->offset_variable_tmp_vaccine_probability + i - 1 + shared->dim_tmp_vaccine_probability_1 * (j - 1)] = internal.vaccine_probability[shared->dim_vaccine_probability_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_W_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_W_R_conf_4; ++l) {
            internal.aux_ICU_W_R_conf[i - 1 + shared->dim_aux_ICU_W_R_conf_1 * (j - 1) + shared->dim_aux_ICU_W_R_conf_12 * (k - 1) + shared->dim_aux_ICU_W_R_conf_123 * (l - 1)] = ICU_W_R_conf[shared->dim_ICU_W_R_conf_123 * (l - 1) + shared->dim_ICU_W_R_conf_12 * (k - 1) + shared->dim_ICU_W_R_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_pre_conf_to_ICU_W_R_conf[shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_12 * (l - 1) + shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * (j - 1) + i - 1] : internal.n_ICU_W_R_conf_progress[shared->dim_n_ICU_W_R_conf_progress_123 * (l - 1) + shared->dim_n_ICU_W_R_conf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_W_R_conf_progress_1 * (j - 1) + i - 1])) - internal.n_ICU_W_R_conf_progress[shared->dim_n_ICU_W_R_conf_progress_123 * (l - 1) + shared->dim_n_ICU_W_R_conf_progress_12 * (k - 1) + shared->dim_n_ICU_W_R_conf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_aux_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_aux_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_aux_ICU_W_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_aux_ICU_W_R_unconf_4; ++l) {
            internal.aux_ICU_W_R_unconf[i - 1 + shared->dim_aux_ICU_W_R_unconf_1 * (j - 1) + shared->dim_aux_ICU_W_R_unconf_12 * (k - 1) + shared->dim_aux_ICU_W_R_unconf_123 * (l - 1)] = ICU_W_R_unconf[shared->dim_ICU_W_R_unconf_123 * (l - 1) + shared->dim_ICU_W_R_unconf_12 * (k - 1) + shared->dim_ICU_W_R_unconf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_ICU_pre_unconf_to_ICU_W_R_unconf[shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12 * (l - 1) + shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * (j - 1) + i - 1] : internal.n_ICU_W_R_unconf_progress[shared->dim_n_ICU_W_R_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_W_R_unconf_progress_12 * (k - 1 - 1) + shared->dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + i - 1])) - internal.n_ICU_W_R_unconf_progress[shared->dim_n_ICU_W_R_unconf_progress_123 * (l - 1) + shared->dim_n_ICU_W_R_unconf_progress_12 * (k - 1) + shared->dim_n_ICU_W_R_unconf_progress_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    real_type delta_D_tot = delta_D_hosp_tot + delta_D_comm_tot + delta_D_carehomes_tot;
    for (int i = 1; i <= shared->dim_delta_hospitalisations_age; ++i) {
      internal.delta_hospitalisations_age[i - 1] = odin_sum3<real_type>(internal.n_I_C_2_to_hosp.data(), i - 1, i, 0, shared->dim_n_I_C_2_to_hosp_2, 0, shared->dim_n_I_C_2_to_hosp_3, shared->dim_n_I_C_2_to_hosp_1, shared->dim_n_I_C_2_to_hosp_12);
    }
    for (int i = 1; i <= shared->dim_delta_hospitalisations_strain; ++i) {
      internal.delta_hospitalisations_strain[i - 1] = odin_sum3<real_type>(internal.n_I_C_2_to_hosp.data(), 0, shared->dim_n_I_C_2_to_hosp_1, i - 1, i, 0, shared->dim_n_I_C_2_to_hosp_3, shared->dim_n_I_C_2_to_hosp_1, shared->dim_n_I_C_2_to_hosp_12);
    }
    real_type delta_hospitalisations_total = odin_sum1<real_type>(internal.n_I_C_2_to_hosp.data(), 0, shared->dim_n_I_C_2_to_hosp);
    for (int i = 1; i <= shared->dim_n_E_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_n_E_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_n_E_next_vacc_class_3; ++k) {
          for (int l = 1; l <= shared->dim_n_E_next_vacc_class_4; ++l) {
            internal.n_E_next_vacc_class[i - 1 + shared->dim_n_E_next_vacc_class_1 * (j - 1) + shared->dim_n_E_next_vacc_class_12 * (k - 1) + shared->dim_n_E_next_vacc_class_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, E[shared->dim_E_123 * (l - 1) + shared->dim_E_12 * (k - 1) + shared->dim_E_1 * (j - 1) + i - 1] - internal.n_E_progress[shared->dim_n_E_progress_123 * (l - 1) + shared->dim_n_E_progress_12 * (k - 1) + shared->dim_n_E_progress_1 * (j - 1) + i - 1], internal.p_E_next_vacc_class[shared->dim_p_E_next_vacc_class_123 * (l - 1) + shared->dim_p_E_next_vacc_class_12 * (k - 1) + shared->dim_p_E_next_vacc_class_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_W_D_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_W_D_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_W_D_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_W_D_unconf_to_conf_4; ++l) {
            internal.n_ICU_W_D_unconf_to_conf[i - 1 + shared->dim_n_ICU_W_D_unconf_to_conf_1 * (j - 1) + shared->dim_n_ICU_W_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_W_D_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_ICU_W_D_unconf[shared->dim_aux_ICU_W_D_unconf_123 * (l - 1) + shared->dim_aux_ICU_W_D_unconf_12 * (k - 1) + shared->dim_aux_ICU_W_D_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_A_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_A_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_A_next_vacc_class_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_A_next_vacc_class_4; ++l) {
            internal.n_I_A_next_vacc_class[i - 1 + shared->dim_n_I_A_next_vacc_class_1 * (j - 1) + shared->dim_n_I_A_next_vacc_class_12 * (k - 1) + shared->dim_n_I_A_next_vacc_class_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_A[shared->dim_I_A_123 * (l - 1) + shared->dim_I_A_12 * (k - 1) + shared->dim_I_A_1 * (j - 1) + i - 1] - internal.n_I_A_progress[shared->dim_n_I_A_progress_123 * (l - 1) + shared->dim_n_I_A_progress_12 * (k - 1) + shared->dim_n_I_A_progress_1 * (j - 1) + i - 1], internal.p_I_A_next_vacc_class[shared->dim_p_I_A_next_vacc_class_123 * (l - 1) + shared->dim_p_I_A_next_vacc_class_12 * (k - 1) + shared->dim_p_I_A_next_vacc_class_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_ICU_pre_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_ICU_pre_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_ICU_pre_3; ++k) {
          internal.n_I_C_2_to_ICU_pre[i - 1 + shared->dim_n_I_C_2_to_ICU_pre_1 * (j - 1) + shared->dim_n_I_C_2_to_ICU_pre_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_I_C_2_to_hosp[shared->dim_n_I_C_2_to_hosp_12 * (k - 1) + shared->dim_n_I_C_2_to_hosp_1 * (j - 1) + i - 1], internal.p_ICU[shared->dim_p_ICU_12 * (k - 1) + shared->dim_p_ICU_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_P_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_P_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_P_next_vacc_class_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_P_next_vacc_class_4; ++l) {
            internal.n_I_P_next_vacc_class[i - 1 + shared->dim_n_I_P_next_vacc_class_1 * (j - 1) + shared->dim_n_I_P_next_vacc_class_12 * (k - 1) + shared->dim_n_I_P_next_vacc_class_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_P[shared->dim_I_P_123 * (l - 1) + shared->dim_I_P_12 * (k - 1) + shared->dim_I_P_1 * (j - 1) + i - 1] - internal.n_I_P_progress[shared->dim_n_I_P_progress_123 * (l - 1) + shared->dim_n_I_P_progress_12 * (k - 1) + shared->dim_n_I_P_progress_1 * (j - 1) + i - 1], internal.p_I_P_next_vacc_class[shared->dim_p_I_P_next_vacc_class_123 * (l - 1) + shared->dim_p_I_P_next_vacc_class_12 * (k - 1) + shared->dim_p_I_P_next_vacc_class_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_S_progress_tot_1; ++i) {
      for (int j = 1; j <= shared->dim_n_S_progress_tot_2; ++j) {
        internal.n_S_progress_tot[i - 1 + shared->dim_n_S_progress_tot_1 * (j - 1)] = dust::random::binomial<real_type>(rng_state, S[shared->dim_S_1 * (j - 1) + i - 1], internal.p_SE[shared->dim_p_SE_1 * (j - 1) + i - 1]);
      }
    }
    for (int i = 1; i <= shared->dim_n_infected_to_S_1; ++i) {
      for (int j = 1; j <= shared->dim_n_infected_to_S_2; ++j) {
        for (int k = 1; k <= shared->dim_n_infected_to_S_3; ++k) {
          internal.n_infected_to_S[i - 1 + shared->dim_n_infected_to_S_1 * (j - 1) + shared->dim_n_infected_to_S_12 * (k - 1)] = internal.n_infection_end[shared->dim_n_infection_end_12 * (k - 1) + shared->dim_n_infection_end_1 * (j - 1) + i - 1] - internal.n_infected_to_R[shared->dim_n_infected_to_R_12 * (k - 1) + shared->dim_n_infected_to_R_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_HFR_disag_weighted_inc_1; ++i) {
      for (int j = 1; j <= shared->dim_new_HFR_disag_weighted_inc_2; ++j) {
        for (int k = 1; k <= shared->dim_new_HFR_disag_weighted_inc_3; ++k) {
          internal.new_HFR_disag_weighted_inc[i - 1 + shared->dim_new_HFR_disag_weighted_inc_1 * (j - 1) + shared->dim_new_HFR_disag_weighted_inc_12 * (k - 1)] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? internal.HFR_disag[shared->dim_HFR_disag_12 * (k - 1) + shared->dim_HFR_disag_1 * (j - 1) + i - 1] * internal.n_I_C_2_to_hosp[shared->dim_n_I_C_2_to_hosp_12 * (k - 1) + shared->dim_n_I_C_2_to_hosp_1 * (j - 1) + i - 1] : HFR_disag_weighted_inc[shared->dim_HFR_disag_weighted_inc_12 * (k - 1) + shared->dim_HFR_disag_weighted_inc_1 * (j - 1) + i - 1] + internal.HFR_disag[shared->dim_HFR_disag_12 * (k - 1) + shared->dim_HFR_disag_1 * (j - 1) + i - 1] * internal.n_I_C_2_to_hosp[shared->dim_n_I_C_2_to_hosp_12 * (k - 1) + shared->dim_n_I_C_2_to_hosp_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_D_conf_4; ++l) {
            internal.new_ICU_D_conf[i - 1 + shared->dim_new_ICU_D_conf_1 * (j - 1) + shared->dim_new_ICU_D_conf_12 * (k - 1) + shared->dim_new_ICU_D_conf_123 * (l - 1)] = internal.aux_ICU_D_conf[shared->dim_aux_ICU_D_conf_123 * (l - 1) + shared->dim_aux_ICU_D_conf_12 * (k - 1) + shared->dim_aux_ICU_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_D_unconf_to_conf[shared->dim_n_ICU_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_D_unconf_4; ++l) {
            internal.new_ICU_D_unconf[i - 1 + shared->dim_new_ICU_D_unconf_1 * (j - 1) + shared->dim_new_ICU_D_unconf_12 * (k - 1) + shared->dim_new_ICU_D_unconf_123 * (l - 1)] = internal.aux_ICU_D_unconf[shared->dim_aux_ICU_D_unconf_123 * (l - 1) + shared->dim_aux_ICU_D_unconf_12 * (k - 1) + shared->dim_aux_ICU_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_D_unconf_to_conf[shared->dim_n_ICU_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_R5_to_E3_1; ++i) {
      for (int j = 1; j <= shared->dim_p_R5_to_E3_2; ++j) {
        internal.p_R5_to_E3[i - 1 + shared->dim_p_R5_to_E3_1 * (j - 1)] = (shared->n_strains == 1 ? 1 : (internal.rate_RE_progress[shared->dim_rate_RE_progress_12 * (j - 1) + shared->dim_rate_RE_progress_1 * 0 + i - 1] == 0 ? 0 : (internal.rate_RE_progress[shared->dim_rate_RE_progress_12 * (j - 1) + shared->dim_rate_RE_progress_1 * 0 + i - 1] / (real_type) odin_sum3<real_type>(internal.rate_RE_progress.data(), i - 1, i, 0, shared->dim_rate_RE_progress_2, j - 1, j, shared->dim_rate_RE_progress_1, shared->dim_rate_RE_progress_12))));
      }
    }
    for (int i = 1; i <= shared->dim_rate_R_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_rate_R_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_rate_R_progress_3; ++k) {
          internal.rate_R_progress[i - 1 + shared->dim_rate_R_progress_1 * (j - 1) + shared->dim_rate_R_progress_12 * (k - 1)] = shared->waning_rate[i - 1] + (shared->n_strains == 1 ? 0 : (j == 1 || j == 4 ? internal.rate_RE_progress[shared->dim_rate_RE_progress_12 * (k - 1) + shared->dim_rate_RE_progress_1 * 0 + i - 1] : (j == 5 ? odin_sum3<real_type>(internal.rate_RE_progress.data(), i - 1, i, 0, shared->dim_rate_RE_progress_2, k - 1, k, shared->dim_rate_RE_progress_1, shared->dim_rate_RE_progress_12) : 0)));
        }
      }
    }
    state_next[44] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_carehomes_tot : D_carehomes_inc + delta_D_carehomes_tot);
    state_next[43] = D_carehomes_tot + delta_D_carehomes_tot;
    state_next[35] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_0_49 : D_comm_0_49_inc + delta_D_comm_0_49);
    state_next[36] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_50_54 : D_comm_50_54_inc + delta_D_comm_50_54);
    state_next[37] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_55_59 : D_comm_55_59_inc + delta_D_comm_55_59);
    state_next[38] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_60_64 : D_comm_60_64_inc + delta_D_comm_60_64);
    state_next[39] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_65_69 : D_comm_65_69_inc + delta_D_comm_65_69);
    state_next[40] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_70_74 : D_comm_70_74_inc + delta_D_comm_70_74);
    state_next[41] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_75_79 : D_comm_75_79_inc + delta_D_comm_75_79);
    state_next[42] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_80_plus : D_comm_80_plus_inc + delta_D_comm_80_plus);
    state_next[34] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_comm_tot : D_comm_inc + delta_D_comm_tot);
    state_next[33] = D_comm_tot + delta_D_comm_tot;
    state_next[48] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_0_49_tot : D_hosp_0_49_inc + delta_D_hosp_0_49_tot);
    state_next[25] = D_hosp_0_49_tot + delta_D_hosp_0_49_tot;
    state_next[49] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_50_54_tot : D_hosp_50_54_inc + delta_D_hosp_50_54_tot);
    state_next[26] = D_hosp_50_54_tot + delta_D_hosp_50_54_tot;
    state_next[50] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_55_59_tot : D_hosp_55_59_inc + delta_D_hosp_55_59_tot);
    state_next[27] = D_hosp_55_59_tot + delta_D_hosp_55_59_tot;
    state_next[51] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_60_64_tot : D_hosp_60_64_inc + delta_D_hosp_60_64_tot);
    state_next[28] = D_hosp_60_64_tot + delta_D_hosp_60_64_tot;
    state_next[52] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_65_69_tot : D_hosp_65_69_inc + delta_D_hosp_65_69_tot);
    state_next[29] = D_hosp_65_69_tot + delta_D_hosp_65_69_tot;
    state_next[53] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_70_74_tot : D_hosp_70_74_inc + delta_D_hosp_70_74_tot);
    state_next[30] = D_hosp_70_74_tot + delta_D_hosp_70_74_tot;
    state_next[54] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_75_79_tot : D_hosp_75_79_inc + delta_D_hosp_75_79_tot);
    state_next[31] = D_hosp_75_79_tot + delta_D_hosp_75_79_tot;
    state_next[55] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_80_plus_tot : D_hosp_80_plus_inc + delta_D_hosp_80_plus_tot);
    state_next[32] = D_hosp_80_plus_tot + delta_D_hosp_80_plus_tot;
    state_next[47] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_hosp_tot : D_hosp_inc + delta_D_hosp_tot);
    state_next[24] = D_hosp_tot + delta_D_hosp_tot;
    for (int i = 1; i <= shared->dim_G_D_1; ++i) {
      for (int j = 1; j <= shared->dim_G_D_2; ++j) {
        for (int k = 1; k <= shared->dim_G_D_3; ++k) {
          for (int l = 1; l <= shared->dim_G_D_4; ++l) {
            state_next[shared->offset_variable_G_D + i - 1 + shared->dim_G_D_1 * (j - 1) + shared->dim_G_D_12 * (k - 1) + shared->dim_G_D_123 * (l - 1)] = internal.new_G_D[shared->dim_new_G_D_123 * (l - 1) + shared->dim_new_G_D_12 * (k - 1) + shared->dim_new_G_D_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_W_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_W_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_W_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_W_D_conf_4; ++l) {
            state_next[shared->offset_variable_W_D_conf + i - 1 + shared->dim_W_D_conf_1 * (j - 1) + shared->dim_W_D_conf_12 * (k - 1) + shared->dim_W_D_conf_123 * (l - 1)] = internal.new_W_D_conf[shared->dim_new_W_D_conf_123 * (l - 1) + shared->dim_new_W_D_conf_12 * (k - 1) + shared->dim_new_W_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_W_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_W_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_W_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_W_D_unconf_4; ++l) {
            state_next[shared->offset_variable_W_D_unconf + i - 1 + shared->dim_W_D_unconf_1 * (j - 1) + shared->dim_W_D_unconf_12 * (k - 1) + shared->dim_W_D_unconf_123 * (l - 1)] = internal.new_W_D_unconf[shared->dim_new_W_D_unconf_123 * (l - 1) + shared->dim_new_W_D_unconf_12 * (k - 1) + shared->dim_new_W_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_W_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_W_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_W_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_W_R_conf_4; ++l) {
            state_next[shared->offset_variable_W_R_conf + i - 1 + shared->dim_W_R_conf_1 * (j - 1) + shared->dim_W_R_conf_12 * (k - 1) + shared->dim_W_R_conf_123 * (l - 1)] = internal.new_W_R_conf[shared->dim_new_W_R_conf_123 * (l - 1) + shared->dim_new_W_R_conf_12 * (k - 1) + shared->dim_new_W_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_W_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_W_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_W_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_W_R_unconf_4; ++l) {
            state_next[shared->offset_variable_W_R_unconf + i - 1 + shared->dim_W_R_unconf_1 * (j - 1) + shared->dim_W_R_unconf_12 * (k - 1) + shared->dim_W_R_unconf_123 * (l - 1)] = internal.new_W_R_unconf[shared->dim_new_W_R_unconf_123 * (l - 1) + shared->dim_new_W_R_unconf_12 * (k - 1) + shared->dim_new_W_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_cum_admit_by_age; ++i) {
      state_next[shared->offset_variable_cum_admit_by_age + i - 1] = cum_admit_by_age[i - 1] + odin_sum3<real_type>(internal.n_I_C_2_to_hosp.data(), i - 1, i, 0, shared->dim_n_I_C_2_to_hosp_2, 0, shared->dim_n_I_C_2_to_hosp_3, shared->dim_n_I_C_2_to_hosp_1, shared->dim_n_I_C_2_to_hosp_12);
    }
    state_next[58] = cum_sympt_cases + new_sympt_cases;
    state_next[63] = cum_sympt_cases_15_24 + new_sympt_cases_15_24;
    state_next[64] = cum_sympt_cases_25_49 + new_sympt_cases_25_49;
    state_next[65] = cum_sympt_cases_50_64 + new_sympt_cases_50_64;
    state_next[66] = cum_sympt_cases_65_79 + new_sympt_cases_65_79;
    state_next[67] = cum_sympt_cases_80_plus + new_sympt_cases_80_plus;
    state_next[59] = cum_sympt_cases_non_variant + new_sympt_cases_non_variant;
    state_next[61] = cum_sympt_cases_non_variant_over25 + new_sympt_cases_non_variant_over25;
    state_next[60] = cum_sympt_cases_over25 + new_sympt_cases_over25;
    state_next[62] = cum_sympt_cases_under15 + new_sympt_cases_under15;
    state_next[73] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_15_24 : sympt_cases_15_24_inc + new_sympt_cases_15_24));
    state_next[74] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_25_49 : sympt_cases_25_49_inc + new_sympt_cases_25_49));
    state_next[75] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_50_64 : sympt_cases_50_64_inc + new_sympt_cases_50_64));
    state_next[76] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_65_79 : sympt_cases_65_79_inc + new_sympt_cases_65_79));
    state_next[77] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_80_plus : sympt_cases_80_plus_inc + new_sympt_cases_80_plus));
    state_next[68] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases : sympt_cases_inc + new_sympt_cases));
    state_next[69] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_non_variant : sympt_cases_non_variant_inc + new_sympt_cases_non_variant));
    state_next[71] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_non_variant_over25 : sympt_cases_non_variant_over25_inc + new_sympt_cases_non_variant_over25));
    state_next[70] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_over25 : sympt_cases_over25_inc + new_sympt_cases_over25));
    state_next[72] = ((fmodr<real_type>(step, shared->steps_per_day) == 0 ? new_sympt_cases_under15 : sympt_cases_under15_inc + new_sympt_cases_under15));
    for (int i = 1; i <= shared->dim_n_E_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_n_E_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_n_E_vacc_skip_3; ++k) {
          for (int l = 1; l <= shared->dim_n_E_vacc_skip_4; ++l) {
            internal.n_E_vacc_skip[i - 1 + shared->dim_n_E_vacc_skip_1 * (j - 1) + shared->dim_n_E_vacc_skip_12 * (k - 1) + shared->dim_n_E_vacc_skip_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, E[shared->dim_E_123 * (l - 1) + shared->dim_E_12 * (k - 1) + shared->dim_E_1 * (j - 1) + i - 1] - internal.n_E_progress[shared->dim_n_E_progress_123 * (l - 1) + shared->dim_n_E_progress_12 * (k - 1) + shared->dim_n_E_progress_1 * (j - 1) + i - 1] - internal.n_E_next_vacc_class[shared->dim_n_E_next_vacc_class_123 * (l - 1) + shared->dim_n_E_next_vacc_class_12 * (k - 1) + shared->dim_n_E_next_vacc_class_1 * (j - 1) + i - 1], internal.p_E_vacc_skip[shared->dim_p_E_vacc_skip_123 * (l - 1) + shared->dim_p_E_vacc_skip_12 * (k - 1) + shared->dim_p_E_vacc_skip_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_ICU_W_R_unconf_to_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_ICU_W_R_unconf_to_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_ICU_W_R_unconf_to_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_n_ICU_W_R_unconf_to_conf_4; ++l) {
            internal.n_ICU_W_R_unconf_to_conf[i - 1 + shared->dim_n_ICU_W_R_unconf_to_conf_1 * (j - 1) + shared->dim_n_ICU_W_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_W_R_unconf_to_conf_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, internal.aux_ICU_W_R_unconf[shared->dim_aux_ICU_W_R_unconf_123 * (l - 1) + shared->dim_aux_ICU_W_R_unconf_12 * (k - 1) + shared->dim_aux_ICU_W_R_unconf_1 * (j - 1) + i - 1], p_test);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_A_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_A_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_A_vacc_skip_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_A_vacc_skip_4; ++l) {
            internal.n_I_A_vacc_skip[i - 1 + shared->dim_n_I_A_vacc_skip_1 * (j - 1) + shared->dim_n_I_A_vacc_skip_12 * (k - 1) + shared->dim_n_I_A_vacc_skip_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_A[shared->dim_I_A_123 * (l - 1) + shared->dim_I_A_12 * (k - 1) + shared->dim_I_A_1 * (j - 1) + i - 1] - internal.n_I_A_progress[shared->dim_n_I_A_progress_123 * (l - 1) + shared->dim_n_I_A_progress_12 * (k - 1) + shared->dim_n_I_A_progress_1 * (j - 1) + i - 1] - internal.n_I_A_next_vacc_class[shared->dim_n_I_A_next_vacc_class_123 * (l - 1) + shared->dim_n_I_A_next_vacc_class_12 * (k - 1) + shared->dim_n_I_A_next_vacc_class_1 * (j - 1) + i - 1], internal.p_I_A_vacc_skip[shared->dim_p_I_A_vacc_skip_123 * (l - 1) + shared->dim_p_I_A_vacc_skip_12 * (k - 1) + shared->dim_p_I_A_vacc_skip_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_ICU_pre_conf_3; ++k) {
          internal.n_I_C_2_to_ICU_pre_conf[i - 1 + shared->dim_n_I_C_2_to_ICU_pre_conf_1 * (j - 1) + shared->dim_n_I_C_2_to_ICU_pre_conf_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_I_C_2_to_ICU_pre[shared->dim_n_I_C_2_to_ICU_pre_12 * (k - 1) + shared->dim_n_I_C_2_to_ICU_pre_1 * (j - 1) + i - 1], internal.p_star[i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_P_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_P_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_P_vacc_skip_3; ++k) {
          for (int l = 1; l <= shared->dim_n_I_P_vacc_skip_4; ++l) {
            internal.n_I_P_vacc_skip[i - 1 + shared->dim_n_I_P_vacc_skip_1 * (j - 1) + shared->dim_n_I_P_vacc_skip_12 * (k - 1) + shared->dim_n_I_P_vacc_skip_123 * (l - 1)] = dust::random::binomial<real_type>(rng_state, I_P[shared->dim_I_P_123 * (l - 1) + shared->dim_I_P_12 * (k - 1) + shared->dim_I_P_1 * (j - 1) + i - 1] - internal.n_I_P_progress[shared->dim_n_I_P_progress_123 * (l - 1) + shared->dim_n_I_P_progress_12 * (k - 1) + shared->dim_n_I_P_progress_1 * (j - 1) + i - 1] - internal.n_I_P_next_vacc_class[shared->dim_n_I_P_next_vacc_class_123 * (l - 1) + shared->dim_n_I_P_next_vacc_class_12 * (k - 1) + shared->dim_n_I_P_next_vacc_class_1 * (j - 1) + i - 1], internal.p_I_P_vacc_skip[shared->dim_p_I_P_vacc_skip_123 * (l - 1) + shared->dim_p_I_P_vacc_skip_12 * (k - 1) + shared->dim_p_I_P_vacc_skip_1 * (j - 1) + i - 1]);
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_S_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_S_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_S_progress_3; ++k) {
          internal.n_S_progress[i - 1 + shared->dim_n_S_progress_1 * (j - 1) + shared->dim_n_S_progress_12 * (k - 1)] = (j == 1 || shared->n_real_strains == 1 ? dust::random::binomial<real_type>(rng_state, internal.n_S_progress_tot[shared->dim_n_S_progress_tot_1 * (k - 1) + i - 1], internal.rel_foi_strain[shared->dim_rel_foi_strain_12 * (k - 1) + shared->dim_rel_foi_strain_1 * (j - 1) + i - 1]) : ((j == 2 ? internal.n_S_progress_tot[shared->dim_n_S_progress_tot_1 * (k - 1) + i - 1] - internal.n_S_progress[shared->dim_n_S_progress_12 * (k - 1) + shared->dim_n_S_progress_1 * 0 + i - 1] : 0)));
        }
      }
    }
    {
       int i = shared->seed_age_band;
       int j = 1;
       int k = 1;
       internal.n_S_progress[i - 1 + shared->dim_n_S_progress_1 * (j - 1) + shared->dim_n_S_progress_12 * (k - 1)] = internal.n_S_progress[shared->dim_n_S_progress_12 * 0 + shared->dim_n_S_progress_1 * 0 + shared->seed_age_band - 1] + dust::math::min(S[shared->dim_S_1 * 0 + shared->seed_age_band - 1] - internal.n_S_progress_tot[shared->dim_n_S_progress_tot_1 * 0 + shared->seed_age_band - 1], seed);
    }
    {
       int i = 4;
       for (int j = 2; j <= shared->n_strains; ++j) {
         int k = 1;
         internal.n_S_progress[i - 1 + shared->dim_n_S_progress_1 * (j - 1) + shared->dim_n_S_progress_12 * (k - 1)] = (j < 3 ? dust::math::min(internal.n_S_progress[shared->dim_n_S_progress_12 * (k - 1) + shared->dim_n_S_progress_1 * (j - 1) + i - 1] + strain_seed, internal.n_S_progress[shared->dim_n_S_progress_12 * (k - 1) + shared->dim_n_S_progress_1 * (j - 1) + i - 1] + S[shared->dim_S_1 * (k - 1) + i - 1] - odin_sum3<real_type>(internal.n_S_progress.data(), i - 1, i, 0, shared->dim_n_S_progress_2, k - 1, k, shared->dim_n_S_progress_1, shared->dim_n_S_progress_12)) : 0);
       }
    }
    for (int i = 1; i <= shared->dim_n_hosp_non_ICU_1; ++i) {
      for (int j = 1; j <= shared->dim_n_hosp_non_ICU_2; ++j) {
        for (int k = 1; k <= shared->dim_n_hosp_non_ICU_3; ++k) {
          internal.n_hosp_non_ICU[i - 1 + shared->dim_n_hosp_non_ICU_1 * (j - 1) + shared->dim_n_hosp_non_ICU_12 * (k - 1)] = internal.n_I_C_2_to_hosp[shared->dim_n_I_C_2_to_hosp_12 * (k - 1) + shared->dim_n_I_C_2_to_hosp_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_ICU_pre[shared->dim_n_I_C_2_to_ICU_pre_12 * (k - 1) + shared->dim_n_I_C_2_to_ICU_pre_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_W_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_W_D_conf_4; ++l) {
            internal.new_ICU_W_D_conf[i - 1 + shared->dim_new_ICU_W_D_conf_1 * (j - 1) + shared->dim_new_ICU_W_D_conf_12 * (k - 1) + shared->dim_new_ICU_W_D_conf_123 * (l - 1)] = internal.aux_ICU_W_D_conf[shared->dim_aux_ICU_W_D_conf_123 * (l - 1) + shared->dim_aux_ICU_W_D_conf_12 * (k - 1) + shared->dim_aux_ICU_W_D_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_D_unconf_to_conf[shared->dim_n_ICU_W_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_W_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_W_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_W_D_unconf_4; ++l) {
            internal.new_ICU_W_D_unconf[i - 1 + shared->dim_new_ICU_W_D_unconf_1 * (j - 1) + shared->dim_new_ICU_W_D_unconf_12 * (k - 1) + shared->dim_new_ICU_W_D_unconf_123 * (l - 1)] = internal.aux_ICU_W_D_unconf[shared->dim_aux_ICU_W_D_unconf_123 * (l - 1) + shared->dim_aux_ICU_W_D_unconf_12 * (k - 1) + shared->dim_aux_ICU_W_D_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_W_D_unconf_to_conf[shared->dim_n_ICU_W_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_W_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_W_D_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    real_type new_hospitalisations_inc = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_hospitalisations_total : hospitalisations_inc + delta_hospitalisations_total);
    for (int i = 1; i <= shared->dim_new_hospitalisations_inc_age; ++i) {
      internal.new_hospitalisations_inc_age[i - 1] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? internal.delta_hospitalisations_age[i - 1] : hospitalisations_inc_age[i - 1] + internal.delta_hospitalisations_age[i - 1]);
    }
    for (int i = 1; i <= shared->dim_new_hospitalisations_inc_strain; ++i) {
      internal.new_hospitalisations_inc_strain[i - 1] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? internal.delta_hospitalisations_strain[i - 1] : hospitalisations_inc_strain[i - 1] + internal.delta_hospitalisations_strain[i - 1]);
    }
    for (int i = 1; i <= shared->dim_p_RS_1; ++i) {
      for (int j = 1; j <= shared->dim_p_RS_2; ++j) {
        for (int k = 1; k <= shared->dim_p_RS_3; ++k) {
          internal.p_RS[i - 1 + shared->dim_p_RS_1 * (j - 1) + shared->dim_p_RS_12 * (k - 1)] = (shared->n_strains == 1 ? 1 : ((shared->waning_rate[i - 1] == 0 ? 0 : shared->waning_rate[i - 1] / (real_type) internal.rate_R_progress[shared->dim_rate_R_progress_12 * (k - 1) + shared->dim_rate_R_progress_1 * (j - 1) + i - 1])));
        }
      }
    }
    for (int i = 1; i <= shared->dim_p_R_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_p_R_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_p_R_progress_3; ++k) {
          internal.p_R_progress[i - 1 + shared->dim_p_R_progress_1 * (j - 1) + shared->dim_p_R_progress_12 * (k - 1)] = 1 - dust::math::exp(- internal.rate_R_progress[shared->dim_rate_R_progress_12 * (k - 1) + shared->dim_rate_R_progress_1 * (j - 1) + i - 1] * shared->dt);
        }
      }
    }
    state_next[46] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_D_tot : D_inc + delta_D_tot);
    state_next[45] = D_tot + delta_D_tot;
    for (int i = 1; i <= shared->dim_HFR_disag_weighted_inc_1; ++i) {
      for (int j = 1; j <= shared->dim_HFR_disag_weighted_inc_2; ++j) {
        for (int k = 1; k <= shared->dim_HFR_disag_weighted_inc_3; ++k) {
          state_next[shared->offset_variable_HFR_disag_weighted_inc + i - 1 + shared->dim_HFR_disag_weighted_inc_1 * (j - 1) + shared->dim_HFR_disag_weighted_inc_12 * (k - 1)] = internal.new_HFR_disag_weighted_inc[shared->dim_new_HFR_disag_weighted_inc_12 * (k - 1) + shared->dim_new_HFR_disag_weighted_inc_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_ICU_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_D_conf_4; ++l) {
            state_next[shared->offset_variable_ICU_D_conf + i - 1 + shared->dim_ICU_D_conf_1 * (j - 1) + shared->dim_ICU_D_conf_12 * (k - 1) + shared->dim_ICU_D_conf_123 * (l - 1)] = internal.new_ICU_D_conf[shared->dim_new_ICU_D_conf_123 * (l - 1) + shared->dim_new_ICU_D_conf_12 * (k - 1) + shared->dim_new_ICU_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_ICU_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_D_unconf_4; ++l) {
            state_next[shared->offset_variable_ICU_D_unconf + i - 1 + shared->dim_ICU_D_unconf_1 * (j - 1) + shared->dim_ICU_D_unconf_12 * (k - 1) + shared->dim_ICU_D_unconf_123 * (l - 1)] = internal.new_ICU_D_unconf[shared->dim_new_ICU_D_unconf_123 * (l - 1) + shared->dim_new_ICU_D_unconf_12 * (k - 1) + shared->dim_new_ICU_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    real_type delta_new_conf = odin_sum1<real_type>(internal.n_H_D_unconf_to_conf.data(), 0, shared->dim_n_H_D_unconf_to_conf) + odin_sum1<real_type>(internal.n_H_R_unconf_to_conf.data(), 0, shared->dim_n_H_R_unconf_to_conf) + odin_sum1<real_type>(internal.n_ICU_pre_unconf_to_conf.data(), 0, shared->dim_n_ICU_pre_unconf_to_conf) + odin_sum1<real_type>(internal.n_ICU_D_unconf_to_conf.data(), 0, shared->dim_n_ICU_D_unconf_to_conf) + odin_sum1<real_type>(internal.n_ICU_W_R_unconf_to_conf.data(), 0, shared->dim_n_ICU_W_R_unconf_to_conf) + odin_sum1<real_type>(internal.n_ICU_W_D_unconf_to_conf.data(), 0, shared->dim_n_ICU_W_D_unconf_to_conf) + odin_sum1<real_type>(internal.n_W_R_unconf_to_conf.data(), 0, shared->dim_n_W_R_unconf_to_conf) + odin_sum1<real_type>(internal.n_W_D_unconf_to_conf.data(), 0, shared->dim_n_W_D_unconf_to_conf);
    for (int i = 1; i <= shared->dim_n_E_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_n_E_vaccinated_2; ++j) {
        internal.n_E_vaccinated[i - 1 + shared->dim_n_E_vaccinated_1 * (j - 1)] = odin_sum4<real_type>(internal.n_E_next_vacc_class.data(), i - 1, i, 0, shared->dim_n_E_next_vacc_class_2, 0, shared->dim_n_E_next_vacc_class_3, j - 1, j, shared->dim_n_E_next_vacc_class_1, shared->dim_n_E_next_vacc_class_12, shared->dim_n_E_next_vacc_class_123) + ((shared->vacc_skipped[j - 1] > 0 ? odin_sum4<real_type>(internal.n_E_vacc_skip.data(), i - 1, i, 0, shared->dim_n_E_vacc_skip_2, 0, shared->dim_n_E_vacc_skip_3, shared->vacc_skipped[j - 1] - 1, shared->vacc_skipped[j - 1], shared->dim_n_E_vacc_skip_1, shared->dim_n_E_vacc_skip_12, shared->dim_n_E_vacc_skip_123) : 0));
      }
    }
    for (int i = 1; i <= shared->dim_n_I_A_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_A_vaccinated_2; ++j) {
        internal.n_I_A_vaccinated[i - 1 + shared->dim_n_I_A_vaccinated_1 * (j - 1)] = odin_sum4<real_type>(internal.n_I_A_next_vacc_class.data(), i - 1, i, 0, shared->dim_n_I_A_next_vacc_class_2, 0, shared->dim_n_I_A_next_vacc_class_3, j - 1, j, shared->dim_n_I_A_next_vacc_class_1, shared->dim_n_I_A_next_vacc_class_12, shared->dim_n_I_A_next_vacc_class_123) + ((shared->vacc_skipped[j - 1] > 0 ? odin_sum4<real_type>(internal.n_I_A_vacc_skip.data(), i - 1, i, 0, shared->dim_n_I_A_vacc_skip_2, 0, shared->dim_n_I_A_vacc_skip_3, shared->vacc_skipped[j - 1] - 1, shared->vacc_skipped[j - 1], shared->dim_n_I_A_vacc_skip_1, shared->dim_n_I_A_vacc_skip_12, shared->dim_n_I_A_vacc_skip_123) : 0));
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_H_D_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_H_D_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_H_D_3; ++k) {
          internal.n_I_C_2_to_H_D[i - 1 + shared->dim_n_I_C_2_to_H_D_1 * (j - 1) + shared->dim_n_I_C_2_to_H_D_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_hosp_non_ICU[shared->dim_n_hosp_non_ICU_12 * (k - 1) + shared->dim_n_hosp_non_ICU_1 * (j - 1) + i - 1], internal.p_H_D[shared->dim_p_H_D_12 * (k - 1) + shared->dim_p_H_D_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_P_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_P_vaccinated_2; ++j) {
        internal.n_I_P_vaccinated[i - 1 + shared->dim_n_I_P_vaccinated_1 * (j - 1)] = odin_sum4<real_type>(internal.n_I_P_next_vacc_class.data(), i - 1, i, 0, shared->dim_n_I_P_next_vacc_class_2, 0, shared->dim_n_I_P_next_vacc_class_3, j - 1, j, shared->dim_n_I_P_next_vacc_class_1, shared->dim_n_I_P_next_vacc_class_12, shared->dim_n_I_P_next_vacc_class_123) + ((shared->vacc_skipped[j - 1] > 0 ? odin_sum4<real_type>(internal.n_I_P_vacc_skip.data(), i - 1, i, 0, shared->dim_n_I_P_vacc_skip_2, 0, shared->dim_n_I_P_vacc_skip_3, shared->vacc_skipped[j - 1] - 1, shared->vacc_skipped[j - 1], shared->dim_n_I_P_vacc_skip_1, shared->dim_n_I_P_vacc_skip_12, shared->dim_n_I_P_vacc_skip_123) : 0));
      }
    }
    for (int i = 1; i <= shared->dim_n_R_progress_1; ++i) {
      for (int j = 1; j <= shared->dim_n_R_progress_2; ++j) {
        for (int k = 1; k <= shared->dim_n_R_progress_3; ++k) {
          internal.n_R_progress[i - 1 + shared->dim_n_R_progress_1 * (j - 1) + shared->dim_n_R_progress_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, R[shared->dim_R_12 * (k - 1) + shared->dim_R_1 * (j - 1) + i - 1], internal.p_R_progress[shared->dim_p_R_progress_12 * (k - 1) + shared->dim_p_R_progress_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_S_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_n_S_next_vacc_class_2; ++j) {
        internal.n_S_next_vacc_class[i - 1 + shared->dim_n_S_next_vacc_class_1 * (j - 1)] = dust::random::binomial<real_type>(rng_state, S[shared->dim_S_1 * (j - 1) + i - 1] - odin_sum3<real_type>(internal.n_S_progress.data(), i - 1, i, 0, shared->dim_n_S_progress_2, j - 1, j, shared->dim_n_S_progress_1, shared->dim_n_S_progress_12), internal.p_S_next_vacc_class[shared->dim_p_S_next_vacc_class_1 * (j - 1) + i - 1]);
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_W_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_W_R_conf_4; ++l) {
            internal.new_ICU_W_R_conf[i - 1 + shared->dim_new_ICU_W_R_conf_1 * (j - 1) + shared->dim_new_ICU_W_R_conf_12 * (k - 1) + shared->dim_new_ICU_W_R_conf_123 * (l - 1)] = internal.aux_ICU_W_R_conf[shared->dim_aux_ICU_W_R_conf_123 * (l - 1) + shared->dim_aux_ICU_W_R_conf_12 * (k - 1) + shared->dim_aux_ICU_W_R_conf_1 * (j - 1) + i - 1] + internal.n_ICU_W_R_unconf_to_conf[shared->dim_n_ICU_W_R_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_W_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_W_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_W_R_unconf_4; ++l) {
            internal.new_ICU_W_R_unconf[i - 1 + shared->dim_new_ICU_W_R_unconf_1 * (j - 1) + shared->dim_new_ICU_W_R_unconf_12 * (k - 1) + shared->dim_new_ICU_W_R_unconf_123 * (l - 1)] = internal.aux_ICU_W_R_unconf[shared->dim_aux_ICU_W_R_unconf_123 * (l - 1) + shared->dim_aux_ICU_W_R_unconf_12 * (k - 1) + shared->dim_aux_ICU_W_R_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_W_R_unconf_to_conf[shared->dim_n_ICU_W_R_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_W_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_W_R_unconf_to_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_pre_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_pre_conf_4; ++l) {
            internal.new_ICU_pre_conf[i - 1 + shared->dim_new_ICU_pre_conf_1 * (j - 1) + shared->dim_new_ICU_pre_conf_12 * (k - 1) + shared->dim_new_ICU_pre_conf_123 * (l - 1)] = internal.aux_ICU_pre_conf[shared->dim_aux_ICU_pre_conf_123 * (l - 1) + shared->dim_aux_ICU_pre_conf_12 * (k - 1) + shared->dim_aux_ICU_pre_conf_1 * (j - 1) + i - 1] + internal.n_ICU_pre_unconf_to_conf[shared->dim_n_ICU_pre_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_pre_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_to_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_2_to_ICU_pre_conf[shared->dim_n_I_C_2_to_ICU_pre_conf_12 * (l - 1) + shared->dim_n_I_C_2_to_ICU_pre_conf_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_ICU_pre_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_ICU_pre_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_ICU_pre_unconf_4; ++l) {
            internal.new_ICU_pre_unconf[i - 1 + shared->dim_new_ICU_pre_unconf_1 * (j - 1) + shared->dim_new_ICU_pre_unconf_12 * (k - 1) + shared->dim_new_ICU_pre_unconf_123 * (l - 1)] = internal.aux_ICU_pre_unconf[shared->dim_aux_ICU_pre_unconf_123 * (l - 1) + shared->dim_aux_ICU_pre_unconf_12 * (k - 1) + shared->dim_aux_ICU_pre_unconf_1 * (j - 1) + i - 1] - internal.n_ICU_pre_unconf_to_conf[shared->dim_n_ICU_pre_unconf_to_conf_123 * (l - 1) + shared->dim_n_ICU_pre_unconf_to_conf_12 * (k - 1) + shared->dim_n_ICU_pre_unconf_to_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_2_to_ICU_pre[shared->dim_n_I_C_2_to_ICU_pre_12 * (l - 1) + shared->dim_n_I_C_2_to_ICU_pre_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_ICU_pre_conf[shared->dim_n_I_C_2_to_ICU_pre_conf_12 * (l - 1) + shared->dim_n_I_C_2_to_ICU_pre_conf_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_I_A_1; ++i) {
      for (int j = 1; j <= shared->dim_new_I_A_2; ++j) {
        for (int k = 1; k <= shared->dim_new_I_A_3; ++k) {
          for (int l = 1; l <= shared->dim_new_I_A_4; ++l) {
            internal.new_I_A[i - 1 + shared->dim_new_I_A_1 * (j - 1) + shared->dim_new_I_A_12 * (k - 1) + shared->dim_new_I_A_123 * (l - 1)] = I_A[shared->dim_I_A_123 * (l - 1) + shared->dim_I_A_12 * (k - 1) + shared->dim_I_A_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_EI_A[shared->dim_n_EI_A_12 * (l - 1) + shared->dim_n_EI_A_1 * (j - 1) + i - 1] : internal.n_I_A_progress[shared->dim_n_I_A_progress_123 * (l - 1) + shared->dim_n_I_A_progress_12 * (k - 1 - 1) + shared->dim_n_I_A_progress_1 * (j - 1) + i - 1])) - internal.n_I_A_progress[shared->dim_n_I_A_progress_123 * (l - 1) + shared->dim_n_I_A_progress_12 * (k - 1) + shared->dim_n_I_A_progress_1 * (j - 1) + i - 1] - internal.n_I_A_next_vacc_class[shared->dim_n_I_A_next_vacc_class_123 * (l - 1) + shared->dim_n_I_A_next_vacc_class_12 * (k - 1) + shared->dim_n_I_A_next_vacc_class_1 * (j - 1) + i - 1] + ((l == 1 ? internal.n_I_A_next_vacc_class[shared->dim_n_I_A_next_vacc_class_123 * (shared->n_vacc_classes - 1) + shared->dim_n_I_A_next_vacc_class_12 * (k - 1) + shared->dim_n_I_A_next_vacc_class_1 * (j - 1) + i - 1] : internal.n_I_A_next_vacc_class[shared->dim_n_I_A_next_vacc_class_123 * (l - 1 - 1) + shared->dim_n_I_A_next_vacc_class_12 * (k - 1) + shared->dim_n_I_A_next_vacc_class_1 * (j - 1) + i - 1])) - ((shared->vacc_skip_to[l - 1] > 0 ? internal.n_I_A_vacc_skip[shared->dim_n_I_A_vacc_skip_123 * (l - 1) + shared->dim_n_I_A_vacc_skip_12 * (k - 1) + shared->dim_n_I_A_vacc_skip_1 * (j - 1) + i - 1] : 0)) + ((shared->vacc_skip_from[l - 1] > 0 ? internal.n_I_A_vacc_skip[shared->dim_n_I_A_vacc_skip_123 * (shared->vacc_skip_from[l - 1] - 1) + shared->dim_n_I_A_vacc_skip_12 * (k - 1) + shared->dim_n_I_A_vacc_skip_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_I_P_1; ++i) {
      for (int j = 1; j <= shared->dim_new_I_P_2; ++j) {
        for (int k = 1; k <= shared->dim_new_I_P_3; ++k) {
          for (int l = 1; l <= shared->dim_new_I_P_4; ++l) {
            internal.new_I_P[i - 1 + shared->dim_new_I_P_1 * (j - 1) + shared->dim_new_I_P_12 * (k - 1) + shared->dim_new_I_P_123 * (l - 1)] = I_P[shared->dim_I_P_123 * (l - 1) + shared->dim_I_P_12 * (k - 1) + shared->dim_I_P_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_EI_P[shared->dim_n_EI_P_12 * (l - 1) + shared->dim_n_EI_P_1 * (j - 1) + i - 1] : internal.n_I_P_progress[shared->dim_n_I_P_progress_123 * (l - 1) + shared->dim_n_I_P_progress_12 * (k - 1 - 1) + shared->dim_n_I_P_progress_1 * (j - 1) + i - 1])) - internal.n_I_P_progress[shared->dim_n_I_P_progress_123 * (l - 1) + shared->dim_n_I_P_progress_12 * (k - 1) + shared->dim_n_I_P_progress_1 * (j - 1) + i - 1] - internal.n_I_P_next_vacc_class[shared->dim_n_I_P_next_vacc_class_123 * (l - 1) + shared->dim_n_I_P_next_vacc_class_12 * (k - 1) + shared->dim_n_I_P_next_vacc_class_1 * (j - 1) + i - 1] + ((l == 1 ? internal.n_I_P_next_vacc_class[shared->dim_n_I_P_next_vacc_class_123 * (shared->n_vacc_classes - 1) + shared->dim_n_I_P_next_vacc_class_12 * (k - 1) + shared->dim_n_I_P_next_vacc_class_1 * (j - 1) + i - 1] : internal.n_I_P_next_vacc_class[shared->dim_n_I_P_next_vacc_class_123 * (l - 1 - 1) + shared->dim_n_I_P_next_vacc_class_12 * (k - 1) + shared->dim_n_I_P_next_vacc_class_1 * (j - 1) + i - 1])) - ((shared->vacc_skip_to[l - 1] > 0 ? internal.n_I_P_vacc_skip[shared->dim_n_I_P_vacc_skip_123 * (l - 1) + shared->dim_n_I_P_vacc_skip_12 * (k - 1) + shared->dim_n_I_P_vacc_skip_1 * (j - 1) + i - 1] : 0)) + ((shared->vacc_skip_from[l - 1] > 0 ? internal.n_I_P_vacc_skip[shared->dim_n_I_P_vacc_skip_123 * (shared->vacc_skip_from[l - 1] - 1) + shared->dim_n_I_P_vacc_skip_12 * (k - 1) + shared->dim_n_I_P_vacc_skip_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_ICU_W_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_W_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_W_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_W_D_conf_4; ++l) {
            state_next[shared->offset_variable_ICU_W_D_conf + i - 1 + shared->dim_ICU_W_D_conf_1 * (j - 1) + shared->dim_ICU_W_D_conf_12 * (k - 1) + shared->dim_ICU_W_D_conf_123 * (l - 1)] = internal.new_ICU_W_D_conf[shared->dim_new_ICU_W_D_conf_123 * (l - 1) + shared->dim_new_ICU_W_D_conf_12 * (k - 1) + shared->dim_new_ICU_W_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_ICU_W_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_W_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_W_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_W_D_unconf_4; ++l) {
            state_next[shared->offset_variable_ICU_W_D_unconf + i - 1 + shared->dim_ICU_W_D_unconf_1 * (j - 1) + shared->dim_ICU_W_D_unconf_12 * (k - 1) + shared->dim_ICU_W_D_unconf_123 * (l - 1)] = internal.new_ICU_W_D_unconf[shared->dim_new_ICU_W_D_unconf_123 * (l - 1) + shared->dim_new_ICU_W_D_unconf_12 * (k - 1) + shared->dim_new_ICU_W_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_E_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_E_vacc_skip_2; ++j) {
        state_next[shared->offset_variable_cum_n_E_vacc_skip + i - 1 + shared->dim_cum_n_E_vacc_skip_1 * (j - 1)] = cum_n_E_vacc_skip[shared->dim_cum_n_E_vacc_skip_1 * (j - 1) + i - 1] + odin_sum4<real_type>(internal.n_E_vacc_skip.data(), i - 1, i, 0, shared->dim_n_E_vacc_skip_2, 0, shared->dim_n_E_vacc_skip_3, j - 1, j, shared->dim_n_E_vacc_skip_1, shared->dim_n_E_vacc_skip_12, shared->dim_n_E_vacc_skip_123);
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_I_A_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_I_A_vacc_skip_2; ++j) {
        state_next[shared->offset_variable_cum_n_I_A_vacc_skip + i - 1 + shared->dim_cum_n_I_A_vacc_skip_1 * (j - 1)] = cum_n_I_A_vacc_skip[shared->dim_cum_n_I_A_vacc_skip_1 * (j - 1) + i - 1] + odin_sum4<real_type>(internal.n_I_A_vacc_skip.data(), i - 1, i, 0, shared->dim_n_I_A_vacc_skip_2, 0, shared->dim_n_I_A_vacc_skip_3, j - 1, j, shared->dim_n_I_A_vacc_skip_1, shared->dim_n_I_A_vacc_skip_12, shared->dim_n_I_A_vacc_skip_123);
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_I_P_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_I_P_vacc_skip_2; ++j) {
        state_next[shared->offset_variable_cum_n_I_P_vacc_skip + i - 1 + shared->dim_cum_n_I_P_vacc_skip_1 * (j - 1)] = cum_n_I_P_vacc_skip[shared->dim_cum_n_I_P_vacc_skip_1 * (j - 1) + i - 1] + odin_sum4<real_type>(internal.n_I_P_vacc_skip.data(), i - 1, i, 0, shared->dim_n_I_P_vacc_skip_2, 0, shared->dim_n_I_P_vacc_skip_3, j - 1, j, shared->dim_n_I_P_vacc_skip_1, shared->dim_n_I_P_vacc_skip_12, shared->dim_n_I_P_vacc_skip_123);
      }
    }
    state_next[88] = odin_sum1<real_type>(internal.new_HFR_disag_weighted_inc.data(), 0, shared->dim_new_HFR_disag_weighted_inc) / (real_type) new_hospitalisations_inc;
    for (int i = 1; i <= shared->dim_hfr_age; ++i) {
      state_next[shared->offset_variable_hfr_age + i - 1] = odin_sum3<real_type>(internal.new_HFR_disag_weighted_inc.data(), i - 1, i, 0, shared->dim_new_HFR_disag_weighted_inc_2, 0, shared->dim_new_HFR_disag_weighted_inc_3, shared->dim_new_HFR_disag_weighted_inc_1, shared->dim_new_HFR_disag_weighted_inc_12) / (real_type) internal.new_hospitalisations_inc_age[i - 1];
    }
    for (int i = 1; i <= shared->dim_hfr_strain; ++i) {
      state_next[shared->offset_variable_hfr_strain + i - 1] = (shared->n_real_strains == 1 ? odin_sum3<real_type>(internal.new_HFR_disag_weighted_inc.data(), 0, shared->dim_new_HFR_disag_weighted_inc_1, 0, 1, 0, shared->dim_new_HFR_disag_weighted_inc_3, shared->dim_new_HFR_disag_weighted_inc_1, shared->dim_new_HFR_disag_weighted_inc_12) / (real_type) internal.new_hospitalisations_inc_strain[0] : (odin_sum3<real_type>(internal.new_HFR_disag_weighted_inc.data(), 0, shared->dim_new_HFR_disag_weighted_inc_1, i - 1, i, 0, shared->dim_new_HFR_disag_weighted_inc_3, shared->dim_new_HFR_disag_weighted_inc_1, shared->dim_new_HFR_disag_weighted_inc_12) + odin_sum3<real_type>(internal.new_HFR_disag_weighted_inc.data(), 0, shared->dim_new_HFR_disag_weighted_inc_1, 5 - i - 1, 5 - i, 0, shared->dim_new_HFR_disag_weighted_inc_3, shared->dim_new_HFR_disag_weighted_inc_1, shared->dim_new_HFR_disag_weighted_inc_12)) / (real_type) (internal.new_hospitalisations_inc_strain[i - 1] + internal.new_hospitalisations_inc_strain[5 - i - 1]));
    }
    state_next[14] = new_hospitalisations_inc;
    for (int i = 1; i <= shared->dim_hospitalisations_inc_age; ++i) {
      state_next[shared->offset_variable_hospitalisations_inc_age + i - 1] = internal.new_hospitalisations_inc_age[i - 1];
    }
    for (int i = 1; i <= shared->dim_hospitalisations_inc_strain; ++i) {
      state_next[shared->offset_variable_hospitalisations_inc_strain + i - 1] = internal.new_hospitalisations_inc_strain[i - 1];
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_H_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_H_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_H_D_conf_3; ++k) {
          internal.n_I_C_2_to_H_D_conf[i - 1 + shared->dim_n_I_C_2_to_H_D_conf_1 * (j - 1) + shared->dim_n_I_C_2_to_H_D_conf_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_I_C_2_to_H_D[shared->dim_n_I_C_2_to_H_D_12 * (k - 1) + shared->dim_n_I_C_2_to_H_D_1 * (j - 1) + i - 1], internal.p_star[i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_I_C_2_to_H_R_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_H_R_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_H_R_3; ++k) {
          internal.n_I_C_2_to_H_R[i - 1 + shared->dim_n_I_C_2_to_H_R_1 * (j - 1) + shared->dim_n_I_C_2_to_H_R_12 * (k - 1)] = internal.n_hosp_non_ICU[shared->dim_n_hosp_non_ICU_12 * (k - 1) + shared->dim_n_hosp_non_ICU_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_H_D[shared->dim_n_I_C_2_to_H_D_12 * (k - 1) + shared->dim_n_I_C_2_to_H_D_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_RS_1; ++i) {
      for (int j = 1; j <= shared->dim_n_RS_2; ++j) {
        for (int k = 1; k <= shared->dim_n_RS_3; ++k) {
          internal.n_RS[i - 1 + shared->dim_n_RS_1 * (j - 1) + shared->dim_n_RS_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_R_progress[shared->dim_n_R_progress_12 * (k - 1) + shared->dim_n_R_progress_1 * (j - 1) + i - 1], internal.p_RS[shared->dim_p_RS_12 * (k - 1) + shared->dim_p_RS_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_R_tmp_1; ++i) {
      for (int j = 1; j <= shared->dim_n_R_tmp_2; ++j) {
        for (int k = 1; k <= shared->dim_n_R_tmp_3; ++k) {
          internal.n_R_tmp[i - 1 + shared->dim_n_R_tmp_1 * (j - 1) + shared->dim_n_R_tmp_12 * (k - 1)] = R[shared->dim_R_12 * (k - 1) + shared->dim_R_1 * (j - 1) + i - 1] - internal.n_R_progress[shared->dim_n_R_progress_12 * (k - 1) + shared->dim_n_R_progress_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_S_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_n_S_vacc_skip_2; ++j) {
        internal.n_S_vacc_skip[i - 1 + shared->dim_n_S_vacc_skip_1 * (j - 1)] = dust::random::binomial<real_type>(rng_state, S[shared->dim_S_1 * (j - 1) + i - 1] - odin_sum3<real_type>(internal.n_S_progress.data(), i - 1, i, 0, shared->dim_n_S_progress_2, j - 1, j, shared->dim_n_S_progress_1, shared->dim_n_S_progress_12) - internal.n_S_next_vacc_class[shared->dim_n_S_next_vacc_class_1 * (j - 1) + i - 1], internal.p_S_vacc_skip[shared->dim_p_S_vacc_skip_1 * (j - 1) + i - 1]);
      }
    }
    real_type new_ICU_tot = odin_sum1<real_type>(internal.new_ICU_W_R_conf.data(), 0, shared->dim_new_ICU_W_R_conf) + odin_sum1<real_type>(internal.new_ICU_W_D_conf.data(), 0, shared->dim_new_ICU_W_D_conf) + odin_sum1<real_type>(internal.new_ICU_D_conf.data(), 0, shared->dim_new_ICU_D_conf);
    for (int i = 1; i <= shared->dim_ICU_W_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_W_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_W_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_W_R_conf_4; ++l) {
            state_next[shared->offset_variable_ICU_W_R_conf + i - 1 + shared->dim_ICU_W_R_conf_1 * (j - 1) + shared->dim_ICU_W_R_conf_12 * (k - 1) + shared->dim_ICU_W_R_conf_123 * (l - 1)] = internal.new_ICU_W_R_conf[shared->dim_new_ICU_W_R_conf_123 * (l - 1) + shared->dim_new_ICU_W_R_conf_12 * (k - 1) + shared->dim_new_ICU_W_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_ICU_W_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_W_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_W_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_W_R_unconf_4; ++l) {
            state_next[shared->offset_variable_ICU_W_R_unconf + i - 1 + shared->dim_ICU_W_R_unconf_1 * (j - 1) + shared->dim_ICU_W_R_unconf_12 * (k - 1) + shared->dim_ICU_W_R_unconf_123 * (l - 1)] = internal.new_ICU_W_R_unconf[shared->dim_new_ICU_W_R_unconf_123 * (l - 1) + shared->dim_new_ICU_W_R_unconf_12 * (k - 1) + shared->dim_new_ICU_W_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_ICU_pre_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_pre_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_pre_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_pre_conf_4; ++l) {
            state_next[shared->offset_variable_ICU_pre_conf + i - 1 + shared->dim_ICU_pre_conf_1 * (j - 1) + shared->dim_ICU_pre_conf_12 * (k - 1) + shared->dim_ICU_pre_conf_123 * (l - 1)] = internal.new_ICU_pre_conf[shared->dim_new_ICU_pre_conf_123 * (l - 1) + shared->dim_new_ICU_pre_conf_12 * (k - 1) + shared->dim_new_ICU_pre_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_ICU_pre_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_ICU_pre_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_ICU_pre_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_ICU_pre_unconf_4; ++l) {
            state_next[shared->offset_variable_ICU_pre_unconf + i - 1 + shared->dim_ICU_pre_unconf_1 * (j - 1) + shared->dim_ICU_pre_unconf_12 * (k - 1) + shared->dim_ICU_pre_unconf_123 * (l - 1)] = internal.new_ICU_pre_unconf[shared->dim_new_ICU_pre_unconf_123 * (l - 1) + shared->dim_new_ICU_pre_unconf_12 * (k - 1) + shared->dim_new_ICU_pre_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_I_A_1; ++i) {
      for (int j = 1; j <= shared->dim_I_A_2; ++j) {
        for (int k = 1; k <= shared->dim_I_A_3; ++k) {
          for (int l = 1; l <= shared->dim_I_A_4; ++l) {
            state_next[shared->offset_variable_I_A + i - 1 + shared->dim_I_A_1 * (j - 1) + shared->dim_I_A_12 * (k - 1) + shared->dim_I_A_123 * (l - 1)] = internal.new_I_A[shared->dim_new_I_A_123 * (l - 1) + shared->dim_new_I_A_12 * (k - 1) + shared->dim_new_I_A_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_I_P_1; ++i) {
      for (int j = 1; j <= shared->dim_I_P_2; ++j) {
        for (int k = 1; k <= shared->dim_I_P_3; ++k) {
          for (int l = 1; l <= shared->dim_I_P_4; ++l) {
            state_next[shared->offset_variable_I_P + i - 1 + shared->dim_I_P_1 * (j - 1) + shared->dim_I_P_12 * (k - 1) + shared->dim_I_P_123 * (l - 1)] = internal.new_I_P[shared->dim_new_I_P_123 * (l - 1) + shared->dim_new_I_P_12 * (k - 1) + shared->dim_new_I_P_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_E_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_E_vaccinated_2; ++j) {
        state_next[shared->offset_variable_cum_n_E_vaccinated + i - 1 + shared->dim_cum_n_E_vaccinated_1 * (j - 1)] = cum_n_E_vaccinated[shared->dim_cum_n_E_vaccinated_1 * (j - 1) + i - 1] + internal.n_E_vaccinated[shared->dim_n_E_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_I_A_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_I_A_vaccinated_2; ++j) {
        state_next[shared->offset_variable_cum_n_I_A_vaccinated + i - 1 + shared->dim_cum_n_I_A_vaccinated_1 * (j - 1)] = cum_n_I_A_vaccinated[shared->dim_cum_n_I_A_vaccinated_1 * (j - 1) + i - 1] + internal.n_I_A_vaccinated[shared->dim_n_I_A_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_I_P_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_I_P_vaccinated_2; ++j) {
        state_next[shared->offset_variable_cum_n_I_P_vaccinated + i - 1 + shared->dim_cum_n_I_P_vaccinated_1 * (j - 1)] = cum_n_I_P_vaccinated[shared->dim_cum_n_I_P_vaccinated_1 * (j - 1) + i - 1] + internal.n_I_P_vaccinated[shared->dim_n_I_P_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    state_next[16] = cum_new_conf + delta_new_conf;
    state_next[2] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_new_conf : new_conf_inc + delta_new_conf);
    for (int i = 1; i <= shared->dim_n_I_C_2_to_H_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_n_I_C_2_to_H_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_n_I_C_2_to_H_R_conf_3; ++k) {
          internal.n_I_C_2_to_H_R_conf[i - 1 + shared->dim_n_I_C_2_to_H_R_conf_1 * (j - 1) + shared->dim_n_I_C_2_to_H_R_conf_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_I_C_2_to_H_R[shared->dim_n_I_C_2_to_H_R_12 * (k - 1) + shared->dim_n_I_C_2_to_H_R_1 * (j - 1) + i - 1], internal.p_star[i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_R5_to_E3_1; ++i) {
      for (int j = 1; j <= shared->dim_n_R5_to_E3_2; ++j) {
        internal.n_R5_to_E3[i - 1 + shared->dim_n_R5_to_E3_1 * (j - 1)] = (shared->n_strains == 1 ? 0 : dust::random::binomial<real_type>(rng_state, internal.n_R_progress[shared->dim_n_R_progress_12 * (j - 1) + shared->dim_n_R_progress_1 * 4 + i - 1] - internal.n_RS[shared->dim_n_RS_12 * (j - 1) + shared->dim_n_RS_1 * 4 + i - 1], internal.p_R5_to_E3[shared->dim_p_R5_to_E3_1 * (j - 1) + i - 1]));
      }
    }
    for (int i = 1; i <= shared->dim_n_R_next_vacc_class_1; ++i) {
      for (int j = 1; j <= shared->dim_n_R_next_vacc_class_2; ++j) {
        for (int k = 1; k <= shared->dim_n_R_next_vacc_class_3; ++k) {
          internal.n_R_next_vacc_class[i - 1 + shared->dim_n_R_next_vacc_class_1 * (j - 1) + shared->dim_n_R_next_vacc_class_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_R_tmp[shared->dim_n_R_tmp_12 * (k - 1) + shared->dim_n_R_tmp_1 * (j - 1) + i - 1], internal.p_R_next_vacc_class[shared->dim_p_R_next_vacc_class_12 * (k - 1) + shared->dim_p_R_next_vacc_class_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_S_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_n_S_vaccinated_2; ++j) {
        internal.n_S_vaccinated[i - 1 + shared->dim_n_S_vaccinated_1 * (j - 1)] = internal.n_S_next_vacc_class[shared->dim_n_S_next_vacc_class_1 * (j - 1) + i - 1] + ((shared->vacc_skipped[j - 1] > 0 ? internal.n_S_vacc_skip[shared->dim_n_S_vacc_skip_1 * (shared->vacc_skipped[j - 1] - 1) + i - 1] : 0));
      }
    }
    for (int i = 1; i <= shared->dim_new_H_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_H_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_H_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_H_D_conf_4; ++l) {
            internal.new_H_D_conf[i - 1 + shared->dim_new_H_D_conf_1 * (j - 1) + shared->dim_new_H_D_conf_12 * (k - 1) + shared->dim_new_H_D_conf_123 * (l - 1)] = internal.aux_H_D_conf[shared->dim_aux_H_D_conf_123 * (l - 1) + shared->dim_aux_H_D_conf_12 * (k - 1) + shared->dim_aux_H_D_conf_1 * (j - 1) + i - 1] + internal.n_H_D_unconf_to_conf[shared->dim_n_H_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_H_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_H_D_unconf_to_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_2_to_H_D_conf[shared->dim_n_I_C_2_to_H_D_conf_12 * (l - 1) + shared->dim_n_I_C_2_to_H_D_conf_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_H_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_H_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_H_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_H_D_unconf_4; ++l) {
            internal.new_H_D_unconf[i - 1 + shared->dim_new_H_D_unconf_1 * (j - 1) + shared->dim_new_H_D_unconf_12 * (k - 1) + shared->dim_new_H_D_unconf_123 * (l - 1)] = internal.aux_H_D_unconf[shared->dim_aux_H_D_unconf_123 * (l - 1) + shared->dim_aux_H_D_unconf_12 * (k - 1) + shared->dim_aux_H_D_unconf_1 * (j - 1) + i - 1] - internal.n_H_D_unconf_to_conf[shared->dim_n_H_D_unconf_to_conf_123 * (l - 1) + shared->dim_n_H_D_unconf_to_conf_12 * (k - 1) + shared->dim_n_H_D_unconf_to_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_2_to_H_D[shared->dim_n_I_C_2_to_H_D_12 * (l - 1) + shared->dim_n_I_C_2_to_H_D_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_H_D_conf[shared->dim_n_I_C_2_to_H_D_conf_12 * (l - 1) + shared->dim_n_I_C_2_to_H_D_conf_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_S_1; ++i) {
      for (int j = 1; j <= shared->dim_new_S_2; ++j) {
        internal.new_S[i - 1 + shared->dim_new_S_1 * (j - 1)] = S[shared->dim_S_1 * (j - 1) + i - 1] + odin_sum3<real_type>(internal.n_RS.data(), i - 1, i, 0, shared->dim_n_RS_2, j - 1, j, shared->dim_n_RS_1, shared->dim_n_RS_12) + odin_sum3<real_type>(internal.n_infected_to_S.data(), i - 1, i, 0, shared->dim_n_infected_to_S_2, j - 1, j, shared->dim_n_infected_to_S_1, shared->dim_n_infected_to_S_12) - odin_sum3<real_type>(internal.n_S_progress.data(), i - 1, i, 0, shared->dim_n_S_progress_2, j - 1, j, shared->dim_n_S_progress_1, shared->dim_n_S_progress_12) - internal.n_S_next_vacc_class[shared->dim_n_S_next_vacc_class_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_new_S_1; ++i) {
      for (int j = 1; j <= shared->dim_new_S_2; ++j) {
        internal.new_S[i - 1 + shared->dim_new_S_1 * (j - 1)] = internal.new_S[shared->dim_new_S_1 * (j - 1) + i - 1] + ((j == 1 ? internal.n_S_next_vacc_class[shared->dim_n_S_next_vacc_class_1 * (shared->n_vacc_classes - 1) + i - 1] : internal.n_S_next_vacc_class[shared->dim_n_S_next_vacc_class_1 * (j - 1 - 1) + i - 1])) - ((shared->vacc_skip_to[j - 1] > 0 ? internal.n_S_vacc_skip[shared->dim_n_S_vacc_skip_1 * (j - 1) + i - 1] : 0)) + ((shared->vacc_skip_from[j - 1] > 0 ? internal.n_S_vacc_skip[shared->dim_n_S_vacc_skip_1 * (shared->vacc_skip_from[j - 1] - 1) + i - 1] : 0));
      }
    }
    state_next[21] = new_ICU_tot;
    for (int i = 1; i <= shared->dim_cum_n_S_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_S_vacc_skip_2; ++j) {
        state_next[shared->offset_variable_cum_n_S_vacc_skip + i - 1 + shared->dim_cum_n_S_vacc_skip_1 * (j - 1)] = cum_n_S_vacc_skip[shared->dim_cum_n_S_vacc_skip_1 * (j - 1) + i - 1] + internal.n_S_vacc_skip[shared->dim_n_S_vacc_skip_1 * (j - 1) + i - 1];
      }
    }
    real_type delta_admit_conf = odin_sum1<real_type>(internal.n_I_C_2_to_H_D_conf.data(), 0, shared->dim_n_I_C_2_to_H_D_conf) + odin_sum1<real_type>(internal.n_I_C_2_to_H_R_conf.data(), 0, shared->dim_n_I_C_2_to_H_R_conf) + odin_sum1<real_type>(internal.n_I_C_2_to_ICU_pre_conf.data(), 0, shared->dim_n_I_C_2_to_ICU_pre_conf);
    for (int i = 1; i <= shared->dim_delta_diagnoses_admitted_1; ++i) {
      for (int j = 1; j <= shared->dim_delta_diagnoses_admitted_2; ++j) {
        internal.delta_diagnoses_admitted[i - 1 + shared->dim_delta_diagnoses_admitted_1 * (j - 1)] = odin_sum3<real_type>(internal.n_I_C_2_to_H_D_conf.data(), i - 1, i, 0, shared->dim_n_I_C_2_to_H_D_conf_2, j - 1, j, shared->dim_n_I_C_2_to_H_D_conf_1, shared->dim_n_I_C_2_to_H_D_conf_12) + odin_sum3<real_type>(internal.n_I_C_2_to_H_R_conf.data(), i - 1, i, 0, shared->dim_n_I_C_2_to_H_R_conf_2, j - 1, j, shared->dim_n_I_C_2_to_H_R_conf_1, shared->dim_n_I_C_2_to_H_R_conf_12) + odin_sum3<real_type>(internal.n_I_C_2_to_ICU_pre_conf.data(), i - 1, i, 0, shared->dim_n_I_C_2_to_ICU_pre_conf_2, j - 1, j, shared->dim_n_I_C_2_to_ICU_pre_conf_1, shared->dim_n_I_C_2_to_ICU_pre_conf_12) + odin_sum4<real_type>(internal.n_H_D_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_H_D_unconf_to_conf_2, 0, shared->dim_n_H_D_unconf_to_conf_3, j - 1, j, shared->dim_n_H_D_unconf_to_conf_1, shared->dim_n_H_D_unconf_to_conf_12, shared->dim_n_H_D_unconf_to_conf_123) + odin_sum4<real_type>(internal.n_H_R_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_H_R_unconf_to_conf_2, 0, shared->dim_n_H_R_unconf_to_conf_3, j - 1, j, shared->dim_n_H_R_unconf_to_conf_1, shared->dim_n_H_R_unconf_to_conf_12, shared->dim_n_H_R_unconf_to_conf_123) + odin_sum4<real_type>(internal.n_ICU_pre_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_ICU_pre_unconf_to_conf_2, 0, shared->dim_n_ICU_pre_unconf_to_conf_3, j - 1, j, shared->dim_n_ICU_pre_unconf_to_conf_1, shared->dim_n_ICU_pre_unconf_to_conf_12, shared->dim_n_ICU_pre_unconf_to_conf_123) + odin_sum4<real_type>(internal.n_ICU_D_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_ICU_D_unconf_to_conf_2, 0, shared->dim_n_ICU_D_unconf_to_conf_3, j - 1, j, shared->dim_n_ICU_D_unconf_to_conf_1, shared->dim_n_ICU_D_unconf_to_conf_12, shared->dim_n_ICU_D_unconf_to_conf_123) + odin_sum4<real_type>(internal.n_ICU_W_R_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_ICU_W_R_unconf_to_conf_2, 0, shared->dim_n_ICU_W_R_unconf_to_conf_3, j - 1, j, shared->dim_n_ICU_W_R_unconf_to_conf_1, shared->dim_n_ICU_W_R_unconf_to_conf_12, shared->dim_n_ICU_W_R_unconf_to_conf_123) + odin_sum4<real_type>(internal.n_ICU_W_D_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_ICU_W_D_unconf_to_conf_2, 0, shared->dim_n_ICU_W_D_unconf_to_conf_3, j - 1, j, shared->dim_n_ICU_W_D_unconf_to_conf_1, shared->dim_n_ICU_W_D_unconf_to_conf_12, shared->dim_n_ICU_W_D_unconf_to_conf_123) + odin_sum4<real_type>(internal.n_W_R_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_W_R_unconf_to_conf_2, 0, shared->dim_n_W_R_unconf_to_conf_3, j - 1, j, shared->dim_n_W_R_unconf_to_conf_1, shared->dim_n_W_R_unconf_to_conf_12, shared->dim_n_W_R_unconf_to_conf_123) + odin_sum4<real_type>(internal.n_W_D_unconf_to_conf.data(), i - 1, i, 0, shared->dim_n_W_D_unconf_to_conf_2, 0, shared->dim_n_W_D_unconf_to_conf_3, j - 1, j, shared->dim_n_W_D_unconf_to_conf_1, shared->dim_n_W_D_unconf_to_conf_12, shared->dim_n_W_D_unconf_to_conf_123);
      }
    }
    for (int i = 1; i <= shared->dim_eff_sus_S_1; ++i) {
      for (int j = 1; j <= shared->dim_eff_sus_S_2; ++j) {
        for (int k = 1; k <= shared->dim_eff_sus_S_3; ++k) {
          internal.eff_sus_S[i - 1 + shared->dim_eff_sus_S_1 * (j - 1) + shared->dim_eff_sus_S_12 * (k - 1)] = internal.new_S[shared->dim_new_S_1 * (k - 1) + i - 1] * shared->rel_susceptibility[shared->dim_rel_susceptibility_12 * (k - 1) + shared->dim_rel_susceptibility_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_RE_1; ++i) {
      for (int j = 1; j <= shared->dim_n_RE_2; ++j) {
        for (int k = 1; k <= shared->dim_n_RE_3; ++k) {
          internal.n_RE[i - 1 + shared->dim_n_RE_1 * (j - 1) + shared->dim_n_RE_12 * (k - 1)] = (shared->n_strains == 1 || j < 3 ? 0 : (j == 3 ? (internal.n_R_progress[shared->dim_n_R_progress_12 * (k - 1) + shared->dim_n_R_progress_1 * 0 + i - 1] - internal.n_RS[shared->dim_n_RS_12 * (k - 1) + shared->dim_n_RS_1 * 0 + i - 1] + internal.n_R_progress[shared->dim_n_R_progress_12 * (k - 1) + shared->dim_n_R_progress_1 * 3 + i - 1] - internal.n_RS[shared->dim_n_RS_12 * (k - 1) + shared->dim_n_RS_1 * 3 + i - 1] + internal.n_R5_to_E3[shared->dim_n_R5_to_E3_1 * (k - 1) + i - 1]) : (internal.n_R_progress[shared->dim_n_R_progress_12 * (k - 1) + shared->dim_n_R_progress_1 * 4 + i - 1] - internal.n_RS[shared->dim_n_RS_12 * (k - 1) + shared->dim_n_RS_1 * 4 + i - 1] - internal.n_R5_to_E3[shared->dim_n_R5_to_E3_1 * (k - 1) + i - 1])));
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_R_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_n_R_vacc_skip_2; ++j) {
        for (int k = 1; k <= shared->dim_n_R_vacc_skip_3; ++k) {
          internal.n_R_vacc_skip[i - 1 + shared->dim_n_R_vacc_skip_1 * (j - 1) + shared->dim_n_R_vacc_skip_12 * (k - 1)] = dust::random::binomial<real_type>(rng_state, internal.n_R_tmp[shared->dim_n_R_tmp_12 * (k - 1) + shared->dim_n_R_tmp_1 * (j - 1) + i - 1] - internal.n_R_next_vacc_class[shared->dim_n_R_next_vacc_class_12 * (k - 1) + shared->dim_n_R_next_vacc_class_1 * (j - 1) + i - 1], internal.p_R_vacc_skip[shared->dim_p_R_vacc_skip_12 * (k - 1) + shared->dim_p_R_vacc_skip_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_H_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_H_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_H_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_H_R_conf_4; ++l) {
            internal.new_H_R_conf[i - 1 + shared->dim_new_H_R_conf_1 * (j - 1) + shared->dim_new_H_R_conf_12 * (k - 1) + shared->dim_new_H_R_conf_123 * (l - 1)] = internal.aux_H_R_conf[shared->dim_aux_H_R_conf_123 * (l - 1) + shared->dim_aux_H_R_conf_12 * (k - 1) + shared->dim_aux_H_R_conf_1 * (j - 1) + i - 1] + internal.n_H_R_unconf_to_conf[shared->dim_n_H_R_unconf_to_conf_123 * (l - 1) + shared->dim_n_H_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_H_R_unconf_to_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_2_to_H_R_conf[shared->dim_n_I_C_2_to_H_R_conf_12 * (l - 1) + shared->dim_n_I_C_2_to_H_R_conf_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_H_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_new_H_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_new_H_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_new_H_R_unconf_4; ++l) {
            internal.new_H_R_unconf[i - 1 + shared->dim_new_H_R_unconf_1 * (j - 1) + shared->dim_new_H_R_unconf_12 * (k - 1) + shared->dim_new_H_R_unconf_123 * (l - 1)] = internal.aux_H_R_unconf[shared->dim_aux_H_R_unconf_123 * (l - 1) + shared->dim_aux_H_R_unconf_12 * (k - 1) + shared->dim_aux_H_R_unconf_1 * (j - 1) + i - 1] - internal.n_H_R_unconf_to_conf[shared->dim_n_H_R_unconf_to_conf_123 * (l - 1) + shared->dim_n_H_R_unconf_to_conf_12 * (k - 1) + shared->dim_n_H_R_unconf_to_conf_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_I_C_2_to_H_R[shared->dim_n_I_C_2_to_H_R_12 * (l - 1) + shared->dim_n_I_C_2_to_H_R_1 * (j - 1) + i - 1] - internal.n_I_C_2_to_H_R_conf[shared->dim_n_I_C_2_to_H_R_conf_12 * (l - 1) + shared->dim_n_I_C_2_to_H_R_conf_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_H_D_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_H_D_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_H_D_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_H_D_conf_4; ++l) {
            state_next[shared->offset_variable_H_D_conf + i - 1 + shared->dim_H_D_conf_1 * (j - 1) + shared->dim_H_D_conf_12 * (k - 1) + shared->dim_H_D_conf_123 * (l - 1)] = internal.new_H_D_conf[shared->dim_new_H_D_conf_123 * (l - 1) + shared->dim_new_H_D_conf_12 * (k - 1) + shared->dim_new_H_D_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_H_D_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_H_D_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_H_D_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_H_D_unconf_4; ++l) {
            state_next[shared->offset_variable_H_D_unconf + i - 1 + shared->dim_H_D_unconf_1 * (j - 1) + shared->dim_H_D_unconf_12 * (k - 1) + shared->dim_H_D_unconf_123 * (l - 1)] = internal.new_H_D_unconf[shared->dim_new_H_D_unconf_123 * (l - 1) + shared->dim_new_H_D_unconf_12 * (k - 1) + shared->dim_new_H_D_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_S_1; ++i) {
      for (int j = 1; j <= shared->dim_S_2; ++j) {
        state_next[shared->offset_variable_S + i - 1 + shared->dim_S_1 * (j - 1)] = internal.new_S[shared->dim_new_S_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_S_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_S_vaccinated_2; ++j) {
        state_next[shared->offset_variable_cum_n_S_vaccinated + i - 1 + shared->dim_cum_n_S_vaccinated_1 * (j - 1)] = cum_n_S_vaccinated[shared->dim_cum_n_S_vaccinated_1 * (j - 1) + i - 1] + internal.n_S_vaccinated[shared->dim_n_S_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    state_next[86] = odin_sum1<real_type>(internal.new_S.data(), 0, shared->dim_new_S);
    real_type delta_all_admission_0_9_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 0, 2, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1);
    real_type delta_all_admission_10_19_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 2, 4, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1);
    real_type delta_all_admission_20_29_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 4, 6, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 17, 18, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * 1 / (real_type) 8;
    real_type delta_all_admission_30_39_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 6, 8, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 17, 18, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * 2 / (real_type) 8;
    real_type delta_all_admission_40_49_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 8, 10, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 17, 18, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * 2 / (real_type) 8;
    real_type delta_all_admission_50_59_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 10, 12, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 17, 18, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * 2 / (real_type) 8;
    real_type delta_all_admission_60_69_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 12, 14, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 17, 18, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * 1 / (real_type) 8 + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 18, 19, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * static_cast<real_type>(0.050000000000000003);
    real_type delta_all_admission_70_79_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 14, 16, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 18, 19, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * static_cast<real_type>(0.20000000000000001);
    real_type delta_all_admission_80_plus_conf = odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 16, 17, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) + odin_sum2<real_type>(internal.delta_diagnoses_admitted.data(), 18, 19, 0, shared->dim_delta_diagnoses_admitted_2, shared->dim_delta_diagnoses_admitted_1) * static_cast<real_type>(0.75);
    for (int i = 1; i <= shared->dim_delta_infections_1; ++i) {
      for (int j = 1; j <= shared->dim_delta_infections_2; ++j) {
        for (int k = 1; k <= shared->dim_delta_infections_3; ++k) {
          internal.delta_infections[i - 1 + shared->dim_delta_infections_1 * (j - 1) + shared->dim_delta_infections_12 * (k - 1)] = internal.n_S_progress[shared->dim_n_S_progress_12 * (k - 1) + shared->dim_n_S_progress_1 * (j - 1) + i - 1] + ((j > 2 ? internal.n_RE[shared->dim_n_RE_12 * (k - 1) + shared->dim_n_RE_1 * (j - 1) + i - 1] : 0));
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_R_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_n_R_vaccinated_2; ++j) {
        internal.n_R_vaccinated[i - 1 + shared->dim_n_R_vaccinated_1 * (j - 1)] = odin_sum3<real_type>(internal.n_R_next_vacc_class.data(), i - 1, i, 0, shared->dim_n_R_next_vacc_class_2, j - 1, j, shared->dim_n_R_next_vacc_class_1, shared->dim_n_R_next_vacc_class_12) + ((shared->vacc_skipped[j - 1] > 0 ? odin_sum3<real_type>(internal.n_R_vacc_skip.data(), i - 1, i, 0, shared->dim_n_R_vacc_skip_2, shared->vacc_skipped[j - 1] - 1, shared->vacc_skipped[j - 1], shared->dim_n_R_vacc_skip_1, shared->dim_n_R_vacc_skip_12) : 0));
      }
    }
    for (int i = 1; i <= shared->dim_n_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_n_vacc_skip_2; ++j) {
        internal.n_vacc_skip[i - 1 + shared->dim_n_vacc_skip_1 * (j - 1)] = internal.n_S_vacc_skip[shared->dim_n_S_vacc_skip_1 * (j - 1) + i - 1] + odin_sum4<real_type>(internal.n_E_vacc_skip.data(), i - 1, i, 0, shared->dim_n_E_vacc_skip_2, 0, shared->dim_n_E_vacc_skip_3, j - 1, j, shared->dim_n_E_vacc_skip_1, shared->dim_n_E_vacc_skip_12, shared->dim_n_E_vacc_skip_123) + odin_sum4<real_type>(internal.n_I_A_vacc_skip.data(), i - 1, i, 0, shared->dim_n_I_A_vacc_skip_2, 0, shared->dim_n_I_A_vacc_skip_3, j - 1, j, shared->dim_n_I_A_vacc_skip_1, shared->dim_n_I_A_vacc_skip_12, shared->dim_n_I_A_vacc_skip_123) + odin_sum4<real_type>(internal.n_I_P_vacc_skip.data(), i - 1, i, 0, shared->dim_n_I_P_vacc_skip_2, 0, shared->dim_n_I_P_vacc_skip_3, j - 1, j, shared->dim_n_I_P_vacc_skip_1, shared->dim_n_I_P_vacc_skip_12, shared->dim_n_I_P_vacc_skip_123) + odin_sum3<real_type>(internal.n_R_vacc_skip.data(), i - 1, i, 0, shared->dim_n_R_vacc_skip_2, j - 1, j, shared->dim_n_R_vacc_skip_1, shared->dim_n_R_vacc_skip_12);
      }
    }
    for (int i = 1; i <= shared->dim_new_E_1; ++i) {
      for (int j = 1; j <= shared->dim_new_E_2; ++j) {
        for (int k = 1; k <= shared->dim_new_E_3; ++k) {
          for (int l = 1; l <= shared->dim_new_E_4; ++l) {
            internal.new_E[i - 1 + shared->dim_new_E_1 * (j - 1) + shared->dim_new_E_12 * (k - 1) + shared->dim_new_E_123 * (l - 1)] = E[shared->dim_E_123 * (l - 1) + shared->dim_E_12 * (k - 1) + shared->dim_E_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_S_progress[shared->dim_n_S_progress_12 * (l - 1) + shared->dim_n_S_progress_1 * (j - 1) + i - 1] + ((j > 2 ? internal.n_RE[shared->dim_n_RE_12 * (l - 1) + shared->dim_n_RE_1 * (j - 1) + i - 1] : 0)) : internal.n_E_progress[shared->dim_n_E_progress_123 * (l - 1) + shared->dim_n_E_progress_12 * (k - 1 - 1) + shared->dim_n_E_progress_1 * (j - 1) + i - 1])) - internal.n_E_progress[shared->dim_n_E_progress_123 * (l - 1) + shared->dim_n_E_progress_12 * (k - 1) + shared->dim_n_E_progress_1 * (j - 1) + i - 1] - internal.n_E_next_vacc_class[shared->dim_n_E_next_vacc_class_123 * (l - 1) + shared->dim_n_E_next_vacc_class_12 * (k - 1) + shared->dim_n_E_next_vacc_class_1 * (j - 1) + i - 1] + ((l == 1 ? internal.n_E_next_vacc_class[shared->dim_n_E_next_vacc_class_123 * (shared->n_vacc_classes - 1) + shared->dim_n_E_next_vacc_class_12 * (k - 1) + shared->dim_n_E_next_vacc_class_1 * (j - 1) + i - 1] : internal.n_E_next_vacc_class[shared->dim_n_E_next_vacc_class_123 * (l - 1 - 1) + shared->dim_n_E_next_vacc_class_12 * (k - 1) + shared->dim_n_E_next_vacc_class_1 * (j - 1) + i - 1])) - ((shared->vacc_skip_to[l - 1] > 0 ? internal.n_E_vacc_skip[shared->dim_n_E_vacc_skip_123 * (l - 1) + shared->dim_n_E_vacc_skip_12 * (k - 1) + shared->dim_n_E_vacc_skip_1 * (j - 1) + i - 1] : 0)) + ((shared->vacc_skip_from[l - 1] > 0 ? internal.n_E_vacc_skip[shared->dim_n_E_vacc_skip_123 * (shared->vacc_skip_from[l - 1] - 1) + shared->dim_n_E_vacc_skip_12 * (k - 1) + shared->dim_n_E_vacc_skip_1 * (j - 1) + i - 1] : 0));
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_I_weighted_1; ++i) {
      for (int j = 1; j <= shared->dim_new_I_weighted_2; ++j) {
        for (int k = 1; k <= shared->dim_new_I_weighted_3; ++k) {
          internal.new_I_weighted[i - 1 + shared->dim_new_I_weighted_1 * (j - 1) + shared->dim_new_I_weighted_12 * (k - 1)] = shared->I_A_transmission * odin_sum4<real_type>(internal.new_I_A.data(), i - 1, i, j - 1, j, 0, shared->dim_new_I_A_3, k - 1, k, shared->dim_new_I_A_1, shared->dim_new_I_A_12, shared->dim_new_I_A_123) + shared->I_P_transmission * odin_sum4<real_type>(internal.new_I_P.data(), i - 1, i, j - 1, j, 0, shared->dim_new_I_P_3, k - 1, k, shared->dim_new_I_P_1, shared->dim_new_I_P_12, shared->dim_new_I_P_123) + shared->I_C_1_transmission * odin_sum4<real_type>(internal.new_I_C_1.data(), i - 1, i, j - 1, j, 0, shared->dim_new_I_C_1_3, k - 1, k, shared->dim_new_I_C_1_1, shared->dim_new_I_C_1_12, shared->dim_new_I_C_1_123) + shared->I_C_2_transmission * odin_sum4<real_type>(internal.new_I_C_2.data(), i - 1, i, j - 1, j, 0, shared->dim_new_I_C_2_3, k - 1, k, shared->dim_new_I_C_2_1, shared->dim_new_I_C_2_12, shared->dim_new_I_C_2_123) + shared->hosp_transmission * (odin_sum4<real_type>(internal.new_ICU_pre_unconf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_pre_unconf_3, k - 1, k, shared->dim_new_ICU_pre_unconf_1, shared->dim_new_ICU_pre_unconf_12, shared->dim_new_ICU_pre_unconf_123) + odin_sum4<real_type>(internal.new_ICU_pre_conf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_pre_conf_3, k - 1, k, shared->dim_new_ICU_pre_conf_1, shared->dim_new_ICU_pre_conf_12, shared->dim_new_ICU_pre_conf_123) + odin_sum4<real_type>(internal.new_H_R_unconf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_H_R_unconf_3, k - 1, k, shared->dim_new_H_R_unconf_1, shared->dim_new_H_R_unconf_12, shared->dim_new_H_R_unconf_123) + odin_sum4<real_type>(internal.new_H_R_conf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_H_R_conf_3, k - 1, k, shared->dim_new_H_R_conf_1, shared->dim_new_H_R_conf_12, shared->dim_new_H_R_conf_123) + odin_sum4<real_type>(internal.new_H_D_unconf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_H_D_unconf_3, k - 1, k, shared->dim_new_H_D_unconf_1, shared->dim_new_H_D_unconf_12, shared->dim_new_H_D_unconf_123) + odin_sum4<real_type>(internal.new_H_D_conf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_H_D_conf_3, k - 1, k, shared->dim_new_H_D_conf_1, shared->dim_new_H_D_conf_12, shared->dim_new_H_D_conf_123)) + shared->ICU_transmission * (odin_sum4<real_type>(internal.new_ICU_W_R_unconf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_W_R_unconf_3, k - 1, k, shared->dim_new_ICU_W_R_unconf_1, shared->dim_new_ICU_W_R_unconf_12, shared->dim_new_ICU_W_R_unconf_123) + odin_sum4<real_type>(internal.new_ICU_W_R_conf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_W_R_conf_3, k - 1, k, shared->dim_new_ICU_W_R_conf_1, shared->dim_new_ICU_W_R_conf_12, shared->dim_new_ICU_W_R_conf_123) + odin_sum4<real_type>(internal.new_ICU_W_D_unconf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_W_D_unconf_3, k - 1, k, shared->dim_new_ICU_W_D_unconf_1, shared->dim_new_ICU_W_D_unconf_12, shared->dim_new_ICU_W_D_unconf_123) + odin_sum4<real_type>(internal.new_ICU_W_D_conf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_W_D_conf_3, k - 1, k, shared->dim_new_ICU_W_D_conf_1, shared->dim_new_ICU_W_D_conf_12, shared->dim_new_ICU_W_D_conf_123) + odin_sum4<real_type>(internal.new_ICU_D_unconf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_D_unconf_3, k - 1, k, shared->dim_new_ICU_D_unconf_1, shared->dim_new_ICU_D_unconf_12, shared->dim_new_ICU_D_unconf_123) + odin_sum4<real_type>(internal.new_ICU_D_conf.data(), i - 1, i, j - 1, j, 0, shared->dim_new_ICU_D_conf_3, k - 1, k, shared->dim_new_ICU_D_conf_1, shared->dim_new_ICU_D_conf_12, shared->dim_new_ICU_D_conf_123)) + shared->G_D_transmission * odin_sum4<real_type>(internal.new_G_D.data(), i - 1, i, j - 1, j, 0, shared->dim_new_G_D_3, k - 1, k, shared->dim_new_G_D_1, shared->dim_new_G_D_12, shared->dim_new_G_D_123);
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_R_1; ++i) {
      for (int j = 1; j <= shared->dim_new_R_2; ++j) {
        for (int k = 1; k <= shared->dim_new_R_3; ++k) {
          internal.new_R[i - 1 + shared->dim_new_R_1 * (j - 1) + shared->dim_new_R_12 * (k - 1)] = R[shared->dim_R_12 * (k - 1) + shared->dim_R_1 * (j - 1) + i - 1] - internal.n_R_progress[shared->dim_n_R_progress_12 * (k - 1) + shared->dim_n_R_progress_1 * (j - 1) + i - 1] - internal.n_R_next_vacc_class[shared->dim_n_R_next_vacc_class_12 * (k - 1) + shared->dim_n_R_next_vacc_class_1 * (j - 1) + i - 1] + ((shared->n_strains == 1 || j < 5 ? internal.n_infected_to_R[shared->dim_n_infected_to_R_12 * (k - 1) + shared->dim_n_infected_to_R_1 * (j - 1) + i - 1] : 0)) + ((k == 1 ? internal.n_R_next_vacc_class[shared->dim_n_R_next_vacc_class_12 * (shared->n_vacc_classes - 1) + shared->dim_n_R_next_vacc_class_1 * (j - 1) + i - 1] : internal.n_R_next_vacc_class[shared->dim_n_R_next_vacc_class_12 * (k - 1 - 1) + shared->dim_n_R_next_vacc_class_1 * (j - 1) + i - 1])) - ((shared->vacc_skip_to[k - 1] > 0 ? internal.n_R_vacc_skip[shared->dim_n_R_vacc_skip_12 * (k - 1) + shared->dim_n_R_vacc_skip_1 * (j - 1) + i - 1] : 0)) + ((shared->vacc_skip_from[k - 1] > 0 ? internal.n_R_vacc_skip[shared->dim_n_R_vacc_skip_12 * (shared->vacc_skip_from[k - 1] - 1) + shared->dim_n_R_vacc_skip_1 * (j - 1) + i - 1] : 0));
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_T_PCR_pre_1; ++i) {
      for (int j = 1; j <= shared->dim_new_T_PCR_pre_2; ++j) {
        for (int k = 1; k <= shared->dim_new_T_PCR_pre_3; ++k) {
          for (int l = 1; l <= shared->dim_new_T_PCR_pre_4; ++l) {
            internal.new_T_PCR_pre[i - 1 + shared->dim_new_T_PCR_pre_1 * (j - 1) + shared->dim_new_T_PCR_pre_12 * (k - 1) + shared->dim_new_T_PCR_pre_123 * (l - 1)] = T_PCR_pre[shared->dim_T_PCR_pre_123 * (l - 1) + shared->dim_T_PCR_pre_12 * (k - 1) + shared->dim_T_PCR_pre_1 * (j - 1) + i - 1] - internal.n_T_PCR_pre_progress[shared->dim_n_T_PCR_pre_progress_123 * (l - 1) + shared->dim_n_T_PCR_pre_progress_12 * (k - 1) + shared->dim_n_T_PCR_pre_progress_1 * (j - 1) + i - 1] + ((k == 1 ? internal.n_S_progress[shared->dim_n_S_progress_12 * (l - 1) + shared->dim_n_S_progress_1 * (j - 1) + i - 1] + internal.n_RE[shared->dim_n_RE_12 * (l - 1) + shared->dim_n_RE_1 * (j - 1) + i - 1] : internal.n_T_PCR_pre_progress[shared->dim_n_T_PCR_pre_progress_123 * (l - 1) + shared->dim_n_T_PCR_pre_progress_12 * (k - 1 - 1) + shared->dim_n_T_PCR_pre_progress_1 * (j - 1) + i - 1]));
          }
        }
      }
    }
    real_type new_general_tot = odin_sum1<real_type>(internal.new_ICU_pre_conf.data(), 0, shared->dim_new_ICU_pre_conf) + odin_sum1<real_type>(internal.new_H_R_conf.data(), 0, shared->dim_new_H_R_conf) + odin_sum1<real_type>(internal.new_H_D_conf.data(), 0, shared->dim_new_H_D_conf) + odin_sum1<real_type>(internal.new_W_R_conf.data(), 0, shared->dim_new_W_R_conf) + odin_sum1<real_type>(internal.new_W_D_conf.data(), 0, shared->dim_new_W_D_conf);
    for (int i = 1; i <= shared->dim_H_R_conf_1; ++i) {
      for (int j = 1; j <= shared->dim_H_R_conf_2; ++j) {
        for (int k = 1; k <= shared->dim_H_R_conf_3; ++k) {
          for (int l = 1; l <= shared->dim_H_R_conf_4; ++l) {
            state_next[shared->offset_variable_H_R_conf + i - 1 + shared->dim_H_R_conf_1 * (j - 1) + shared->dim_H_R_conf_12 * (k - 1) + shared->dim_H_R_conf_123 * (l - 1)] = internal.new_H_R_conf[shared->dim_new_H_R_conf_123 * (l - 1) + shared->dim_new_H_R_conf_12 * (k - 1) + shared->dim_new_H_R_conf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_H_R_unconf_1; ++i) {
      for (int j = 1; j <= shared->dim_H_R_unconf_2; ++j) {
        for (int k = 1; k <= shared->dim_H_R_unconf_3; ++k) {
          for (int l = 1; l <= shared->dim_H_R_unconf_4; ++l) {
            state_next[shared->offset_variable_H_R_unconf + i - 1 + shared->dim_H_R_unconf_1 * (j - 1) + shared->dim_H_R_unconf_12 * (k - 1) + shared->dim_H_R_unconf_123 * (l - 1)] = internal.new_H_R_unconf[shared->dim_new_H_R_unconf_123 * (l - 1) + shared->dim_new_H_R_unconf_12 * (k - 1) + shared->dim_new_H_R_unconf_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    state_next[1] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_admit_conf : admit_conf_inc + delta_admit_conf);
    state_next[15] = cum_admit_conf + delta_admit_conf;
    for (int i = 1; i <= shared->dim_cum_n_R_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_R_vacc_skip_2; ++j) {
        state_next[shared->offset_variable_cum_n_R_vacc_skip + i - 1 + shared->dim_cum_n_R_vacc_skip_1 * (j - 1)] = cum_n_R_vacc_skip[shared->dim_cum_n_R_vacc_skip_1 * (j - 1) + i - 1] + odin_sum3<real_type>(internal.n_R_vacc_skip.data(), i - 1, i, 0, shared->dim_n_R_vacc_skip_2, j - 1, j, shared->dim_n_R_vacc_skip_1, shared->dim_n_R_vacc_skip_12);
      }
    }
    for (int i = 1; i <= shared->dim_diagnoses_admitted_1; ++i) {
      for (int j = 1; j <= shared->dim_diagnoses_admitted_2; ++j) {
        state_next[shared->offset_variable_diagnoses_admitted + i - 1 + shared->dim_diagnoses_admitted_1 * (j - 1)] = diagnoses_admitted[shared->dim_diagnoses_admitted_1 * (j - 1) + i - 1] + internal.delta_diagnoses_admitted[shared->dim_delta_diagnoses_admitted_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_protected_S_vaccinated; ++i) {
      state_next[shared->offset_variable_protected_S_vaccinated + i - 1] = odin_sum1<real_type>(internal.new_S.data(), 0, shared->dim_new_S) - odin_sum3<real_type>(internal.eff_sus_S.data(), 0, shared->dim_eff_sus_S_1, i - 1, i, 0, shared->dim_eff_sus_S_3, shared->dim_eff_sus_S_1, shared->dim_eff_sus_S_12);
    }
    for (int i = 1; i <= shared->dim_delta_infections_age; ++i) {
      internal.delta_infections_age[i - 1] = odin_sum3<real_type>(internal.delta_infections.data(), i - 1, i, 0, shared->dim_delta_infections_2, 0, shared->dim_delta_infections_3, shared->dim_delta_infections_1, shared->dim_delta_infections_12);
    }
    for (int i = 1; i <= shared->dim_delta_infections_strain; ++i) {
      internal.delta_infections_strain[i - 1] = odin_sum3<real_type>(internal.delta_infections.data(), 0, shared->dim_delta_infections_1, i - 1, i, 0, shared->dim_delta_infections_3, shared->dim_delta_infections_1, shared->dim_delta_infections_12);
    }
    real_type delta_infections_total = odin_sum1<real_type>(internal.delta_infections.data(), 0, shared->dim_delta_infections);
    for (int i = 1; i <= shared->dim_eff_sus_R_1; ++i) {
      for (int j = 1; j <= shared->dim_eff_sus_R_2; ++j) {
        for (int k = 1; k <= shared->dim_eff_sus_R_3; ++k) {
          internal.eff_sus_R[i - 1 + shared->dim_eff_sus_R_1 * (j - 1) + shared->dim_eff_sus_R_12 * (k - 1)] = (shared->n_real_strains == 1 ? 0 : (internal.new_R[shared->dim_new_R_12 * (k - 1) + shared->dim_new_R_1 * 4 + i - 1] + (j == 2 ? internal.new_R[shared->dim_new_R_12 * (k - 1) + shared->dim_new_R_1 * 0 + i - 1] + internal.new_R[shared->dim_new_R_12 * (k - 1) + shared->dim_new_R_1 * 3 + i - 1] : 0)) * (1 - shared->cross_immunity[3 - j - 1]) * shared->rel_susceptibility[shared->dim_rel_susceptibility_12 * (k - 1) + shared->dim_rel_susceptibility_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_n_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_n_vaccinated_2; ++j) {
        internal.n_vaccinated[i - 1 + shared->dim_n_vaccinated_1 * (j - 1)] = internal.n_S_vaccinated[shared->dim_n_S_vaccinated_1 * (j - 1) + i - 1] + internal.n_E_vaccinated[shared->dim_n_E_vaccinated_1 * (j - 1) + i - 1] + internal.n_I_A_vaccinated[shared->dim_n_I_A_vaccinated_1 * (j - 1) + i - 1] + internal.n_I_P_vaccinated[shared->dim_n_I_P_vaccinated_1 * (j - 1) + i - 1] + internal.n_R_vaccinated[shared->dim_n_R_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_new_IFR_disag_weighted_inc_1; ++i) {
      for (int j = 1; j <= shared->dim_new_IFR_disag_weighted_inc_2; ++j) {
        for (int k = 1; k <= shared->dim_new_IFR_disag_weighted_inc_3; ++k) {
          internal.new_IFR_disag_weighted_inc[i - 1 + shared->dim_new_IFR_disag_weighted_inc_1 * (j - 1) + shared->dim_new_IFR_disag_weighted_inc_12 * (k - 1)] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? internal.IFR_disag[shared->dim_IFR_disag_12 * (k - 1) + shared->dim_IFR_disag_1 * (j - 1) + i - 1] * internal.delta_infections[shared->dim_delta_infections_12 * (k - 1) + shared->dim_delta_infections_1 * (j - 1) + i - 1] : IFR_disag_weighted_inc[shared->dim_IFR_disag_weighted_inc_12 * (k - 1) + shared->dim_IFR_disag_weighted_inc_1 * (j - 1) + i - 1] + internal.IFR_disag[shared->dim_IFR_disag_12 * (k - 1) + shared->dim_IFR_disag_1 * (j - 1) + i - 1] * internal.delta_infections[shared->dim_delta_infections_12 * (k - 1) + shared->dim_delta_infections_1 * (j - 1) + i - 1]);
        }
      }
    }
    for (int i = 1; i <= shared->dim_new_IHR_disag_weighted_inc_1; ++i) {
      for (int j = 1; j <= shared->dim_new_IHR_disag_weighted_inc_2; ++j) {
        for (int k = 1; k <= shared->dim_new_IHR_disag_weighted_inc_3; ++k) {
          internal.new_IHR_disag_weighted_inc[i - 1 + shared->dim_new_IHR_disag_weighted_inc_1 * (j - 1) + shared->dim_new_IHR_disag_weighted_inc_12 * (k - 1)] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? internal.IHR_disag[shared->dim_IHR_disag_12 * (k - 1) + shared->dim_IHR_disag_1 * (j - 1) + i - 1] * internal.delta_infections[shared->dim_delta_infections_12 * (k - 1) + shared->dim_delta_infections_1 * (j - 1) + i - 1] : IHR_disag_weighted_inc[shared->dim_IHR_disag_weighted_inc_12 * (k - 1) + shared->dim_IHR_disag_weighted_inc_1 * (j - 1) + i - 1] + internal.IHR_disag[shared->dim_IHR_disag_12 * (k - 1) + shared->dim_IHR_disag_1 * (j - 1) + i - 1] * internal.delta_infections[shared->dim_delta_infections_12 * (k - 1) + shared->dim_delta_infections_1 * (j - 1) + i - 1]);
        }
      }
    }
    real_type sum_new_I_weighted = odin_sum1<real_type>(internal.new_I_weighted.data(), 0, shared->dim_new_I_weighted);
    for (int i = 1; i <= shared->dim_E_1; ++i) {
      for (int j = 1; j <= shared->dim_E_2; ++j) {
        for (int k = 1; k <= shared->dim_E_3; ++k) {
          for (int l = 1; l <= shared->dim_E_4; ++l) {
            state_next[shared->offset_variable_E + i - 1 + shared->dim_E_1 * (j - 1) + shared->dim_E_12 * (k - 1) + shared->dim_E_123 * (l - 1)] = internal.new_E[shared->dim_new_E_123 * (l - 1) + shared->dim_new_E_12 * (k - 1) + shared->dim_new_E_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    for (int i = 1; i <= shared->dim_R_1; ++i) {
      for (int j = 1; j <= shared->dim_R_2; ++j) {
        for (int k = 1; k <= shared->dim_R_3; ++k) {
          state_next[shared->offset_variable_R + i - 1 + shared->dim_R_1 * (j - 1) + shared->dim_R_12 * (k - 1)] = internal.new_R[shared->dim_new_R_12 * (k - 1) + shared->dim_new_R_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_T_PCR_pre_1; ++i) {
      for (int j = 1; j <= shared->dim_T_PCR_pre_2; ++j) {
        for (int k = 1; k <= shared->dim_T_PCR_pre_3; ++k) {
          for (int l = 1; l <= shared->dim_T_PCR_pre_4; ++l) {
            state_next[shared->offset_variable_T_PCR_pre + i - 1 + shared->dim_T_PCR_pre_1 * (j - 1) + shared->dim_T_PCR_pre_12 * (k - 1) + shared->dim_T_PCR_pre_123 * (l - 1)] = internal.new_T_PCR_pre[shared->dim_new_T_PCR_pre_123 * (l - 1) + shared->dim_new_T_PCR_pre_12 * (k - 1) + shared->dim_new_T_PCR_pre_1 * (j - 1) + i - 1];
          }
        }
      }
    }
    state_next[3] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_0_9_conf : all_admission_0_9_conf_inc + delta_all_admission_0_9_conf);
    state_next[4] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_10_19_conf : all_admission_10_19_conf_inc + delta_all_admission_10_19_conf);
    state_next[5] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_20_29_conf : all_admission_20_29_conf_inc + delta_all_admission_20_29_conf);
    state_next[6] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_30_39_conf : all_admission_30_39_conf_inc + delta_all_admission_30_39_conf);
    state_next[7] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_40_49_conf : all_admission_40_49_conf_inc + delta_all_admission_40_49_conf);
    state_next[8] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_50_59_conf : all_admission_50_59_conf_inc + delta_all_admission_50_59_conf);
    state_next[9] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_60_69_conf : all_admission_60_69_conf_inc + delta_all_admission_60_69_conf);
    state_next[10] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_70_79_conf : all_admission_70_79_conf_inc + delta_all_admission_70_79_conf);
    state_next[11] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_all_admission_80_plus_conf : all_admission_80_plus_conf_inc + delta_all_admission_80_plus_conf);
    for (int i = 1; i <= shared->dim_cum_infections_disag_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_infections_disag_2; ++j) {
        state_next[shared->offset_variable_cum_infections_disag + i - 1 + shared->dim_cum_infections_disag_1 * (j - 1)] = cum_infections_disag[shared->dim_cum_infections_disag_1 * (j - 1) + i - 1] + odin_sum3<real_type>(internal.delta_infections.data(), i - 1, i, 0, shared->dim_delta_infections_2, j - 1, j, shared->dim_delta_infections_1, shared->dim_delta_infections_12);
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_R_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_R_vaccinated_2; ++j) {
        state_next[shared->offset_variable_cum_n_R_vaccinated + i - 1 + shared->dim_cum_n_R_vaccinated_1 * (j - 1)] = cum_n_R_vaccinated[shared->dim_cum_n_R_vaccinated_1 * (j - 1) + i - 1] + internal.n_R_vaccinated[shared->dim_n_R_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_cum_n_vacc_skip_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_vacc_skip_2; ++j) {
        state_next[shared->offset_variable_cum_n_vacc_skip + i - 1 + shared->dim_cum_n_vacc_skip_1 * (j - 1)] = cum_n_vacc_skip[shared->dim_cum_n_vacc_skip_1 * (j - 1) + i - 1] + internal.n_vacc_skip[shared->dim_n_vacc_skip_1 * (j - 1) + i - 1];
      }
    }
    state_next[22] = new_general_tot;
    state_next[23] = new_ICU_tot + new_general_tot;
    for (int i = 1; i <= shared->dim_recovered; ++i) {
      state_next[shared->offset_variable_recovered + i - 1] = odin_sum3<real_type>(internal.new_R.data(), 0, shared->dim_new_R_1, i - 1, i, 0, shared->dim_new_R_3, shared->dim_new_R_1, shared->dim_new_R_12);
    }
    real_type new_infections_inc = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? delta_infections_total : infections_inc + delta_infections_total);
    for (int i = 1; i <= shared->dim_new_infections_inc_age; ++i) {
      internal.new_infections_inc_age[i - 1] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? internal.delta_infections_age[i - 1] : infections_inc_age[i - 1] + internal.delta_infections_age[i - 1]);
    }
    for (int i = 1; i <= shared->dim_new_infections_inc_strain; ++i) {
      internal.new_infections_inc_strain[i - 1] = (fmodr<real_type>(step, shared->steps_per_day) == 0 ? internal.delta_infections_strain[i - 1] : infections_inc_strain[i - 1] + internal.delta_infections_strain[i - 1]);
    }
    real_type prob_strain_1 = (shared->n_real_strains == 1 || sum_new_I_weighted == 0 ? 1 : (odin_sum3<real_type>(internal.new_I_weighted.data(), 0, shared->dim_new_I_weighted_1, 0, 1, 0, shared->dim_new_I_weighted_3, shared->dim_new_I_weighted_1, shared->dim_new_I_weighted_12) + odin_sum3<real_type>(internal.new_I_weighted.data(), 0, shared->dim_new_I_weighted_1, 3, 4, 0, shared->dim_new_I_weighted_3, shared->dim_new_I_weighted_1, shared->dim_new_I_weighted_12)) / (real_type) sum_new_I_weighted);
    for (int i = 1; i <= shared->dim_IFR_disag_weighted_inc_1; ++i) {
      for (int j = 1; j <= shared->dim_IFR_disag_weighted_inc_2; ++j) {
        for (int k = 1; k <= shared->dim_IFR_disag_weighted_inc_3; ++k) {
          state_next[shared->offset_variable_IFR_disag_weighted_inc + i - 1 + shared->dim_IFR_disag_weighted_inc_1 * (j - 1) + shared->dim_IFR_disag_weighted_inc_12 * (k - 1)] = internal.new_IFR_disag_weighted_inc[shared->dim_new_IFR_disag_weighted_inc_12 * (k - 1) + shared->dim_new_IFR_disag_weighted_inc_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_IHR_disag_weighted_inc_1; ++i) {
      for (int j = 1; j <= shared->dim_IHR_disag_weighted_inc_2; ++j) {
        for (int k = 1; k <= shared->dim_IHR_disag_weighted_inc_3; ++k) {
          state_next[shared->offset_variable_IHR_disag_weighted_inc + i - 1 + shared->dim_IHR_disag_weighted_inc_1 * (j - 1) + shared->dim_IHR_disag_weighted_inc_12 * (k - 1)] = internal.new_IHR_disag_weighted_inc[shared->dim_new_IHR_disag_weighted_inc_12 * (k - 1) + shared->dim_new_IHR_disag_weighted_inc_1 * (j - 1) + i - 1];
        }
      }
    }
    for (int i = 1; i <= shared->dim_I_weighted_1; ++i) {
      for (int j = 1; j <= shared->dim_I_weighted_2; ++j) {
        for (int k = 1; k <= shared->dim_I_weighted_3; ++k) {
          state_next[shared->offset_variable_I_weighted + i - 1 + shared->dim_I_weighted_1 * (j - 1) + shared->dim_I_weighted_12 * (k - 1)] = ((sum_new_I_weighted == 0 ? ((i == shared->seed_age_band && j == 1 && k == 1 ? 1 : 0)) : internal.new_I_weighted[shared->dim_new_I_weighted_12 * (k - 1) + shared->dim_new_I_weighted_1 * (j - 1) + i - 1]));
        }
      }
    }
    state_next[12] = cum_infections + delta_infections_total;
    for (int i = 1; i <= shared->dim_cum_infections_strain; ++i) {
      state_next[90 + i - 1] = cum_infections_strain[i - 1] + internal.delta_infections_strain[i - 1];
    }
    for (int i = 1; i <= shared->dim_cum_n_vaccinated_1; ++i) {
      for (int j = 1; j <= shared->dim_cum_n_vaccinated_2; ++j) {
        state_next[shared->offset_variable_cum_n_vaccinated + i - 1 + shared->dim_cum_n_vaccinated_1 * (j - 1)] = cum_n_vaccinated[shared->dim_cum_n_vaccinated_1 * (j - 1) + i - 1] + internal.n_vaccinated[shared->dim_n_vaccinated_1 * (j - 1) + i - 1];
      }
    }
    for (int i = 1; i <= shared->dim_effective_susceptible; ++i) {
      state_next[shared->offset_variable_effective_susceptible + i - 1] = odin_sum3<real_type>(internal.eff_sus_S.data(), 0, shared->dim_eff_sus_S_1, i - 1, i, 0, shared->dim_eff_sus_S_3, shared->dim_eff_sus_S_1, shared->dim_eff_sus_S_12) + odin_sum3<real_type>(internal.eff_sus_R.data(), 0, shared->dim_eff_sus_R_1, i - 1, i, 0, shared->dim_eff_sus_R_3, shared->dim_eff_sus_R_1, shared->dim_eff_sus_R_12);
    }
    for (int i = 1; i <= shared->dim_protected_R_unvaccinated; ++i) {
      state_next[shared->offset_variable_protected_R_unvaccinated + i - 1] = odin_sum3<real_type>(internal.new_R.data(), 0, shared->dim_new_R_1, 0, shared->dim_new_R_2, 0, 1, shared->dim_new_R_1, shared->dim_new_R_12) - odin_sum3<real_type>(internal.eff_sus_R.data(), 0, shared->dim_eff_sus_R_1, i - 1, i, 0, 1, shared->dim_eff_sus_R_1, shared->dim_eff_sus_R_12);
    }
    for (int i = 1; i <= shared->dim_protected_R_vaccinated; ++i) {
      state_next[shared->offset_variable_protected_R_vaccinated + i - 1] = odin_sum1<real_type>(internal.new_R.data(), 0, shared->dim_new_R) - odin_sum3<real_type>(internal.new_R.data(), 0, shared->dim_new_R_1, 0, shared->dim_new_R_2, 0, 1, shared->dim_new_R_1, shared->dim_new_R_12) - (odin_sum3<real_type>(internal.eff_sus_R.data(), 0, shared->dim_eff_sus_R_1, i - 1, i, 0, shared->dim_eff_sus_R_3, shared->dim_eff_sus_R_1, shared->dim_eff_sus_R_12) - odin_sum3<real_type>(internal.eff_sus_R.data(), 0, shared->dim_eff_sus_R_1, i - 1, i, 0, 1, shared->dim_eff_sus_R_1, shared->dim_eff_sus_R_12));
    }
    for (int i = 1; i <= shared->dim_vaccine_missed_doses_1; ++i) {
      for (int j = 1; j <= shared->dim_vaccine_missed_doses_2; ++j) {
        state_next[shared->offset_variable_vaccine_missed_doses + i - 1 + shared->dim_vaccine_missed_doses_1 * (j - 1)] = shared->vaccine_catchup_fraction * dust::math::max(internal.total_attempted_doses[shared->dim_total_attempted_doses_1 * (j - 1) + i - 1] - internal.n_vaccinated[shared->dim_n_vaccinated_1 * (shared->index_dose[j - 1] - 1) + i - 1], static_cast<real_type>(0));
      }
    }
    state_next[89] = odin_sum1<real_type>(internal.new_IFR_disag_weighted_inc.data(), 0, shared->dim_new_IFR_disag_weighted_inc) / (real_type) new_infections_inc;
    for (int i = 1; i <= shared->dim_ifr_age; ++i) {
      state_next[shared->offset_variable_ifr_age + i - 1] = odin_sum3<real_type>(internal.new_IFR_disag_weighted_inc.data(), i - 1, i, 0, shared->dim_new_IFR_disag_weighted_inc_2, 0, shared->dim_new_IFR_disag_weighted_inc_3, shared->dim_new_IFR_disag_weighted_inc_1, shared->dim_new_IFR_disag_weighted_inc_12) / (real_type) internal.new_infections_inc_age[i - 1];
    }
    for (int i = 1; i <= shared->dim_ifr_strain; ++i) {
      state_next[shared->offset_variable_ifr_strain + i - 1] = (shared->n_real_strains == 1 ? odin_sum3<real_type>(internal.new_IFR_disag_weighted_inc.data(), 0, shared->dim_new_IFR_disag_weighted_inc_1, 0, 1, 0, shared->dim_new_IFR_disag_weighted_inc_3, shared->dim_new_IFR_disag_weighted_inc_1, shared->dim_new_IFR_disag_weighted_inc_12) / (real_type) internal.new_infections_inc_strain[0] : (odin_sum3<real_type>(internal.new_IFR_disag_weighted_inc.data(), 0, shared->dim_new_IFR_disag_weighted_inc_1, i - 1, i, 0, shared->dim_new_IFR_disag_weighted_inc_3, shared->dim_new_IFR_disag_weighted_inc_1, shared->dim_new_IFR_disag_weighted_inc_12) + odin_sum3<real_type>(internal.new_IFR_disag_weighted_inc.data(), 0, shared->dim_new_IFR_disag_weighted_inc_1, 5 - i - 1, 5 - i, 0, shared->dim_new_IFR_disag_weighted_inc_3, shared->dim_new_IFR_disag_weighted_inc_1, shared->dim_new_IFR_disag_weighted_inc_12)) / (real_type) (internal.new_infections_inc_strain[i - 1] + internal.new_infections_inc_strain[5 - i - 1]));
    }
    state_next[87] = odin_sum1<real_type>(internal.new_IHR_disag_weighted_inc.data(), 0, shared->dim_new_IHR_disag_weighted_inc) / (real_type) new_infections_inc;
    for (int i = 1; i <= shared->dim_ihr_age; ++i) {
      state_next[shared->offset_variable_ihr_age + i - 1] = odin_sum3<real_type>(internal.new_IHR_disag_weighted_inc.data(), i - 1, i, 0, shared->dim_new_IHR_disag_weighted_inc_2, 0, shared->dim_new_IHR_disag_weighted_inc_3, shared->dim_new_IHR_disag_weighted_inc_1, shared->dim_new_IHR_disag_weighted_inc_12) / (real_type) internal.new_infections_inc_age[i - 1];
    }
    for (int i = 1; i <= shared->dim_ihr_strain; ++i) {
      state_next[shared->offset_variable_ihr_strain + i - 1] = (shared->n_real_strains == 1 ? odin_sum3<real_type>(internal.new_IHR_disag_weighted_inc.data(), 0, shared->dim_new_IHR_disag_weighted_inc_1, 0, 1, 0, shared->dim_new_IHR_disag_weighted_inc_3, shared->dim_new_IHR_disag_weighted_inc_1, shared->dim_new_IHR_disag_weighted_inc_12) / (real_type) internal.new_infections_inc_strain[0] : (odin_sum3<real_type>(internal.new_IHR_disag_weighted_inc.data(), 0, shared->dim_new_IHR_disag_weighted_inc_1, i - 1, i, 0, shared->dim_new_IHR_disag_weighted_inc_3, shared->dim_new_IHR_disag_weighted_inc_1, shared->dim_new_IHR_disag_weighted_inc_12) + odin_sum3<real_type>(internal.new_IHR_disag_weighted_inc.data(), 0, shared->dim_new_IHR_disag_weighted_inc_1, 5 - i - 1, 5 - i, 0, shared->dim_new_IHR_disag_weighted_inc_3, shared->dim_new_IHR_disag_weighted_inc_1, shared->dim_new_IHR_disag_weighted_inc_12)) / (real_type) (internal.new_infections_inc_strain[i - 1] + internal.new_infections_inc_strain[5 - i - 1]));
    }
    state_next[13] = new_infections_inc;
    for (int i = 1; i <= shared->dim_infections_inc_age; ++i) {
      state_next[shared->offset_variable_infections_inc_age + i - 1] = internal.new_infections_inc_age[i - 1];
    }
    for (int i = 1; i <= shared->dim_infections_inc_strain; ++i) {
      state_next[shared->offset_variable_infections_inc_strain + i - 1] = internal.new_infections_inc_strain[i - 1];
    }
    for (int i = 1; i <= shared->dim_prob_strain; ++i) {
      state_next[shared->offset_variable_prob_strain + i - 1] = (i == 1 ? prob_strain_1 : 1 - prob_strain_1);
    }
  }
  real_type compare_data(const real_type * state, const data_type& data, rng_state_type& rng_state) {
    const real_type time = state[0];
    const real_type admit_conf_inc = state[1];
    const real_type new_conf_inc = state[2];
    const real_type all_admission_0_9_conf_inc = state[3];
    const real_type all_admission_10_19_conf_inc = state[4];
    const real_type all_admission_20_29_conf_inc = state[5];
    const real_type all_admission_30_39_conf_inc = state[6];
    const real_type all_admission_40_49_conf_inc = state[7];
    const real_type all_admission_50_59_conf_inc = state[8];
    const real_type all_admission_60_69_conf_inc = state[9];
    const real_type all_admission_70_79_conf_inc = state[10];
    const real_type all_admission_80_plus_conf_inc = state[11];
    const real_type ICU_tot = state[21];
    const real_type general_tot = state[22];
    const real_type hosp_tot = state[23];
    const real_type D_comm_inc = state[34];
    const real_type D_comm_0_49_inc = state[35];
    const real_type D_comm_50_54_inc = state[36];
    const real_type D_comm_55_59_inc = state[37];
    const real_type D_comm_60_64_inc = state[38];
    const real_type D_comm_65_69_inc = state[39];
    const real_type D_comm_70_74_inc = state[40];
    const real_type D_comm_75_79_inc = state[41];
    const real_type D_comm_80_plus_inc = state[42];
    const real_type D_carehomes_inc = state[44];
    const real_type D_hosp_inc = state[47];
    const real_type D_hosp_0_49_inc = state[48];
    const real_type D_hosp_50_54_inc = state[49];
    const real_type D_hosp_55_59_inc = state[50];
    const real_type D_hosp_60_64_inc = state[51];
    const real_type D_hosp_65_69_inc = state[52];
    const real_type D_hosp_70_74_inc = state[53];
    const real_type D_hosp_75_79_inc = state[54];
    const real_type D_hosp_80_plus_inc = state[55];
    const real_type sero_pos_1 = state[56];
    const real_type sero_pos_2 = state[57];
    const real_type sympt_cases_inc = state[68];
    const real_type sympt_cases_non_variant_inc = state[69];
    const real_type sympt_cases_over25_inc = state[70];
    const real_type sympt_cases_non_variant_over25_inc = state[71];
    const real_type sympt_cases_under15_inc = state[72];
    const real_type sympt_cases_15_24_inc = state[73];
    const real_type sympt_cases_25_49_inc = state[74];
    const real_type sympt_cases_50_64_inc = state[75];
    const real_type sympt_cases_65_79_inc = state[76];
    const real_type sympt_cases_80_plus_inc = state[77];
    const real_type ons_positives = state[78];
    const real_type react_positives = state[79];
    const real_type react_5_24_positives = state[80];
    const real_type react_25_34_positives = state[81];
    const real_type react_35_44_positives = state[82];
    const real_type react_45_54_positives = state[83];
    const real_type react_55_64_positives = state[84];
    const real_type react_65_plus_positives = state[85];
    real_type D_carehomes_inc_with_noise = shared->phi_death_carehomes * D_carehomes_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_0_49_inc_with_noise = shared->phi_death_comm * D_comm_0_49_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_50_54_inc_with_noise = shared->phi_death_comm * D_comm_50_54_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_55_59_inc_with_noise = shared->phi_death_comm * D_comm_55_59_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_60_64_inc_with_noise = shared->phi_death_comm * D_comm_60_64_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_65_69_inc_with_noise = shared->phi_death_comm * D_comm_65_69_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_70_74_inc_with_noise = shared->phi_death_comm * D_comm_70_74_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_75_79_inc_with_noise = shared->phi_death_comm * D_comm_75_79_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_80_plus_inc_with_noise = shared->phi_death_comm * D_comm_80_plus_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_comm_inc_with_noise = shared->phi_death_comm * D_comm_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_0_49_inc_with_noise = shared->phi_death_hosp * D_hosp_0_49_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_50_54_inc_with_noise = shared->phi_death_hosp * D_hosp_50_54_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_55_59_inc_with_noise = shared->phi_death_hosp * D_hosp_55_59_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_60_64_inc_with_noise = shared->phi_death_hosp * D_hosp_60_64_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_65_69_inc_with_noise = shared->phi_death_hosp * D_hosp_65_69_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_70_74_inc_with_noise = shared->phi_death_hosp * D_hosp_70_74_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_75_79_inc_with_noise = shared->phi_death_hosp * D_hosp_75_79_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_80_plus_inc_with_noise = shared->phi_death_hosp * D_hosp_80_plus_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_hosp_inc_with_noise = shared->phi_death_hosp * D_hosp_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_inc_with_noise = shared->phi_death_carehomes * D_carehomes_inc + shared->phi_death_comm * D_comm_inc + shared->phi_death_hosp * D_hosp_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type D_non_hosp_inc_with_noise = shared->phi_death_carehomes * D_carehomes_inc + shared->phi_death_comm * D_comm_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type admitted_with_noise = shared->phi_admitted * admit_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_0_9_with_noise = shared->phi_all_admission * all_admission_0_9_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_10_19_with_noise = shared->phi_all_admission * all_admission_10_19_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_20_29_with_noise = shared->phi_all_admission * all_admission_20_29_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_30_39_with_noise = shared->phi_all_admission * all_admission_30_39_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_40_49_with_noise = shared->phi_all_admission * all_admission_40_49_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_50_59_with_noise = shared->phi_all_admission * all_admission_50_59_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_60_69_with_noise = shared->phi_all_admission * all_admission_60_69_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_70_79_with_noise = shared->phi_all_admission * all_admission_70_79_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_80_plus_with_noise = shared->phi_all_admission * all_admission_80_plus_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type all_admission_with_noise = shared->phi_all_admission * (admit_conf_inc + new_conf_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type diagnoses_with_noise = shared->phi_diagnoses * new_conf_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type general_with_noise = shared->phi_general * general_tot + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type hosp_with_noise = shared->phi_hosp * hosp_tot + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type icu_with_noise = shared->phi_ICU * ICU_tot + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_15_24_pos = sympt_cases_15_24_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_25_49_pos = sympt_cases_25_49_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_50_64_pos = sympt_cases_50_64_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_65_79_pos = sympt_cases_65_79_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_80_plus_pos = sympt_cases_80_plus_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_over25_pos = sympt_cases_over25_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_pos = sympt_cases_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_under15_pos = sympt_cases_under15_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_strain_non_variant = sympt_cases_non_variant_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_strain_over25_non_variant = sympt_cases_non_variant_over25_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_strain_over25_variant = sympt_cases_over25_inc - sympt_cases_non_variant_over25_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_strain_variant = sympt_cases_inc - sympt_cases_non_variant_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type ons_positives_capped = dust::math::min(ons_positives, shared->N_tot_ons);
    real_type p_NC_today_15_24 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->p_NC_weekend_15_24 : shared->p_NC_15_24);
    real_type p_NC_today_25_49 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->p_NC_weekend_25_49 : shared->p_NC_25_49);
    real_type p_NC_today_50_64 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->p_NC_weekend_50_64 : shared->p_NC_50_64);
    real_type p_NC_today_65_79 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->p_NC_weekend_65_79 : shared->p_NC_65_79);
    real_type p_NC_today_80_plus = (fmodr<real_type>((time + 3), 7) < 2 ? shared->p_NC_weekend_80_plus : shared->p_NC_80_plus);
    real_type p_NC_today_under15 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->p_NC_weekend_under15 : shared->p_NC_under15);
    real_type phi_pillar2_cases_today_15_24 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->phi_pillar2_cases_weekend_15_24 : shared->phi_pillar2_cases_15_24);
    real_type phi_pillar2_cases_today_25_49 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->phi_pillar2_cases_weekend_25_49 : shared->phi_pillar2_cases_25_49);
    real_type phi_pillar2_cases_today_50_64 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->phi_pillar2_cases_weekend_50_64 : shared->phi_pillar2_cases_50_64);
    real_type phi_pillar2_cases_today_65_79 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->phi_pillar2_cases_weekend_65_79 : shared->phi_pillar2_cases_65_79);
    real_type phi_pillar2_cases_today_80_plus = (fmodr<real_type>((time + 3), 7) < 2 ? shared->phi_pillar2_cases_weekend_80_plus : shared->phi_pillar2_cases_80_plus);
    real_type phi_pillar2_cases_today_under15 = (fmodr<real_type>((time + 3), 7) < 2 ? shared->phi_pillar2_cases_weekend_under15 : shared->phi_pillar2_cases_under15);
    real_type react_25_34_positives_capped = dust::math::min(react_25_34_positives, shared->N_25_34_react);
    real_type react_35_44_positives_capped = dust::math::min(react_35_44_positives, shared->N_35_44_react);
    real_type react_45_54_positives_capped = dust::math::min(react_45_54_positives, shared->N_45_54_react);
    real_type react_55_64_positives_capped = dust::math::min(react_55_64_positives, shared->N_55_64_react);
    real_type react_5_24_positives_capped = dust::math::min(react_5_24_positives, shared->N_5_24_react);
    real_type react_65_plus_positives_capped = dust::math::min(react_65_plus_positives, shared->N_65_plus_react);
    real_type react_positives_capped = dust::math::min(react_positives, shared->N_tot_react);
    real_type sero_pos_1_capped = dust::math::min(sero_pos_1, shared->N_tot_15_64);
    real_type sero_pos_2_capped = dust::math::min(sero_pos_2, shared->N_tot_15_64);
    const auto compare_admitted = (std::isnan(data.admitted)) ? 0 : dust::density::negative_binomial_mu(data.admitted, shared->kappa_admitted, admitted_with_noise, true);
    const auto compare_all_admission = (std::isnan(data.all_admission)) ? 0 : dust::density::negative_binomial_mu(data.all_admission, shared->kappa_all_admission, all_admission_with_noise, true);
    const auto compare_all_admission_0_9 = (std::isnan(data.all_admission_0_9)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_0_9, shared->kappa_all_admission, all_admission_0_9_with_noise, true);
    const auto compare_all_admission_10_19 = (std::isnan(data.all_admission_10_19)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_10_19, shared->kappa_all_admission, all_admission_10_19_with_noise, true);
    const auto compare_all_admission_20_29 = (std::isnan(data.all_admission_20_29)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_20_29, shared->kappa_all_admission, all_admission_20_29_with_noise, true);
    const auto compare_all_admission_30_39 = (std::isnan(data.all_admission_30_39)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_30_39, shared->kappa_all_admission, all_admission_30_39_with_noise, true);
    const auto compare_all_admission_40_49 = (std::isnan(data.all_admission_40_49)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_40_49, shared->kappa_all_admission, all_admission_40_49_with_noise, true);
    const auto compare_all_admission_50_59 = (std::isnan(data.all_admission_50_59)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_50_59, shared->kappa_all_admission, all_admission_50_59_with_noise, true);
    const auto compare_all_admission_60_69 = (std::isnan(data.all_admission_60_69)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_60_69, shared->kappa_all_admission, all_admission_60_69_with_noise, true);
    const auto compare_all_admission_70_79 = (std::isnan(data.all_admission_70_79)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_70_79, shared->kappa_all_admission, all_admission_70_79_with_noise, true);
    const auto compare_all_admission_80_plus = (std::isnan(data.all_admission_80_plus)) ? 0 : dust::density::negative_binomial_mu(data.all_admission_80_plus, shared->kappa_all_admission, all_admission_80_plus_with_noise, true);
    const auto compare_deaths = (std::isnan(data.deaths)) ? 0 : dust::density::negative_binomial_mu(data.deaths, shared->kappa_death, D_inc_with_noise, true);
    const auto compare_deaths_carehomes = (std::isnan(data.deaths_carehomes)) ? 0 : dust::density::negative_binomial_mu(data.deaths_carehomes, shared->kappa_death_carehomes, D_carehomes_inc_with_noise, true);
    const auto compare_deaths_comm = (std::isnan(data.deaths_comm)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm, shared->kappa_death_comm, D_comm_inc_with_noise, true);
    const auto compare_deaths_comm_0_49 = (std::isnan(data.deaths_comm_0_49)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_0_49, shared->kappa_death_comm, D_comm_0_49_inc_with_noise, true);
    const auto compare_deaths_comm_50_54 = (std::isnan(data.deaths_comm_50_54)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_50_54, shared->kappa_death_comm, D_comm_50_54_inc_with_noise, true);
    const auto compare_deaths_comm_55_59 = (std::isnan(data.deaths_comm_55_59)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_55_59, shared->kappa_death_comm, D_comm_55_59_inc_with_noise, true);
    const auto compare_deaths_comm_60_64 = (std::isnan(data.deaths_comm_60_64)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_60_64, shared->kappa_death_comm, D_comm_60_64_inc_with_noise, true);
    const auto compare_deaths_comm_65_69 = (std::isnan(data.deaths_comm_65_69)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_65_69, shared->kappa_death_comm, D_comm_65_69_inc_with_noise, true);
    const auto compare_deaths_comm_70_74 = (std::isnan(data.deaths_comm_70_74)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_70_74, shared->kappa_death_comm, D_comm_70_74_inc_with_noise, true);
    const auto compare_deaths_comm_75_79 = (std::isnan(data.deaths_comm_75_79)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_75_79, shared->kappa_death_comm, D_comm_75_79_inc_with_noise, true);
    const auto compare_deaths_comm_80_plus = (std::isnan(data.deaths_comm_80_plus)) ? 0 : dust::density::negative_binomial_mu(data.deaths_comm_80_plus, shared->kappa_death_comm, D_comm_80_plus_inc_with_noise, true);
    const auto compare_deaths_hosp = (std::isnan(data.deaths_hosp)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp, shared->kappa_death_hosp, D_hosp_inc_with_noise, true);
    const auto compare_deaths_hosp_0_49 = (std::isnan(data.deaths_hosp_0_49)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_0_49, shared->kappa_death_hosp, D_hosp_0_49_inc_with_noise, true);
    const auto compare_deaths_hosp_50_54 = (std::isnan(data.deaths_hosp_50_54)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_50_54, shared->kappa_death_hosp, D_hosp_50_54_inc_with_noise, true);
    const auto compare_deaths_hosp_55_59 = (std::isnan(data.deaths_hosp_55_59)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_55_59, shared->kappa_death_hosp, D_hosp_55_59_inc_with_noise, true);
    const auto compare_deaths_hosp_60_64 = (std::isnan(data.deaths_hosp_60_64)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_60_64, shared->kappa_death_hosp, D_hosp_60_64_inc_with_noise, true);
    const auto compare_deaths_hosp_65_69 = (std::isnan(data.deaths_hosp_65_69)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_65_69, shared->kappa_death_hosp, D_hosp_65_69_inc_with_noise, true);
    const auto compare_deaths_hosp_70_74 = (std::isnan(data.deaths_hosp_70_74)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_70_74, shared->kappa_death_hosp, D_hosp_70_74_inc_with_noise, true);
    const auto compare_deaths_hosp_75_79 = (std::isnan(data.deaths_hosp_75_79)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_75_79, shared->kappa_death_hosp, D_hosp_75_79_inc_with_noise, true);
    const auto compare_deaths_hosp_80_plus = (std::isnan(data.deaths_hosp_80_plus)) ? 0 : dust::density::negative_binomial_mu(data.deaths_hosp_80_plus, shared->kappa_death_hosp, D_hosp_80_plus_inc_with_noise, true);
    const auto compare_deaths_non_hosp = (std::isnan(data.deaths_non_hosp)) ? 0 : dust::density::negative_binomial_mu(data.deaths_non_hosp, shared->kappa_death_non_hosp, D_non_hosp_inc_with_noise, true);
    const auto compare_diagnoses = (std::isnan(data.diagnoses)) ? 0 : dust::density::negative_binomial_mu(data.diagnoses, shared->kappa_diagnoses, diagnoses_with_noise, true);
    const auto compare_general = (std::isnan(data.general)) ? 0 : dust::density::negative_binomial_mu(data.general, shared->kappa_general, general_with_noise, true);
    const auto compare_hosp = (std::isnan(data.hosp)) ? 0 : dust::density::negative_binomial_mu(data.hosp, shared->kappa_hosp, hosp_with_noise, true);
    const auto compare_icu = (std::isnan(data.icu)) ? 0 : dust::density::negative_binomial_mu(data.icu, shared->kappa_ICU, icu_with_noise, true);
    real_type mod_ons_neg = shared->N_tot_ons - ons_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_ons_pos = ons_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_15_24_neg = p_NC_today_15_24 * (shared->N_tot_15_24 - sympt_cases_15_24_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_25_49_neg = p_NC_today_25_49 * (shared->N_tot_25_49 - sympt_cases_25_49_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_50_64_neg = p_NC_today_50_64 * (shared->N_tot_50_64 - sympt_cases_50_64_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_65_79_neg = p_NC_today_65_79 * (shared->N_tot_65_79 - sympt_cases_65_79_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_80_plus_neg = p_NC_today_80_plus * (shared->N_tot_80_plus - sympt_cases_80_plus_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases = phi_pillar2_cases_today_under15 * sympt_cases_under15_inc + phi_pillar2_cases_today_15_24 * sympt_cases_15_24_inc + phi_pillar2_cases_today_25_49 * sympt_cases_25_49_inc + phi_pillar2_cases_today_50_64 * sympt_cases_50_64_inc + phi_pillar2_cases_today_65_79 * sympt_cases_65_79_inc + phi_pillar2_cases_today_80_plus * sympt_cases_80_plus_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases_15_24 = phi_pillar2_cases_today_15_24 * sympt_cases_15_24_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases_25_49 = phi_pillar2_cases_today_25_49 * sympt_cases_25_49_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases_50_64 = phi_pillar2_cases_today_50_64 * sympt_cases_50_64_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases_65_79 = phi_pillar2_cases_today_65_79 * sympt_cases_65_79_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases_80_plus = phi_pillar2_cases_today_80_plus * sympt_cases_80_plus_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases_over25 = phi_pillar2_cases_today_25_49 * sympt_cases_25_49_inc + phi_pillar2_cases_today_50_64 * sympt_cases_50_64_inc + phi_pillar2_cases_today_65_79 * sympt_cases_65_79_inc + phi_pillar2_cases_today_80_plus * sympt_cases_80_plus_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_cases_under15 = phi_pillar2_cases_today_under15 * sympt_cases_under15_inc + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_neg = p_NC_today_under15 * (shared->N_tot_under15 - sympt_cases_under15_inc) + p_NC_today_15_24 * (shared->N_tot_15_24 - sympt_cases_15_24_inc) + p_NC_today_25_49 * (shared->N_tot_25_49 - sympt_cases_25_49_inc) + p_NC_today_50_64 * (shared->N_tot_50_64 - sympt_cases_50_64_inc) + p_NC_today_65_79 * (shared->N_tot_65_79 - sympt_cases_65_79_inc) + p_NC_today_80_plus * (shared->N_tot_80_plus - sympt_cases_80_plus_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_over25_neg = p_NC_today_25_49 * (shared->N_tot_25_49 - sympt_cases_25_49_inc) + p_NC_today_50_64 * (shared->N_tot_50_64 - sympt_cases_50_64_inc) + p_NC_today_65_79 * (shared->N_tot_65_79 - sympt_cases_65_79_inc) + p_NC_today_80_plus * (shared->N_tot_80_plus - sympt_cases_80_plus_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_pillar2_under15_neg = p_NC_today_under15 * (shared->N_tot_under15 - sympt_cases_under15_inc) + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_25_34_neg = shared->N_25_34_react - react_25_34_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_25_34_pos = react_25_34_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_35_44_neg = shared->N_35_44_react - react_35_44_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_35_44_pos = react_35_44_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_45_54_neg = shared->N_45_54_react - react_45_54_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_45_54_pos = react_45_54_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_55_64_neg = shared->N_55_64_react - react_55_64_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_55_64_pos = react_55_64_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_5_24_neg = shared->N_5_24_react - react_5_24_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_5_24_pos = react_5_24_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_65_plus_neg = shared->N_65_plus_react - react_65_plus_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_65_plus_pos = react_65_plus_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_neg = shared->N_tot_react - react_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_react_pos = react_positives_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_sero_neg_1 = shared->N_tot_15_64 - sero_pos_1_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_sero_neg_2 = shared->N_tot_15_64 - sero_pos_2_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_sero_pos_1 = sero_pos_1_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_sero_pos_2 = sero_pos_2_capped + dust::random::exponential<real_type>(rng_state, shared->exp_noise);
    real_type mod_strain_over25_prob_non_variant = mod_strain_over25_non_variant / (real_type) (mod_strain_over25_non_variant + mod_strain_over25_variant);
    real_type mod_strain_prob_non_variant = mod_strain_non_variant / (real_type) (mod_strain_non_variant + mod_strain_variant);
    const auto compare_pillar2_15_24_cases = (std::isnan(data.pillar2_15_24_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_15_24_cases, shared->kappa_pillar2_cases, mod_pillar2_cases_15_24, true);
    const auto compare_pillar2_25_49_cases = (std::isnan(data.pillar2_25_49_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_25_49_cases, shared->kappa_pillar2_cases, mod_pillar2_cases_25_49, true);
    const auto compare_pillar2_50_64_cases = (std::isnan(data.pillar2_50_64_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_50_64_cases, shared->kappa_pillar2_cases, mod_pillar2_cases_50_64, true);
    const auto compare_pillar2_65_79_cases = (std::isnan(data.pillar2_65_79_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_65_79_cases, shared->kappa_pillar2_cases, mod_pillar2_cases_65_79, true);
    const auto compare_pillar2_80_plus_cases = (std::isnan(data.pillar2_80_plus_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_80_plus_cases, shared->kappa_pillar2_cases, mod_pillar2_cases_80_plus, true);
    const auto compare_pillar2_cases = (std::isnan(data.pillar2_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_cases, shared->kappa_pillar2_cases, mod_pillar2_cases, true);
    const auto compare_pillar2_over25_cases = (std::isnan(data.pillar2_over25_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_over25_cases, shared->kappa_pillar2_cases, mod_pillar2_cases_over25, true);
    const auto compare_pillar2_under15_cases = (std::isnan(data.pillar2_under15_cases)) ? 0 : dust::density::negative_binomial_mu(data.pillar2_under15_cases, shared->kappa_pillar2_cases, mod_pillar2_cases_under15, true);
    const auto compare_strain_non_variant = (std::isnan(data.strain_tot) || std::isnan(data.strain_non_variant)) ? 0 : dust::density::binomial(data.strain_non_variant, data.strain_tot, mod_strain_prob_non_variant, true);
    const auto compare_strain_over25_non_variant = (std::isnan(data.strain_over25_tot) || std::isnan(data.strain_over25_non_variant)) ? 0 : dust::density::binomial(data.strain_over25_non_variant, data.strain_over25_tot, mod_strain_over25_prob_non_variant, true);
    real_type mod_ons_prob_pos = (shared->ons_sensitivity * mod_ons_pos + (1 - shared->ons_specificity) * mod_ons_neg) / (real_type) (mod_ons_pos + mod_ons_neg);
    real_type mod_pillar2_15_24_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_15_24_pos + (1 - shared->pillar2_specificity) * mod_pillar2_15_24_neg) / (real_type) (mod_pillar2_15_24_pos + mod_pillar2_15_24_neg);
    real_type mod_pillar2_25_49_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_25_49_pos + (1 - shared->pillar2_specificity) * mod_pillar2_25_49_neg) / (real_type) (mod_pillar2_25_49_pos + mod_pillar2_25_49_neg);
    real_type mod_pillar2_50_64_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_50_64_pos + (1 - shared->pillar2_specificity) * mod_pillar2_50_64_neg) / (real_type) (mod_pillar2_50_64_pos + mod_pillar2_50_64_neg);
    real_type mod_pillar2_65_79_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_65_79_pos + (1 - shared->pillar2_specificity) * mod_pillar2_65_79_neg) / (real_type) (mod_pillar2_65_79_pos + mod_pillar2_65_79_neg);
    real_type mod_pillar2_80_plus_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_80_plus_pos + (1 - shared->pillar2_specificity) * mod_pillar2_80_plus_neg) / (real_type) (mod_pillar2_80_plus_pos + mod_pillar2_80_plus_neg);
    real_type mod_pillar2_over25_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_over25_pos + (1 - shared->pillar2_specificity) * mod_pillar2_over25_neg) / (real_type) (mod_pillar2_over25_pos + mod_pillar2_over25_neg);
    real_type mod_pillar2_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_pos + (1 - shared->pillar2_specificity) * mod_pillar2_neg) / (real_type) (mod_pillar2_pos + mod_pillar2_neg);
    real_type mod_pillar2_under15_prob_pos = (shared->pillar2_sensitivity * mod_pillar2_under15_pos + (1 - shared->pillar2_specificity) * mod_pillar2_under15_neg) / (real_type) (mod_pillar2_under15_pos + mod_pillar2_under15_neg);
    real_type mod_react_25_34_prob_pos = (shared->react_sensitivity * mod_react_25_34_pos + (1 - shared->react_specificity) * mod_react_25_34_neg) / (real_type) (mod_react_25_34_pos + mod_react_25_34_neg);
    real_type mod_react_35_44_prob_pos = (shared->react_sensitivity * mod_react_35_44_pos + (1 - shared->react_specificity) * mod_react_35_44_neg) / (real_type) (mod_react_35_44_pos + mod_react_35_44_neg);
    real_type mod_react_45_54_prob_pos = (shared->react_sensitivity * mod_react_45_54_pos + (1 - shared->react_specificity) * mod_react_45_54_neg) / (real_type) (mod_react_45_54_pos + mod_react_45_54_neg);
    real_type mod_react_55_64_prob_pos = (shared->react_sensitivity * mod_react_55_64_pos + (1 - shared->react_specificity) * mod_react_55_64_neg) / (real_type) (mod_react_55_64_pos + mod_react_55_64_neg);
    real_type mod_react_5_24_prob_pos = (shared->react_sensitivity * mod_react_5_24_pos + (1 - shared->react_specificity) * mod_react_5_24_neg) / (real_type) (mod_react_5_24_pos + mod_react_5_24_neg);
    real_type mod_react_65_plus_prob_pos = (shared->react_sensitivity * mod_react_65_plus_pos + (1 - shared->react_specificity) * mod_react_65_plus_neg) / (real_type) (mod_react_65_plus_pos + mod_react_65_plus_neg);
    real_type mod_react_prob_pos = (shared->react_sensitivity * mod_react_pos + (1 - shared->react_specificity) * mod_react_neg) / (real_type) (mod_react_pos + mod_react_neg);
    real_type mod_sero_prob_pos_1 = (shared->sero_sensitivity_1 * mod_sero_pos_1 + (1 - shared->sero_specificity_1) * mod_sero_neg_1) / (real_type) (mod_sero_pos_1 + mod_sero_neg_1);
    real_type mod_sero_prob_pos_2 = (shared->sero_sensitivity_2 * mod_sero_pos_2 + (1 - shared->sero_specificity_2) * mod_sero_neg_2) / (real_type) (mod_sero_pos_2 + mod_sero_neg_2);
    const auto compare_ons_pos = (std::isnan(data.ons_tot) || std::isnan(data.ons_pos)) ? 0 : dust::density::binomial(data.ons_pos, data.ons_tot, mod_ons_prob_pos, true);
    const auto compare_pillar2_15_24_pos = (std::isnan(data.pillar2_15_24_tot) || std::isnan(data.pillar2_15_24_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_15_24_pos, data.pillar2_15_24_tot, mod_pillar2_15_24_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_pillar2_25_49_pos = (std::isnan(data.pillar2_25_49_tot) || std::isnan(data.pillar2_25_49_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_25_49_pos, data.pillar2_25_49_tot, mod_pillar2_25_49_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_pillar2_50_64_pos = (std::isnan(data.pillar2_50_64_tot) || std::isnan(data.pillar2_50_64_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_50_64_pos, data.pillar2_50_64_tot, mod_pillar2_50_64_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_pillar2_65_79_pos = (std::isnan(data.pillar2_65_79_tot) || std::isnan(data.pillar2_65_79_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_65_79_pos, data.pillar2_65_79_tot, mod_pillar2_65_79_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_pillar2_80_plus_pos = (std::isnan(data.pillar2_80_plus_tot) || std::isnan(data.pillar2_80_plus_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_80_plus_pos, data.pillar2_80_plus_tot, mod_pillar2_80_plus_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_pillar2_over25_pos = (std::isnan(data.pillar2_over25_tot) || std::isnan(data.pillar2_over25_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_over25_pos, data.pillar2_over25_tot, mod_pillar2_over25_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_pillar2_pos = (std::isnan(data.pillar2_tot) || std::isnan(data.pillar2_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_pos, data.pillar2_tot, mod_pillar2_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_pillar2_under15_pos = (std::isnan(data.pillar2_under15_tot) || std::isnan(data.pillar2_under15_pos)) ? 0 : dust::density::beta_binomial(data.pillar2_under15_pos, data.pillar2_under15_tot, mod_pillar2_under15_prob_pos, shared->rho_pillar2_tests, true);
    const auto compare_react_25_34_pos = (std::isnan(data.react_25_34_tot) || std::isnan(data.react_25_34_pos)) ? 0 : dust::density::binomial(data.react_25_34_pos, data.react_25_34_tot, mod_react_25_34_prob_pos, true);
    const auto compare_react_35_44_pos = (std::isnan(data.react_35_44_tot) || std::isnan(data.react_35_44_pos)) ? 0 : dust::density::binomial(data.react_35_44_pos, data.react_35_44_tot, mod_react_35_44_prob_pos, true);
    const auto compare_react_45_54_pos = (std::isnan(data.react_45_54_tot) || std::isnan(data.react_45_54_pos)) ? 0 : dust::density::binomial(data.react_45_54_pos, data.react_45_54_tot, mod_react_45_54_prob_pos, true);
    const auto compare_react_55_64_pos = (std::isnan(data.react_55_64_tot) || std::isnan(data.react_55_64_pos)) ? 0 : dust::density::binomial(data.react_55_64_pos, data.react_55_64_tot, mod_react_55_64_prob_pos, true);
    const auto compare_react_5_24_pos = (std::isnan(data.react_5_24_tot) || std::isnan(data.react_5_24_pos)) ? 0 : dust::density::binomial(data.react_5_24_pos, data.react_5_24_tot, mod_react_5_24_prob_pos, true);
    const auto compare_react_65_plus_pos = (std::isnan(data.react_65_plus_tot) || std::isnan(data.react_65_plus_pos)) ? 0 : dust::density::binomial(data.react_65_plus_pos, data.react_65_plus_tot, mod_react_65_plus_prob_pos, true);
    const auto compare_react_pos = (std::isnan(data.react_tot) || std::isnan(data.react_pos)) ? 0 : dust::density::binomial(data.react_pos, data.react_tot, mod_react_prob_pos, true);
    const auto compare_sero_pos_15_64_1 = (std::isnan(data.sero_tot_15_64_1) || std::isnan(data.sero_pos_15_64_1)) ? 0 : dust::density::binomial(data.sero_pos_15_64_1, data.sero_tot_15_64_1, mod_sero_prob_pos_1, true);
    const auto compare_sero_pos_15_64_2 = (std::isnan(data.sero_tot_15_64_2) || std::isnan(data.sero_pos_15_64_2)) ? 0 : dust::density::binomial(data.sero_pos_15_64_2, data.sero_tot_15_64_2, mod_sero_prob_pos_2, true);
    return compare_admitted + compare_all_admission + compare_all_admission_0_9 + compare_all_admission_10_19 + compare_all_admission_20_29 + compare_all_admission_30_39 + compare_all_admission_40_49 + compare_all_admission_50_59 + compare_all_admission_60_69 + compare_all_admission_70_79 + compare_all_admission_80_plus + compare_deaths + compare_deaths_carehomes + compare_deaths_comm + compare_deaths_comm_0_49 + compare_deaths_comm_50_54 + compare_deaths_comm_55_59 + compare_deaths_comm_60_64 + compare_deaths_comm_65_69 + compare_deaths_comm_70_74 + compare_deaths_comm_75_79 + compare_deaths_comm_80_plus + compare_deaths_hosp + compare_deaths_hosp_0_49 + compare_deaths_hosp_50_54 + compare_deaths_hosp_55_59 + compare_deaths_hosp_60_64 + compare_deaths_hosp_65_69 + compare_deaths_hosp_70_74 + compare_deaths_hosp_75_79 + compare_deaths_hosp_80_plus + compare_deaths_non_hosp + compare_diagnoses + compare_general + compare_hosp + compare_icu + compare_ons_pos + compare_pillar2_15_24_cases + compare_pillar2_15_24_pos + compare_pillar2_25_49_cases + compare_pillar2_25_49_pos + compare_pillar2_50_64_cases + compare_pillar2_50_64_pos + compare_pillar2_65_79_cases + compare_pillar2_65_79_pos + compare_pillar2_80_plus_cases + compare_pillar2_80_plus_pos + compare_pillar2_cases + compare_pillar2_over25_cases + compare_pillar2_over25_pos + compare_pillar2_pos + compare_pillar2_under15_cases + compare_pillar2_under15_pos + compare_react_25_34_pos + compare_react_35_44_pos + compare_react_45_54_pos + compare_react_55_64_pos + compare_react_5_24_pos + compare_react_65_plus_pos + compare_react_pos + compare_sero_pos_15_64_1 + compare_sero_pos_15_64_2 + compare_strain_non_variant + compare_strain_over25_non_variant;
  }
private:
  std::shared_ptr<const shared_type> shared;
  internal_type internal;
};
template <typename real_type, typename container>
__host__ __device__ real_type odin_sum2(const container x, int from_i, int to_i, int from_j, int to_j, int dim_x_1) {
  real_type tot = 0.0;
  for (int j = from_j; j < to_j; ++j) {
    int jj = j * dim_x_1;
    for (int i = from_i; i < to_i; ++i) {
      tot += x[i + jj];
    }
  }
  return tot;
}
template <typename real_type, typename container>
__host__ __device__ real_type odin_sum3(const container x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int dim_x_1, int dim_x_12) {
  real_type tot = 0.0;
  for (int k = from_k; k < to_k; ++k) {
    int kk = k * dim_x_12;
    for (int j = from_j; j < to_j; ++j) {
      int jj = j * dim_x_1 + kk;
      for (int i = from_i; i < to_i; ++i) {
        tot += x[i + jj];
      }
    }
  }
  return tot;
}
template <typename real_type, typename container>
__host__ __device__ real_type odin_sum4(const container x, int from_i, int to_i, int from_j, int to_j, int from_k, int to_k, int from_l, int to_l, int dim_x_1, int dim_x_12, int dim_x_123) {
  real_type tot = 0.0;
  for (int l = from_l; l < to_l; ++l) {
    int ll = l * dim_x_123;
    for (int k = from_k; k < to_k; ++k) {
      int kk = k * dim_x_12 + ll;
      for (int j = from_j; j < to_j; ++j) {
        int jj = j * dim_x_1 + kk;
        for (int i = from_i; i < to_i; ++i) {
          tot += x[i + jj];
        }
      }
    }
  }
  return tot;
}
#include <array>
#include <cpp11/R.hpp>
#include <cpp11/sexp.hpp>
#include <cpp11/doubles.hpp>
#include <cpp11/integers.hpp>
#include <cpp11/list.hpp>
#include <cpp11/strings.hpp>
#include <memory>
#include <vector>

template <typename T>
inline bool is_na(T x);

template <>
inline bool is_na(int x) {
  return x == NA_INTEGER;
}

template <>
inline bool is_na(double x) {
  return ISNA(x);
}

inline size_t object_length(cpp11::sexp x) {
  return ::Rf_xlength(x);
}

template <typename T>
void user_check_value(T value, const char *name, T min, T max) {
  if (is_na(value)) {
    cpp11::stop("'%s' must not be NA", name);
  }
  if (!is_na(min) && value < min) {
    cpp11::stop("Expected '%s' to be at least %g", name, (double) min);
  }
  if (!is_na(max) && value > max) {
    cpp11::stop("Expected '%s' to be at most %g", name, (double) max);
  }
}

template <typename T>
void user_check_array_value(const std::vector<T>& value, const char *name,
                            T min, T max) {
  for (auto& x : value) {
    user_check_value(x, name, min, max);
  }
}

inline size_t user_get_array_rank(cpp11::sexp x) {
  if (!::Rf_isArray(x)) {
    return 1;
  } else {
    cpp11::integers dim = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
    return dim.size();
  }
}

template <size_t N>
void user_check_array_rank(cpp11::sexp x, const char *name) {
  size_t rank = user_get_array_rank(x);
  if (rank != N) {
    if (N == 1) {
      cpp11::stop("Expected a vector for '%s'", name);
    } else if (N == 2) {
      cpp11::stop("Expected a matrix for '%s'", name);
    } else {
      cpp11::stop("Expected an array of rank %d for '%s'", N, name);
    }
  }
}

template <size_t N>
void user_check_array_dim(cpp11::sexp x, const char *name,
                          const std::array<int, N>& dim_expected) {
  cpp11::integers dim = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
  for (size_t i = 0; i < N; ++i) {
    if (dim[(int)i] != dim_expected[i]) {
      Rf_error("Incorrect size of dimension %d of '%s' (expected %d)",
               i + 1, name, dim_expected[i]);
    }
  }
}

template <>
inline void user_check_array_dim<1>(cpp11::sexp x, const char *name,
                                    const std::array<int, 1>& dim_expected) {
  if ((int)object_length(x) != dim_expected[0]) {
    cpp11::stop("Expected length %d value for '%s'", dim_expected[0], name);
  }
}

template <size_t N>
void user_set_array_dim(cpp11::sexp x, const char *name,
                        std::array<int, N>& dim) {
  cpp11::integers dim_given = cpp11::as_cpp<cpp11::integers>(x.attr("dim"));
  std::copy(dim_given.begin(), dim_given.end(), dim.begin());
}

template <>
inline void user_set_array_dim<1>(cpp11::sexp x, const char *name,
                                  std::array<int, 1>& dim) {
  dim[0] = object_length(x);
}

template <typename T>
T user_get_scalar(cpp11::list user, const char *name,
                  const T previous, T min, T max) {
  T ret = previous;
  cpp11::sexp x = user[name];
  if (x != R_NilValue) {
    if (object_length(x) != 1) {
      cpp11::stop("Expected a scalar numeric for '%s'", name);
    }
    // TODO: when we're getting out an integer this is a bit too relaxed
    if (TYPEOF(x) == REALSXP) {
      ret = cpp11::as_cpp<T>(x);
    } else if (TYPEOF(x) == INTSXP) {
      ret = cpp11::as_cpp<T>(x);
    } else {
      cpp11::stop("Expected a numeric value for %s", name);
    }
  }

  if (is_na(ret)) {
    cpp11::stop("Expected a value for '%s'", name);
  }
  user_check_value<T>(ret, name, min, max);
  return ret;
}

template <>
inline float user_get_scalar<float>(cpp11::list user, const char *name,
                                    const float previous, float min, float max) {
  double value = user_get_scalar<double>(user, name, previous, min, max);
  return static_cast<float>(value);
}

template <typename T>
std::vector<T> user_get_array_value(cpp11::sexp x, const char * name,
                                    T min, T max) {
  std::vector<T> ret = cpp11::as_cpp<std::vector<T>>(x);
  user_check_array_value<T>(ret, name, min, max);
  return ret;
}

template <typename T, size_t N>
std::vector<T> user_get_array_fixed(cpp11::list user, const char *name,
                                    const std::vector<T> previous,
                                    const std::array<int, N>& dim,
                                    T min, T max) {
  cpp11::sexp x = user[name];
  if (x == R_NilValue) {
    if (previous.size() == 0) {
      cpp11::stop("Expected a value for '%s'", name);
    }
    return previous;
  }

  user_check_array_rank<N>(x, name);
  user_check_array_dim<N>(x, name, dim);

  return user_get_array_value<T>(x, name, min, max);
}

template <typename T, size_t N>
std::vector<T> user_get_array_variable(cpp11::list user, const char *name,
                                       std::vector<T> previous,
                                       std::array<int, N>& dim,
                                       T min, T max) {
  cpp11::sexp x = user[name];
  if (x == R_NilValue) {
    if (previous.size() == 0) {
      cpp11::stop("Expected a value for '%s'", name);
    }
    return previous;
  }

  user_check_array_rank<N>(x, name);
  user_set_array_dim<N>(x, name, dim);

  return user_get_array_value<T>(x, name, min, max);
}

template <>
inline std::vector<float> user_get_array_value(cpp11::sexp x, const char * name,
                                               float min, float max) {
  // NOTE: possible under/overflow here for min/max because we've
  // downcast this.
  std::vector<double> value = user_get_array_value<double>(x, name, min, max);
  std::vector<float> ret(value.size());
  std::copy(value.begin(), value.end(), ret.begin());
  return ret;
}

// This is sum with inclusive "from", exclusive "to", following the
// same function in odin
template <typename real_type, typename container>
__host__ __device__
real_type odin_sum1(const container x, size_t from, size_t to) {
  real_type tot = 0.0;
  for (size_t i = from; i < to; ++i) {
    tot += x[i];
  }
  return tot;
}

inline cpp11::writable::integers integer_sequence(size_t from, size_t len) {
  cpp11::writable::integers ret(len);
  int* data = INTEGER(ret);
  for (size_t i = 0, j = from; i < len; ++i, ++j) {
    data[i] = j;
  }
  return ret;
}
namespace dust {
template<>
dust::pars_type<lancelot> dust_pars<lancelot>(cpp11::list user) {
  using real_type = typename lancelot::real_type;
  auto shared = std::make_shared<lancelot::shared_type>();
  lancelot::internal_type internal;
  shared->initial_D_carehomes_inc = 0;
  shared->initial_D_carehomes_tot = 0;
  shared->initial_D_comm_0_49_inc = 0;
  shared->initial_D_comm_50_54_inc = 0;
  shared->initial_D_comm_55_59_inc = 0;
  shared->initial_D_comm_60_64_inc = 0;
  shared->initial_D_comm_65_69_inc = 0;
  shared->initial_D_comm_70_74_inc = 0;
  shared->initial_D_comm_75_79_inc = 0;
  shared->initial_D_comm_80_plus_inc = 0;
  shared->initial_D_comm_inc = 0;
  shared->initial_D_comm_tot = 0;
  shared->initial_D_hosp_0_49_inc = 0;
  shared->initial_D_hosp_0_49_tot = 0;
  shared->initial_D_hosp_50_54_inc = 0;
  shared->initial_D_hosp_50_54_tot = 0;
  shared->initial_D_hosp_55_59_inc = 0;
  shared->initial_D_hosp_55_59_tot = 0;
  shared->initial_D_hosp_60_64_inc = 0;
  shared->initial_D_hosp_60_64_tot = 0;
  shared->initial_D_hosp_65_69_inc = 0;
  shared->initial_D_hosp_65_69_tot = 0;
  shared->initial_D_hosp_70_74_inc = 0;
  shared->initial_D_hosp_70_74_tot = 0;
  shared->initial_D_hosp_75_79_inc = 0;
  shared->initial_D_hosp_75_79_tot = 0;
  shared->initial_D_hosp_80_plus_inc = 0;
  shared->initial_D_hosp_80_plus_tot = 0;
  shared->initial_D_hosp_inc = 0;
  shared->initial_D_hosp_tot = 0;
  shared->initial_D_inc = 0;
  shared->initial_D_tot = 0;
  shared->initial_ICU_tot = 0;
  shared->initial_N_tot_PCR = 0;
  shared->initial_N_tot_sero_1 = 0;
  shared->initial_N_tot_sero_2 = 0;
  shared->initial_admit_conf_inc = 0;
  shared->initial_all_admission_0_9_conf_inc = 0;
  shared->initial_all_admission_10_19_conf_inc = 0;
  shared->initial_all_admission_20_29_conf_inc = 0;
  shared->initial_all_admission_30_39_conf_inc = 0;
  shared->initial_all_admission_40_49_conf_inc = 0;
  shared->initial_all_admission_50_59_conf_inc = 0;
  shared->initial_all_admission_60_69_conf_inc = 0;
  shared->initial_all_admission_70_79_conf_inc = 0;
  shared->initial_all_admission_80_plus_conf_inc = 0;
  shared->initial_cum_admit_conf = 0;
  shared->initial_cum_infections = 0;
  shared->initial_cum_new_conf = 0;
  shared->initial_cum_sympt_cases = 0;
  shared->initial_cum_sympt_cases_15_24 = 0;
  shared->initial_cum_sympt_cases_25_49 = 0;
  shared->initial_cum_sympt_cases_50_64 = 0;
  shared->initial_cum_sympt_cases_65_79 = 0;
  shared->initial_cum_sympt_cases_80_plus = 0;
  shared->initial_cum_sympt_cases_non_variant = 0;
  shared->initial_cum_sympt_cases_non_variant_over25 = 0;
  shared->initial_cum_sympt_cases_over25 = 0;
  shared->initial_cum_sympt_cases_under15 = 0;
  shared->initial_general_tot = 0;
  shared->initial_hosp_tot = 0;
  shared->initial_hospitalisations_inc = 0;
  shared->initial_infections_inc = 0;
  shared->initial_new_conf_inc = 0;
  shared->initial_ons_positives = 0;
  shared->initial_react_25_34_positives = 0;
  shared->initial_react_35_44_positives = 0;
  shared->initial_react_45_54_positives = 0;
  shared->initial_react_55_64_positives = 0;
  shared->initial_react_5_24_positives = 0;
  shared->initial_react_65_plus_positives = 0;
  shared->initial_react_positives = 0;
  shared->initial_sero_pos_1 = 0;
  shared->initial_sero_pos_2 = 0;
  shared->initial_susceptible = 0;
  shared->initial_sympt_cases_15_24_inc = 0;
  shared->initial_sympt_cases_25_49_inc = 0;
  shared->initial_sympt_cases_50_64_inc = 0;
  shared->initial_sympt_cases_65_79_inc = 0;
  shared->initial_sympt_cases_80_plus_inc = 0;
  shared->initial_sympt_cases_inc = 0;
  shared->initial_sympt_cases_non_variant_inc = 0;
  shared->initial_sympt_cases_non_variant_over25_inc = 0;
  shared->initial_sympt_cases_over25_inc = 0;
  shared->initial_sympt_cases_under15_inc = 0;
  shared->initial_time = 0;
  shared->seed_age_band = static_cast<int>(4);
  shared->G_D_transmission = NA_REAL;
  shared->ICU_transmission = NA_REAL;
  shared->I_A_transmission = NA_REAL;
  shared->I_C_1_transmission = NA_REAL;
  shared->I_C_2_transmission = NA_REAL;
  shared->I_P_transmission = NA_REAL;
  shared->N_25_34_react = NA_REAL;
  shared->N_35_44_react = NA_REAL;
  shared->N_45_54_react = NA_REAL;
  shared->N_55_64_react = NA_REAL;
  shared->N_5_24_react = NA_REAL;
  shared->N_65_plus_react = NA_REAL;
  shared->N_tot_15_24 = NA_REAL;
  shared->N_tot_15_64 = NA_REAL;
  shared->N_tot_25_49 = NA_REAL;
  shared->N_tot_50_64 = NA_REAL;
  shared->N_tot_65_79 = NA_REAL;
  shared->N_tot_80_plus = NA_REAL;
  shared->N_tot_ons = NA_REAL;
  shared->N_tot_react = NA_REAL;
  shared->N_tot_under15 = NA_REAL;
  shared->exp_noise = NA_REAL;
  shared->hosp_transmission = NA_REAL;
  shared->k_A = NA_INTEGER;
  shared->k_C_1 = NA_INTEGER;
  shared->k_C_2 = NA_INTEGER;
  shared->k_E = NA_INTEGER;
  shared->k_G_D = NA_INTEGER;
  shared->k_H_D = NA_INTEGER;
  shared->k_H_R = NA_INTEGER;
  shared->k_ICU_D = NA_INTEGER;
  shared->k_ICU_W_D = NA_INTEGER;
  shared->k_ICU_W_R = NA_INTEGER;
  shared->k_ICU_pre = NA_INTEGER;
  shared->k_P = NA_INTEGER;
  shared->k_PCR_pos = NA_INTEGER;
  shared->k_PCR_pre = NA_INTEGER;
  shared->k_W_D = NA_INTEGER;
  shared->k_W_R = NA_INTEGER;
  shared->k_sero_pos_1 = NA_INTEGER;
  shared->k_sero_pos_2 = NA_INTEGER;
  shared->k_sero_pre_1 = NA_INTEGER;
  shared->k_sero_pre_2 = NA_INTEGER;
  shared->kappa_ICU = NA_REAL;
  shared->kappa_admitted = NA_REAL;
  shared->kappa_all_admission = NA_REAL;
  shared->kappa_death = NA_REAL;
  shared->kappa_death_carehomes = NA_REAL;
  shared->kappa_death_comm = NA_REAL;
  shared->kappa_death_hosp = NA_REAL;
  shared->kappa_death_non_hosp = NA_REAL;
  shared->kappa_diagnoses = NA_REAL;
  shared->kappa_general = NA_REAL;
  shared->kappa_hosp = NA_REAL;
  shared->kappa_pillar2_cases = NA_REAL;
  shared->n_age_groups = NA_INTEGER;
  shared->n_doses = NA_INTEGER;
  shared->n_gamma_A_steps = NA_INTEGER;
  shared->n_gamma_C_1_steps = NA_INTEGER;
  shared->n_gamma_C_2_steps = NA_INTEGER;
  shared->n_gamma_E_steps = NA_INTEGER;
  shared->n_gamma_G_D_steps = NA_INTEGER;
  shared->n_gamma_H_D_steps = NA_INTEGER;
  shared->n_gamma_H_R_steps = NA_INTEGER;
  shared->n_gamma_ICU_D_steps = NA_INTEGER;
  shared->n_gamma_ICU_W_D_steps = NA_INTEGER;
  shared->n_gamma_ICU_W_R_steps = NA_INTEGER;
  shared->n_gamma_ICU_pre_steps = NA_INTEGER;
  shared->n_gamma_PCR_pos_steps = NA_INTEGER;
  shared->n_gamma_PCR_pre_steps = NA_INTEGER;
  shared->n_gamma_P_steps = NA_INTEGER;
  shared->n_gamma_U_steps = NA_INTEGER;
  shared->n_gamma_W_D_steps = NA_INTEGER;
  shared->n_gamma_W_R_steps = NA_INTEGER;
  shared->n_groups = NA_INTEGER;
  shared->n_p_C_steps = NA_INTEGER;
  shared->n_p_G_D_steps = NA_INTEGER;
  shared->n_p_H_D_steps = NA_INTEGER;
  shared->n_p_H_steps = NA_INTEGER;
  shared->n_p_ICU_D_steps = NA_INTEGER;
  shared->n_p_ICU_steps = NA_INTEGER;
  shared->n_p_R_steps = NA_INTEGER;
  shared->n_p_W_D_steps = NA_INTEGER;
  shared->n_p_star_steps = NA_INTEGER;
  shared->n_strains = NA_INTEGER;
  shared->n_strains_R = NA_INTEGER;
  shared->n_vacc_classes = NA_INTEGER;
  shared->ons_sensitivity = NA_REAL;
  shared->ons_specificity = NA_REAL;
  shared->p_NC_15_24 = NA_REAL;
  shared->p_NC_25_49 = NA_REAL;
  shared->p_NC_50_64 = NA_REAL;
  shared->p_NC_65_79 = NA_REAL;
  shared->p_NC_80_plus = NA_REAL;
  shared->p_NC_under15 = NA_REAL;
  shared->p_NC_weekend_15_24 = NA_REAL;
  shared->p_NC_weekend_25_49 = NA_REAL;
  shared->p_NC_weekend_50_64 = NA_REAL;
  shared->p_NC_weekend_65_79 = NA_REAL;
  shared->p_NC_weekend_80_plus = NA_REAL;
  shared->p_NC_weekend_under15 = NA_REAL;
  shared->phi_ICU = NA_REAL;
  shared->phi_admitted = NA_REAL;
  shared->phi_all_admission = NA_REAL;
  shared->phi_death_carehomes = NA_REAL;
  shared->phi_death_comm = NA_REAL;
  shared->phi_death_hosp = NA_REAL;
  shared->phi_diagnoses = NA_REAL;
  shared->phi_general = NA_REAL;
  shared->phi_hosp = NA_REAL;
  shared->phi_pillar2_cases_15_24 = NA_REAL;
  shared->phi_pillar2_cases_25_49 = NA_REAL;
  shared->phi_pillar2_cases_50_64 = NA_REAL;
  shared->phi_pillar2_cases_65_79 = NA_REAL;
  shared->phi_pillar2_cases_80_plus = NA_REAL;
  shared->phi_pillar2_cases_under15 = NA_REAL;
  shared->phi_pillar2_cases_weekend_15_24 = NA_REAL;
  shared->phi_pillar2_cases_weekend_25_49 = NA_REAL;
  shared->phi_pillar2_cases_weekend_50_64 = NA_REAL;
  shared->phi_pillar2_cases_weekend_65_79 = NA_REAL;
  shared->phi_pillar2_cases_weekend_80_plus = NA_REAL;
  shared->phi_pillar2_cases_weekend_under15 = NA_REAL;
  shared->pillar2_sensitivity = NA_REAL;
  shared->pillar2_specificity = NA_REAL;
  shared->react_sensitivity = NA_REAL;
  shared->react_specificity = NA_REAL;
  shared->rho_pillar2_tests = NA_REAL;
  shared->seed_step_start = NA_REAL;
  shared->sero_sensitivity_1 = NA_REAL;
  shared->sero_sensitivity_2 = NA_REAL;
  shared->sero_specificity_1 = NA_REAL;
  shared->sero_specificity_2 = NA_REAL;
  shared->steps_per_day = NA_INTEGER;
  shared->strain_seed_step_start = NA_REAL;
  shared->gamma_sero_pos_1 = static_cast<real_type>(0.10000000000000001);
  shared->gamma_sero_pos_2 = static_cast<real_type>(0.10000000000000001);
  shared->gamma_sero_pre_1 = static_cast<real_type>(0.10000000000000001);
  shared->gamma_sero_pre_2 = static_cast<real_type>(0.10000000000000001);
  shared->vaccine_catchup_fraction = 0;
  shared->G_D_transmission = user_get_scalar<real_type>(user, "G_D_transmission", shared->G_D_transmission, NA_REAL, NA_REAL);
  shared->ICU_transmission = user_get_scalar<real_type>(user, "ICU_transmission", shared->ICU_transmission, NA_REAL, NA_REAL);
  shared->I_A_transmission = user_get_scalar<real_type>(user, "I_A_transmission", shared->I_A_transmission, NA_REAL, NA_REAL);
  shared->I_C_1_transmission = user_get_scalar<real_type>(user, "I_C_1_transmission", shared->I_C_1_transmission, NA_REAL, NA_REAL);
  shared->I_C_2_transmission = user_get_scalar<real_type>(user, "I_C_2_transmission", shared->I_C_2_transmission, NA_REAL, NA_REAL);
  shared->I_P_transmission = user_get_scalar<real_type>(user, "I_P_transmission", shared->I_P_transmission, NA_REAL, NA_REAL);
  shared->N_25_34_react = user_get_scalar<real_type>(user, "N_25_34_react", shared->N_25_34_react, NA_REAL, NA_REAL);
  shared->N_35_44_react = user_get_scalar<real_type>(user, "N_35_44_react", shared->N_35_44_react, NA_REAL, NA_REAL);
  shared->N_45_54_react = user_get_scalar<real_type>(user, "N_45_54_react", shared->N_45_54_react, NA_REAL, NA_REAL);
  shared->N_55_64_react = user_get_scalar<real_type>(user, "N_55_64_react", shared->N_55_64_react, NA_REAL, NA_REAL);
  shared->N_5_24_react = user_get_scalar<real_type>(user, "N_5_24_react", shared->N_5_24_react, NA_REAL, NA_REAL);
  shared->N_65_plus_react = user_get_scalar<real_type>(user, "N_65_plus_react", shared->N_65_plus_react, NA_REAL, NA_REAL);
  shared->N_tot_15_24 = user_get_scalar<real_type>(user, "N_tot_15_24", shared->N_tot_15_24, NA_REAL, NA_REAL);
  shared->N_tot_15_64 = user_get_scalar<real_type>(user, "N_tot_15_64", shared->N_tot_15_64, NA_REAL, NA_REAL);
  shared->N_tot_25_49 = user_get_scalar<real_type>(user, "N_tot_25_49", shared->N_tot_25_49, NA_REAL, NA_REAL);
  shared->N_tot_50_64 = user_get_scalar<real_type>(user, "N_tot_50_64", shared->N_tot_50_64, NA_REAL, NA_REAL);
  shared->N_tot_65_79 = user_get_scalar<real_type>(user, "N_tot_65_79", shared->N_tot_65_79, NA_REAL, NA_REAL);
  shared->N_tot_80_plus = user_get_scalar<real_type>(user, "N_tot_80_plus", shared->N_tot_80_plus, NA_REAL, NA_REAL);
  shared->N_tot_ons = user_get_scalar<real_type>(user, "N_tot_ons", shared->N_tot_ons, NA_REAL, NA_REAL);
  shared->N_tot_react = user_get_scalar<real_type>(user, "N_tot_react", shared->N_tot_react, NA_REAL, NA_REAL);
  shared->N_tot_under15 = user_get_scalar<real_type>(user, "N_tot_under15", shared->N_tot_under15, NA_REAL, NA_REAL);
  std::array <int, 1> dim_beta_step;
  shared->beta_step = user_get_array_variable<real_type, 1>(user, "beta_step", shared->beta_step, dim_beta_step, NA_REAL, NA_REAL);
  shared->dim_beta_step = shared->beta_step.size();
  shared->exp_noise = user_get_scalar<real_type>(user, "exp_noise", shared->exp_noise, NA_REAL, NA_REAL);
  shared->gamma_sero_pos_1 = user_get_scalar<real_type>(user, "gamma_sero_pos_1", shared->gamma_sero_pos_1, NA_REAL, NA_REAL);
  shared->gamma_sero_pos_2 = user_get_scalar<real_type>(user, "gamma_sero_pos_2", shared->gamma_sero_pos_2, NA_REAL, NA_REAL);
  shared->gamma_sero_pre_1 = user_get_scalar<real_type>(user, "gamma_sero_pre_1", shared->gamma_sero_pre_1, NA_REAL, NA_REAL);
  shared->gamma_sero_pre_2 = user_get_scalar<real_type>(user, "gamma_sero_pre_2", shared->gamma_sero_pre_2, NA_REAL, NA_REAL);
  shared->hosp_transmission = user_get_scalar<real_type>(user, "hosp_transmission", shared->hosp_transmission, NA_REAL, NA_REAL);
  shared->k_A = user_get_scalar<int>(user, "k_A", shared->k_A, NA_INTEGER, NA_INTEGER);
  shared->k_C_1 = user_get_scalar<int>(user, "k_C_1", shared->k_C_1, NA_INTEGER, NA_INTEGER);
  shared->k_C_2 = user_get_scalar<int>(user, "k_C_2", shared->k_C_2, NA_INTEGER, NA_INTEGER);
  shared->k_E = user_get_scalar<int>(user, "k_E", shared->k_E, NA_INTEGER, NA_INTEGER);
  shared->k_G_D = user_get_scalar<int>(user, "k_G_D", shared->k_G_D, NA_INTEGER, NA_INTEGER);
  shared->k_H_D = user_get_scalar<int>(user, "k_H_D", shared->k_H_D, NA_INTEGER, NA_INTEGER);
  shared->k_H_R = user_get_scalar<int>(user, "k_H_R", shared->k_H_R, NA_INTEGER, NA_INTEGER);
  shared->k_ICU_D = user_get_scalar<int>(user, "k_ICU_D", shared->k_ICU_D, NA_INTEGER, NA_INTEGER);
  shared->k_ICU_W_D = user_get_scalar<int>(user, "k_ICU_W_D", shared->k_ICU_W_D, NA_INTEGER, NA_INTEGER);
  shared->k_ICU_W_R = user_get_scalar<int>(user, "k_ICU_W_R", shared->k_ICU_W_R, NA_INTEGER, NA_INTEGER);
  shared->k_ICU_pre = user_get_scalar<int>(user, "k_ICU_pre", shared->k_ICU_pre, NA_INTEGER, NA_INTEGER);
  shared->k_P = user_get_scalar<int>(user, "k_P", shared->k_P, NA_INTEGER, NA_INTEGER);
  shared->k_PCR_pos = user_get_scalar<int>(user, "k_PCR_pos", shared->k_PCR_pos, NA_INTEGER, NA_INTEGER);
  shared->k_PCR_pre = user_get_scalar<int>(user, "k_PCR_pre", shared->k_PCR_pre, NA_INTEGER, NA_INTEGER);
  shared->k_W_D = user_get_scalar<int>(user, "k_W_D", shared->k_W_D, NA_INTEGER, NA_INTEGER);
  shared->k_W_R = user_get_scalar<int>(user, "k_W_R", shared->k_W_R, NA_INTEGER, NA_INTEGER);
  shared->k_sero_pos_1 = user_get_scalar<int>(user, "k_sero_pos_1", shared->k_sero_pos_1, NA_INTEGER, NA_INTEGER);
  shared->k_sero_pos_2 = user_get_scalar<int>(user, "k_sero_pos_2", shared->k_sero_pos_2, NA_INTEGER, NA_INTEGER);
  shared->k_sero_pre_1 = user_get_scalar<int>(user, "k_sero_pre_1", shared->k_sero_pre_1, NA_INTEGER, NA_INTEGER);
  shared->k_sero_pre_2 = user_get_scalar<int>(user, "k_sero_pre_2", shared->k_sero_pre_2, NA_INTEGER, NA_INTEGER);
  shared->kappa_ICU = user_get_scalar<real_type>(user, "kappa_ICU", shared->kappa_ICU, NA_REAL, NA_REAL);
  shared->kappa_admitted = user_get_scalar<real_type>(user, "kappa_admitted", shared->kappa_admitted, NA_REAL, NA_REAL);
  shared->kappa_all_admission = user_get_scalar<real_type>(user, "kappa_all_admission", shared->kappa_all_admission, NA_REAL, NA_REAL);
  shared->kappa_death = user_get_scalar<real_type>(user, "kappa_death", shared->kappa_death, NA_REAL, NA_REAL);
  shared->kappa_death_carehomes = user_get_scalar<real_type>(user, "kappa_death_carehomes", shared->kappa_death_carehomes, NA_REAL, NA_REAL);
  shared->kappa_death_comm = user_get_scalar<real_type>(user, "kappa_death_comm", shared->kappa_death_comm, NA_REAL, NA_REAL);
  shared->kappa_death_hosp = user_get_scalar<real_type>(user, "kappa_death_hosp", shared->kappa_death_hosp, NA_REAL, NA_REAL);
  shared->kappa_death_non_hosp = user_get_scalar<real_type>(user, "kappa_death_non_hosp", shared->kappa_death_non_hosp, NA_REAL, NA_REAL);
  shared->kappa_diagnoses = user_get_scalar<real_type>(user, "kappa_diagnoses", shared->kappa_diagnoses, NA_REAL, NA_REAL);
  shared->kappa_general = user_get_scalar<real_type>(user, "kappa_general", shared->kappa_general, NA_REAL, NA_REAL);
  shared->kappa_hosp = user_get_scalar<real_type>(user, "kappa_hosp", shared->kappa_hosp, NA_REAL, NA_REAL);
  shared->kappa_pillar2_cases = user_get_scalar<real_type>(user, "kappa_pillar2_cases", shared->kappa_pillar2_cases, NA_REAL, NA_REAL);
  shared->n_age_groups = user_get_scalar<int>(user, "n_age_groups", shared->n_age_groups, NA_INTEGER, NA_INTEGER);
  shared->n_doses = user_get_scalar<int>(user, "n_doses", shared->n_doses, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_A_steps = user_get_scalar<int>(user, "n_gamma_A_steps", shared->n_gamma_A_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_C_1_steps = user_get_scalar<int>(user, "n_gamma_C_1_steps", shared->n_gamma_C_1_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_C_2_steps = user_get_scalar<int>(user, "n_gamma_C_2_steps", shared->n_gamma_C_2_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_E_steps = user_get_scalar<int>(user, "n_gamma_E_steps", shared->n_gamma_E_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_G_D_steps = user_get_scalar<int>(user, "n_gamma_G_D_steps", shared->n_gamma_G_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_H_D_steps = user_get_scalar<int>(user, "n_gamma_H_D_steps", shared->n_gamma_H_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_H_R_steps = user_get_scalar<int>(user, "n_gamma_H_R_steps", shared->n_gamma_H_R_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_ICU_D_steps = user_get_scalar<int>(user, "n_gamma_ICU_D_steps", shared->n_gamma_ICU_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_ICU_W_D_steps = user_get_scalar<int>(user, "n_gamma_ICU_W_D_steps", shared->n_gamma_ICU_W_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_ICU_W_R_steps = user_get_scalar<int>(user, "n_gamma_ICU_W_R_steps", shared->n_gamma_ICU_W_R_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_ICU_pre_steps = user_get_scalar<int>(user, "n_gamma_ICU_pre_steps", shared->n_gamma_ICU_pre_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_PCR_pos_steps = user_get_scalar<int>(user, "n_gamma_PCR_pos_steps", shared->n_gamma_PCR_pos_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_PCR_pre_steps = user_get_scalar<int>(user, "n_gamma_PCR_pre_steps", shared->n_gamma_PCR_pre_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_P_steps = user_get_scalar<int>(user, "n_gamma_P_steps", shared->n_gamma_P_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_U_steps = user_get_scalar<int>(user, "n_gamma_U_steps", shared->n_gamma_U_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_W_D_steps = user_get_scalar<int>(user, "n_gamma_W_D_steps", shared->n_gamma_W_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_gamma_W_R_steps = user_get_scalar<int>(user, "n_gamma_W_R_steps", shared->n_gamma_W_R_steps, NA_INTEGER, NA_INTEGER);
  shared->n_groups = user_get_scalar<int>(user, "n_groups", shared->n_groups, NA_INTEGER, NA_INTEGER);
  shared->n_p_C_steps = user_get_scalar<int>(user, "n_p_C_steps", shared->n_p_C_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_G_D_steps = user_get_scalar<int>(user, "n_p_G_D_steps", shared->n_p_G_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_H_D_steps = user_get_scalar<int>(user, "n_p_H_D_steps", shared->n_p_H_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_H_steps = user_get_scalar<int>(user, "n_p_H_steps", shared->n_p_H_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_ICU_D_steps = user_get_scalar<int>(user, "n_p_ICU_D_steps", shared->n_p_ICU_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_ICU_steps = user_get_scalar<int>(user, "n_p_ICU_steps", shared->n_p_ICU_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_R_steps = user_get_scalar<int>(user, "n_p_R_steps", shared->n_p_R_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_W_D_steps = user_get_scalar<int>(user, "n_p_W_D_steps", shared->n_p_W_D_steps, NA_INTEGER, NA_INTEGER);
  shared->n_p_star_steps = user_get_scalar<int>(user, "n_p_star_steps", shared->n_p_star_steps, NA_INTEGER, NA_INTEGER);
  shared->n_strains = user_get_scalar<int>(user, "n_strains", shared->n_strains, NA_INTEGER, NA_INTEGER);
  shared->n_strains_R = user_get_scalar<int>(user, "n_strains_R", shared->n_strains_R, NA_INTEGER, NA_INTEGER);
  shared->n_vacc_classes = user_get_scalar<int>(user, "n_vacc_classes", shared->n_vacc_classes, NA_INTEGER, NA_INTEGER);
  shared->ons_sensitivity = user_get_scalar<real_type>(user, "ons_sensitivity", shared->ons_sensitivity, NA_REAL, NA_REAL);
  shared->ons_specificity = user_get_scalar<real_type>(user, "ons_specificity", shared->ons_specificity, NA_REAL, NA_REAL);
  shared->p_NC_15_24 = user_get_scalar<real_type>(user, "p_NC_15_24", shared->p_NC_15_24, NA_REAL, NA_REAL);
  shared->p_NC_25_49 = user_get_scalar<real_type>(user, "p_NC_25_49", shared->p_NC_25_49, NA_REAL, NA_REAL);
  shared->p_NC_50_64 = user_get_scalar<real_type>(user, "p_NC_50_64", shared->p_NC_50_64, NA_REAL, NA_REAL);
  shared->p_NC_65_79 = user_get_scalar<real_type>(user, "p_NC_65_79", shared->p_NC_65_79, NA_REAL, NA_REAL);
  shared->p_NC_80_plus = user_get_scalar<real_type>(user, "p_NC_80_plus", shared->p_NC_80_plus, NA_REAL, NA_REAL);
  shared->p_NC_under15 = user_get_scalar<real_type>(user, "p_NC_under15", shared->p_NC_under15, NA_REAL, NA_REAL);
  shared->p_NC_weekend_15_24 = user_get_scalar<real_type>(user, "p_NC_weekend_15_24", shared->p_NC_weekend_15_24, NA_REAL, NA_REAL);
  shared->p_NC_weekend_25_49 = user_get_scalar<real_type>(user, "p_NC_weekend_25_49", shared->p_NC_weekend_25_49, NA_REAL, NA_REAL);
  shared->p_NC_weekend_50_64 = user_get_scalar<real_type>(user, "p_NC_weekend_50_64", shared->p_NC_weekend_50_64, NA_REAL, NA_REAL);
  shared->p_NC_weekend_65_79 = user_get_scalar<real_type>(user, "p_NC_weekend_65_79", shared->p_NC_weekend_65_79, NA_REAL, NA_REAL);
  shared->p_NC_weekend_80_plus = user_get_scalar<real_type>(user, "p_NC_weekend_80_plus", shared->p_NC_weekend_80_plus, NA_REAL, NA_REAL);
  shared->p_NC_weekend_under15 = user_get_scalar<real_type>(user, "p_NC_weekend_under15", shared->p_NC_weekend_under15, NA_REAL, NA_REAL);
  shared->phi_ICU = user_get_scalar<real_type>(user, "phi_ICU", shared->phi_ICU, NA_REAL, NA_REAL);
  shared->phi_admitted = user_get_scalar<real_type>(user, "phi_admitted", shared->phi_admitted, NA_REAL, NA_REAL);
  shared->phi_all_admission = user_get_scalar<real_type>(user, "phi_all_admission", shared->phi_all_admission, NA_REAL, NA_REAL);
  shared->phi_death_carehomes = user_get_scalar<real_type>(user, "phi_death_carehomes", shared->phi_death_carehomes, NA_REAL, NA_REAL);
  shared->phi_death_comm = user_get_scalar<real_type>(user, "phi_death_comm", shared->phi_death_comm, NA_REAL, NA_REAL);
  shared->phi_death_hosp = user_get_scalar<real_type>(user, "phi_death_hosp", shared->phi_death_hosp, NA_REAL, NA_REAL);
  shared->phi_diagnoses = user_get_scalar<real_type>(user, "phi_diagnoses", shared->phi_diagnoses, NA_REAL, NA_REAL);
  shared->phi_general = user_get_scalar<real_type>(user, "phi_general", shared->phi_general, NA_REAL, NA_REAL);
  shared->phi_hosp = user_get_scalar<real_type>(user, "phi_hosp", shared->phi_hosp, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_15_24 = user_get_scalar<real_type>(user, "phi_pillar2_cases_15_24", shared->phi_pillar2_cases_15_24, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_25_49 = user_get_scalar<real_type>(user, "phi_pillar2_cases_25_49", shared->phi_pillar2_cases_25_49, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_50_64 = user_get_scalar<real_type>(user, "phi_pillar2_cases_50_64", shared->phi_pillar2_cases_50_64, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_65_79 = user_get_scalar<real_type>(user, "phi_pillar2_cases_65_79", shared->phi_pillar2_cases_65_79, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_80_plus = user_get_scalar<real_type>(user, "phi_pillar2_cases_80_plus", shared->phi_pillar2_cases_80_plus, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_under15 = user_get_scalar<real_type>(user, "phi_pillar2_cases_under15", shared->phi_pillar2_cases_under15, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_weekend_15_24 = user_get_scalar<real_type>(user, "phi_pillar2_cases_weekend_15_24", shared->phi_pillar2_cases_weekend_15_24, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_weekend_25_49 = user_get_scalar<real_type>(user, "phi_pillar2_cases_weekend_25_49", shared->phi_pillar2_cases_weekend_25_49, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_weekend_50_64 = user_get_scalar<real_type>(user, "phi_pillar2_cases_weekend_50_64", shared->phi_pillar2_cases_weekend_50_64, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_weekend_65_79 = user_get_scalar<real_type>(user, "phi_pillar2_cases_weekend_65_79", shared->phi_pillar2_cases_weekend_65_79, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_weekend_80_plus = user_get_scalar<real_type>(user, "phi_pillar2_cases_weekend_80_plus", shared->phi_pillar2_cases_weekend_80_plus, NA_REAL, NA_REAL);
  shared->phi_pillar2_cases_weekend_under15 = user_get_scalar<real_type>(user, "phi_pillar2_cases_weekend_under15", shared->phi_pillar2_cases_weekend_under15, NA_REAL, NA_REAL);
  shared->pillar2_sensitivity = user_get_scalar<real_type>(user, "pillar2_sensitivity", shared->pillar2_sensitivity, NA_REAL, NA_REAL);
  shared->pillar2_specificity = user_get_scalar<real_type>(user, "pillar2_specificity", shared->pillar2_specificity, NA_REAL, NA_REAL);
  shared->react_sensitivity = user_get_scalar<real_type>(user, "react_sensitivity", shared->react_sensitivity, NA_REAL, NA_REAL);
  shared->react_specificity = user_get_scalar<real_type>(user, "react_specificity", shared->react_specificity, NA_REAL, NA_REAL);
  shared->rho_pillar2_tests = user_get_scalar<real_type>(user, "rho_pillar2_tests", shared->rho_pillar2_tests, NA_REAL, NA_REAL);
  shared->seed_step_start = user_get_scalar<real_type>(user, "seed_step_start", shared->seed_step_start, NA_REAL, NA_REAL);
  std::array <int, 1> dim_seed_value;
  shared->seed_value = user_get_array_variable<real_type, 1>(user, "seed_value", shared->seed_value, dim_seed_value, NA_REAL, NA_REAL);
  shared->dim_seed_value = shared->seed_value.size();
  shared->sero_sensitivity_1 = user_get_scalar<real_type>(user, "sero_sensitivity_1", shared->sero_sensitivity_1, NA_REAL, NA_REAL);
  shared->sero_sensitivity_2 = user_get_scalar<real_type>(user, "sero_sensitivity_2", shared->sero_sensitivity_2, NA_REAL, NA_REAL);
  shared->sero_specificity_1 = user_get_scalar<real_type>(user, "sero_specificity_1", shared->sero_specificity_1, NA_REAL, NA_REAL);
  shared->sero_specificity_2 = user_get_scalar<real_type>(user, "sero_specificity_2", shared->sero_specificity_2, NA_REAL, NA_REAL);
  shared->steps_per_day = user_get_scalar<int>(user, "steps_per_day", shared->steps_per_day, NA_INTEGER, NA_INTEGER);
  shared->strain_seed_step_start = user_get_scalar<real_type>(user, "strain_seed_step_start", shared->strain_seed_step_start, NA_REAL, NA_REAL);
  std::array <int, 1> dim_strain_seed_value;
  shared->strain_seed_value = user_get_array_variable<real_type, 1>(user, "strain_seed_value", shared->strain_seed_value, dim_strain_seed_value, NA_REAL, NA_REAL);
  shared->dim_strain_seed_value = shared->strain_seed_value.size();
  shared->vaccine_catchup_fraction = user_get_scalar<real_type>(user, "vaccine_catchup_fraction", shared->vaccine_catchup_fraction, NA_REAL, NA_REAL);
  std::array <int, 3> dim_vaccine_dose_step;
  shared->vaccine_dose_step = user_get_array_variable<real_type, 3>(user, "vaccine_dose_step", shared->vaccine_dose_step, dim_vaccine_dose_step, NA_REAL, NA_REAL);
  shared->dim_vaccine_dose_step = shared->vaccine_dose_step.size();
  shared->dim_vaccine_dose_step_1 = dim_vaccine_dose_step[0];
  shared->dim_vaccine_dose_step_2 = dim_vaccine_dose_step[1];
  shared->dim_vaccine_dose_step_3 = dim_vaccine_dose_step[2];
  shared->dim_D_1 = shared->n_groups;
  shared->dim_D_2 = shared->n_vacc_classes;
  shared->dim_D_hosp_1 = shared->n_groups;
  shared->dim_D_hosp_2 = shared->n_vacc_classes;
  shared->dim_D_non_hosp = shared->n_groups;
  shared->dim_E_1 = shared->n_groups;
  shared->dim_E_2 = shared->n_strains;
  shared->dim_E_3 = shared->k_E;
  shared->dim_E_4 = shared->n_vacc_classes;
  shared->dim_G_D_1 = shared->n_groups;
  shared->dim_G_D_2 = shared->n_strains;
  shared->dim_G_D_3 = shared->k_G_D;
  shared->dim_G_D_4 = shared->n_vacc_classes;
  shared->dim_HFR_disag_1 = shared->n_groups;
  shared->dim_HFR_disag_2 = shared->n_strains;
  shared->dim_HFR_disag_3 = shared->n_vacc_classes;
  shared->dim_HFR_disag_weighted_inc_1 = shared->n_groups;
  shared->dim_HFR_disag_weighted_inc_2 = shared->n_strains;
  shared->dim_HFR_disag_weighted_inc_3 = shared->n_vacc_classes;
  shared->dim_H_D_conf_1 = shared->n_groups;
  shared->dim_H_D_conf_2 = shared->n_strains;
  shared->dim_H_D_conf_3 = shared->k_H_D;
  shared->dim_H_D_conf_4 = shared->n_vacc_classes;
  shared->dim_H_D_unconf_1 = shared->n_groups;
  shared->dim_H_D_unconf_2 = shared->n_strains;
  shared->dim_H_D_unconf_3 = shared->k_H_D;
  shared->dim_H_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_H_R_conf_1 = shared->n_groups;
  shared->dim_H_R_conf_2 = shared->n_strains;
  shared->dim_H_R_conf_3 = shared->k_H_R;
  shared->dim_H_R_conf_4 = shared->n_vacc_classes;
  shared->dim_H_R_unconf_1 = shared->n_groups;
  shared->dim_H_R_unconf_2 = shared->n_strains;
  shared->dim_H_R_unconf_3 = shared->k_H_R;
  shared->dim_H_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_ICU_D_conf_1 = shared->n_groups;
  shared->dim_ICU_D_conf_2 = shared->n_strains;
  shared->dim_ICU_D_conf_3 = shared->k_ICU_D;
  shared->dim_ICU_D_conf_4 = shared->n_vacc_classes;
  shared->dim_ICU_D_unconf_1 = shared->n_groups;
  shared->dim_ICU_D_unconf_2 = shared->n_strains;
  shared->dim_ICU_D_unconf_3 = shared->k_ICU_D;
  shared->dim_ICU_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_ICU_W_D_conf_1 = shared->n_groups;
  shared->dim_ICU_W_D_conf_2 = shared->n_strains;
  shared->dim_ICU_W_D_conf_3 = shared->k_ICU_W_D;
  shared->dim_ICU_W_D_conf_4 = shared->n_vacc_classes;
  shared->dim_ICU_W_D_unconf_1 = shared->n_groups;
  shared->dim_ICU_W_D_unconf_2 = shared->n_strains;
  shared->dim_ICU_W_D_unconf_3 = shared->k_ICU_W_D;
  shared->dim_ICU_W_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_ICU_W_R_conf_1 = shared->n_groups;
  shared->dim_ICU_W_R_conf_2 = shared->n_strains;
  shared->dim_ICU_W_R_conf_3 = shared->k_ICU_W_R;
  shared->dim_ICU_W_R_conf_4 = shared->n_vacc_classes;
  shared->dim_ICU_W_R_unconf_1 = shared->n_groups;
  shared->dim_ICU_W_R_unconf_2 = shared->n_strains;
  shared->dim_ICU_W_R_unconf_3 = shared->k_ICU_W_R;
  shared->dim_ICU_W_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_ICU_pre_conf_1 = shared->n_groups;
  shared->dim_ICU_pre_conf_2 = shared->n_strains;
  shared->dim_ICU_pre_conf_3 = shared->k_ICU_pre;
  shared->dim_ICU_pre_conf_4 = shared->n_vacc_classes;
  shared->dim_ICU_pre_unconf_1 = shared->n_groups;
  shared->dim_ICU_pre_unconf_2 = shared->n_strains;
  shared->dim_ICU_pre_unconf_3 = shared->k_ICU_pre;
  shared->dim_ICU_pre_unconf_4 = shared->n_vacc_classes;
  shared->dim_IFR_disag_1 = shared->n_groups;
  shared->dim_IFR_disag_2 = shared->n_strains;
  shared->dim_IFR_disag_3 = shared->n_vacc_classes;
  shared->dim_IFR_disag_weighted_inc_1 = shared->n_groups;
  shared->dim_IFR_disag_weighted_inc_2 = shared->n_strains;
  shared->dim_IFR_disag_weighted_inc_3 = shared->n_vacc_classes;
  shared->dim_IHR_disag_1 = shared->n_groups;
  shared->dim_IHR_disag_2 = shared->n_strains;
  shared->dim_IHR_disag_3 = shared->n_vacc_classes;
  shared->dim_IHR_disag_weighted_inc_1 = shared->n_groups;
  shared->dim_IHR_disag_weighted_inc_2 = shared->n_strains;
  shared->dim_IHR_disag_weighted_inc_3 = shared->n_vacc_classes;
  shared->dim_I_A_1 = shared->n_groups;
  shared->dim_I_A_2 = shared->n_strains;
  shared->dim_I_A_3 = shared->k_A;
  shared->dim_I_A_4 = shared->n_vacc_classes;
  shared->dim_I_C_1_1 = shared->n_groups;
  shared->dim_I_C_1_2 = shared->n_strains;
  shared->dim_I_C_1_3 = shared->k_C_1;
  shared->dim_I_C_1_4 = shared->n_vacc_classes;
  shared->dim_I_C_2_1 = shared->n_groups;
  shared->dim_I_C_2_2 = shared->n_strains;
  shared->dim_I_C_2_3 = shared->k_C_2;
  shared->dim_I_C_2_4 = shared->n_vacc_classes;
  shared->dim_I_P_1 = shared->n_groups;
  shared->dim_I_P_2 = shared->n_strains;
  shared->dim_I_P_3 = shared->k_P;
  shared->dim_I_P_4 = shared->n_vacc_classes;
  shared->dim_I_weighted_1 = shared->n_groups;
  shared->dim_I_weighted_2 = shared->n_strains;
  shared->dim_I_weighted_3 = shared->n_vacc_classes;
  shared->dim_I_with_diff_trans_1 = shared->n_groups;
  shared->dim_I_with_diff_trans_2 = shared->n_strains;
  shared->dim_I_with_diff_trans_3 = shared->n_vacc_classes;
  shared->dim_N_tot = shared->n_groups;
  shared->dim_R_1 = shared->n_groups;
  shared->dim_R_2 = shared->n_strains_R;
  shared->dim_R_3 = shared->n_vacc_classes;
  shared->dim_S_1 = shared->n_groups;
  shared->dim_S_2 = shared->n_vacc_classes;
  shared->dim_T_PCR_neg_1 = shared->n_groups;
  shared->dim_T_PCR_neg_2 = shared->n_strains;
  shared->dim_T_PCR_neg_3 = shared->n_vacc_classes;
  shared->dim_T_PCR_pos_1 = shared->n_groups;
  shared->dim_T_PCR_pos_2 = shared->n_strains;
  shared->dim_T_PCR_pos_3 = shared->k_PCR_pos;
  shared->dim_T_PCR_pos_4 = shared->n_vacc_classes;
  shared->dim_T_PCR_pre_1 = shared->n_groups;
  shared->dim_T_PCR_pre_2 = shared->n_strains;
  shared->dim_T_PCR_pre_3 = shared->k_PCR_pre;
  shared->dim_T_PCR_pre_4 = shared->n_vacc_classes;
  shared->dim_T_sero_neg_1_1 = shared->n_groups;
  shared->dim_T_sero_neg_1_2 = shared->n_strains;
  shared->dim_T_sero_neg_1_3 = shared->n_vacc_classes;
  shared->dim_T_sero_neg_2_1 = shared->n_groups;
  shared->dim_T_sero_neg_2_2 = shared->n_strains;
  shared->dim_T_sero_neg_2_3 = shared->n_vacc_classes;
  shared->dim_T_sero_pos_1_1 = shared->n_groups;
  shared->dim_T_sero_pos_1_2 = shared->n_strains;
  shared->dim_T_sero_pos_1_3 = shared->k_sero_pos_1;
  shared->dim_T_sero_pos_1_4 = shared->n_vacc_classes;
  shared->dim_T_sero_pos_2_1 = shared->n_groups;
  shared->dim_T_sero_pos_2_2 = shared->n_strains;
  shared->dim_T_sero_pos_2_3 = shared->k_sero_pos_2;
  shared->dim_T_sero_pos_2_4 = shared->n_vacc_classes;
  shared->dim_T_sero_pre_1_1 = shared->n_groups;
  shared->dim_T_sero_pre_1_2 = shared->n_strains;
  shared->dim_T_sero_pre_1_3 = shared->k_sero_pre_1;
  shared->dim_T_sero_pre_1_4 = shared->n_vacc_classes;
  shared->dim_T_sero_pre_2_1 = shared->n_groups;
  shared->dim_T_sero_pre_2_2 = shared->n_strains;
  shared->dim_T_sero_pre_2_3 = shared->k_sero_pre_2;
  shared->dim_T_sero_pre_2_4 = shared->n_vacc_classes;
  shared->dim_W_D_conf_1 = shared->n_groups;
  shared->dim_W_D_conf_2 = shared->n_strains;
  shared->dim_W_D_conf_3 = shared->k_W_D;
  shared->dim_W_D_conf_4 = shared->n_vacc_classes;
  shared->dim_W_D_unconf_1 = shared->n_groups;
  shared->dim_W_D_unconf_2 = shared->n_strains;
  shared->dim_W_D_unconf_3 = shared->k_W_D;
  shared->dim_W_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_W_R_conf_1 = shared->n_groups;
  shared->dim_W_R_conf_2 = shared->n_strains;
  shared->dim_W_R_conf_3 = shared->k_W_R;
  shared->dim_W_R_conf_4 = shared->n_vacc_classes;
  shared->dim_W_R_unconf_1 = shared->n_groups;
  shared->dim_W_R_unconf_2 = shared->n_strains;
  shared->dim_W_R_unconf_3 = shared->k_W_R;
  shared->dim_W_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_H_D_conf_1 = shared->n_groups;
  shared->dim_aux_H_D_conf_2 = shared->n_strains;
  shared->dim_aux_H_D_conf_3 = shared->k_H_D;
  shared->dim_aux_H_D_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_H_D_unconf_1 = shared->n_groups;
  shared->dim_aux_H_D_unconf_2 = shared->n_strains;
  shared->dim_aux_H_D_unconf_3 = shared->k_H_D;
  shared->dim_aux_H_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_H_R_conf_1 = shared->n_groups;
  shared->dim_aux_H_R_conf_2 = shared->n_strains;
  shared->dim_aux_H_R_conf_3 = shared->k_H_R;
  shared->dim_aux_H_R_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_H_R_unconf_1 = shared->n_groups;
  shared->dim_aux_H_R_unconf_2 = shared->n_strains;
  shared->dim_aux_H_R_unconf_3 = shared->k_H_R;
  shared->dim_aux_H_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_D_conf_1 = shared->n_groups;
  shared->dim_aux_ICU_D_conf_2 = shared->n_strains;
  shared->dim_aux_ICU_D_conf_3 = shared->k_ICU_D;
  shared->dim_aux_ICU_D_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_D_unconf_1 = shared->n_groups;
  shared->dim_aux_ICU_D_unconf_2 = shared->n_strains;
  shared->dim_aux_ICU_D_unconf_3 = shared->k_ICU_D;
  shared->dim_aux_ICU_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_W_D_conf_1 = shared->n_groups;
  shared->dim_aux_ICU_W_D_conf_2 = shared->n_strains;
  shared->dim_aux_ICU_W_D_conf_3 = shared->k_ICU_W_D;
  shared->dim_aux_ICU_W_D_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_W_D_unconf_1 = shared->n_groups;
  shared->dim_aux_ICU_W_D_unconf_2 = shared->n_strains;
  shared->dim_aux_ICU_W_D_unconf_3 = shared->k_ICU_W_D;
  shared->dim_aux_ICU_W_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_W_R_conf_1 = shared->n_groups;
  shared->dim_aux_ICU_W_R_conf_2 = shared->n_strains;
  shared->dim_aux_ICU_W_R_conf_3 = shared->k_ICU_W_R;
  shared->dim_aux_ICU_W_R_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_W_R_unconf_1 = shared->n_groups;
  shared->dim_aux_ICU_W_R_unconf_2 = shared->n_strains;
  shared->dim_aux_ICU_W_R_unconf_3 = shared->k_ICU_W_R;
  shared->dim_aux_ICU_W_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_pre_conf_1 = shared->n_groups;
  shared->dim_aux_ICU_pre_conf_2 = shared->n_strains;
  shared->dim_aux_ICU_pre_conf_3 = shared->k_ICU_pre;
  shared->dim_aux_ICU_pre_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_ICU_pre_unconf_1 = shared->n_groups;
  shared->dim_aux_ICU_pre_unconf_2 = shared->n_strains;
  shared->dim_aux_ICU_pre_unconf_3 = shared->k_ICU_pre;
  shared->dim_aux_ICU_pre_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_W_D_conf_1 = shared->n_groups;
  shared->dim_aux_W_D_conf_2 = shared->n_strains;
  shared->dim_aux_W_D_conf_3 = shared->k_W_D;
  shared->dim_aux_W_D_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_W_D_unconf_1 = shared->n_groups;
  shared->dim_aux_W_D_unconf_2 = shared->n_strains;
  shared->dim_aux_W_D_unconf_3 = shared->k_W_D;
  shared->dim_aux_W_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_aux_W_R_conf_1 = shared->n_groups;
  shared->dim_aux_W_R_conf_2 = shared->n_strains;
  shared->dim_aux_W_R_conf_3 = shared->k_W_R;
  shared->dim_aux_W_R_conf_4 = shared->n_vacc_classes;
  shared->dim_aux_W_R_unconf_1 = shared->n_groups;
  shared->dim_aux_W_R_unconf_2 = shared->n_strains;
  shared->dim_aux_W_R_unconf_3 = shared->k_W_R;
  shared->dim_aux_W_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_cum_admit_by_age = shared->n_groups;
  shared->dim_cum_infections_disag_1 = shared->n_groups;
  shared->dim_cum_infections_disag_2 = shared->n_vacc_classes;
  shared->dim_cum_infections_strain = shared->n_strains;
  shared->dim_cum_n_E_vacc_skip_1 = shared->n_groups;
  shared->dim_cum_n_E_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_cum_n_E_vaccinated_1 = shared->n_groups;
  shared->dim_cum_n_E_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_cum_n_I_A_vacc_skip_1 = shared->n_groups;
  shared->dim_cum_n_I_A_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_cum_n_I_A_vaccinated_1 = shared->n_groups;
  shared->dim_cum_n_I_A_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_cum_n_I_P_vacc_skip_1 = shared->n_groups;
  shared->dim_cum_n_I_P_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_cum_n_I_P_vaccinated_1 = shared->n_groups;
  shared->dim_cum_n_I_P_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_cum_n_R_vacc_skip_1 = shared->n_groups;
  shared->dim_cum_n_R_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_cum_n_R_vaccinated_1 = shared->n_groups;
  shared->dim_cum_n_R_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_cum_n_S_vacc_skip_1 = shared->n_groups;
  shared->dim_cum_n_S_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_cum_n_S_vaccinated_1 = shared->n_groups;
  shared->dim_cum_n_S_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_cum_n_vacc_skip_1 = shared->n_groups;
  shared->dim_cum_n_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_cum_n_vaccinated_1 = shared->n_groups;
  shared->dim_cum_n_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_delta_D_hosp = shared->n_groups;
  shared->dim_delta_D_hosp_disag_1 = shared->n_groups;
  shared->dim_delta_D_hosp_disag_2 = shared->n_vacc_classes;
  shared->dim_delta_D_non_hosp = shared->n_groups;
  shared->dim_delta_D_non_hosp_disag_1 = shared->n_groups;
  shared->dim_delta_D_non_hosp_disag_2 = shared->n_vacc_classes;
  shared->dim_delta_diagnoses_admitted_1 = shared->n_groups;
  shared->dim_delta_diagnoses_admitted_2 = shared->n_vacc_classes;
  shared->dim_delta_hospitalisations_age = shared->n_groups;
  shared->dim_delta_hospitalisations_strain = shared->n_strains;
  shared->dim_delta_infections_1 = shared->n_groups;
  shared->dim_delta_infections_2 = shared->n_strains;
  shared->dim_delta_infections_3 = shared->n_vacc_classes;
  shared->dim_delta_infections_age = shared->n_groups;
  shared->dim_delta_infections_strain = shared->n_strains;
  shared->dim_diagnoses_admitted_1 = shared->n_groups;
  shared->dim_diagnoses_admitted_2 = shared->n_vacc_classes;
  shared->dim_gamma_A = shared->n_strains;
  shared->dim_gamma_A_step = shared->n_gamma_A_steps;
  shared->dim_gamma_C_1 = shared->n_strains;
  shared->dim_gamma_C_1_step = shared->n_gamma_C_1_steps;
  shared->dim_gamma_C_2 = shared->n_strains;
  shared->dim_gamma_C_2_step = shared->n_gamma_C_2_steps;
  shared->dim_gamma_E = shared->n_strains;
  shared->dim_gamma_E_step = shared->n_gamma_E_steps;
  shared->dim_gamma_G_D = shared->n_strains;
  shared->dim_gamma_G_D_step = shared->n_gamma_G_D_steps;
  shared->dim_gamma_H_D = shared->n_strains;
  shared->dim_gamma_H_D_step = shared->n_gamma_H_D_steps;
  shared->dim_gamma_H_R = shared->n_strains;
  shared->dim_gamma_H_R_step = shared->n_gamma_H_R_steps;
  shared->dim_gamma_ICU_D = shared->n_strains;
  shared->dim_gamma_ICU_D_step = shared->n_gamma_ICU_D_steps;
  shared->dim_gamma_ICU_W_D = shared->n_strains;
  shared->dim_gamma_ICU_W_D_step = shared->n_gamma_ICU_W_D_steps;
  shared->dim_gamma_ICU_W_R = shared->n_strains;
  shared->dim_gamma_ICU_W_R_step = shared->n_gamma_ICU_W_R_steps;
  shared->dim_gamma_ICU_pre = shared->n_strains;
  shared->dim_gamma_ICU_pre_step = shared->n_gamma_ICU_pre_steps;
  shared->dim_gamma_P = shared->n_strains;
  shared->dim_gamma_PCR_pos = shared->n_strains;
  shared->dim_gamma_PCR_pos_step = shared->n_gamma_PCR_pos_steps;
  shared->dim_gamma_PCR_pre = shared->n_strains;
  shared->dim_gamma_PCR_pre_step = shared->n_gamma_PCR_pre_steps;
  shared->dim_gamma_P_step = shared->n_gamma_P_steps;
  shared->dim_gamma_U_step = shared->n_gamma_U_steps;
  shared->dim_gamma_W_D = shared->n_strains;
  shared->dim_gamma_W_D_step = shared->n_gamma_W_D_steps;
  shared->dim_gamma_W_R = shared->n_strains;
  shared->dim_gamma_W_R_step = shared->n_gamma_W_R_steps;
  shared->dim_hfr_age = shared->n_groups;
  shared->dim_hospitalisations_inc_age = shared->n_groups;
  shared->dim_hospitalisations_inc_strain = shared->n_strains;
  shared->dim_ifr_age = shared->n_groups;
  shared->dim_ihr_age = shared->n_groups;
  shared->dim_index_dose = shared->n_doses;
  shared->dim_index_dose_inverse = shared->n_vacc_classes;
  shared->dim_infections_inc_age = shared->n_groups;
  shared->dim_infections_inc_strain = shared->n_strains;
  shared->dim_m_1 = shared->n_groups;
  shared->dim_m_2 = shared->n_groups;
  shared->dim_n_EI_A_1 = shared->n_groups;
  shared->dim_n_EI_A_2 = shared->n_strains;
  shared->dim_n_EI_A_3 = shared->n_vacc_classes;
  shared->dim_n_EI_P_1 = shared->n_groups;
  shared->dim_n_EI_P_2 = shared->n_strains;
  shared->dim_n_EI_P_3 = shared->n_vacc_classes;
  shared->dim_n_E_next_vacc_class_1 = shared->n_groups;
  shared->dim_n_E_next_vacc_class_2 = shared->n_strains;
  shared->dim_n_E_next_vacc_class_3 = shared->k_E;
  shared->dim_n_E_next_vacc_class_4 = shared->n_vacc_classes;
  shared->dim_n_E_progress_1 = shared->n_groups;
  shared->dim_n_E_progress_2 = shared->n_strains;
  shared->dim_n_E_progress_3 = shared->k_E;
  shared->dim_n_E_progress_4 = shared->n_vacc_classes;
  shared->dim_n_E_vacc_skip_1 = shared->n_groups;
  shared->dim_n_E_vacc_skip_2 = shared->n_strains;
  shared->dim_n_E_vacc_skip_3 = shared->k_E;
  shared->dim_n_E_vacc_skip_4 = shared->n_vacc_classes;
  shared->dim_n_E_vaccinated_1 = shared->n_groups;
  shared->dim_n_E_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_n_G_D_progress_1 = shared->n_groups;
  shared->dim_n_G_D_progress_2 = shared->n_strains;
  shared->dim_n_G_D_progress_3 = shared->k_G_D;
  shared->dim_n_G_D_progress_4 = shared->n_vacc_classes;
  shared->dim_n_H_D_conf_progress_1 = shared->n_groups;
  shared->dim_n_H_D_conf_progress_2 = shared->n_strains;
  shared->dim_n_H_D_conf_progress_3 = shared->k_H_D;
  shared->dim_n_H_D_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_H_D_unconf_progress_1 = shared->n_groups;
  shared->dim_n_H_D_unconf_progress_2 = shared->n_strains;
  shared->dim_n_H_D_unconf_progress_3 = shared->k_H_D;
  shared->dim_n_H_D_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_H_D_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_H_D_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_H_D_unconf_to_conf_3 = shared->k_H_D;
  shared->dim_n_H_D_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_H_R_conf_progress_1 = shared->n_groups;
  shared->dim_n_H_R_conf_progress_2 = shared->n_strains;
  shared->dim_n_H_R_conf_progress_3 = shared->k_H_R;
  shared->dim_n_H_R_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_H_R_unconf_progress_1 = shared->n_groups;
  shared->dim_n_H_R_unconf_progress_2 = shared->n_strains;
  shared->dim_n_H_R_unconf_progress_3 = shared->k_H_R;
  shared->dim_n_H_R_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_H_R_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_H_R_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_H_R_unconf_to_conf_3 = shared->k_H_R;
  shared->dim_n_H_R_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_D_conf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_D_conf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_D_conf_progress_3 = shared->k_ICU_D;
  shared->dim_n_ICU_D_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_D_unconf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_D_unconf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_D_unconf_progress_3 = shared->k_ICU_D;
  shared->dim_n_ICU_D_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_D_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_ICU_D_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_ICU_D_unconf_to_conf_3 = shared->k_ICU_D;
  shared->dim_n_ICU_D_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_W_D_conf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_W_D_conf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_W_D_conf_progress_3 = shared->k_ICU_W_D;
  shared->dim_n_ICU_W_D_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_W_D_unconf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_W_D_unconf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_W_D_unconf_progress_3 = shared->k_ICU_W_D;
  shared->dim_n_ICU_W_D_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_W_D_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_ICU_W_D_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_ICU_W_D_unconf_to_conf_3 = shared->k_ICU_W_D;
  shared->dim_n_ICU_W_D_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_W_R_conf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_W_R_conf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_W_R_conf_progress_3 = shared->k_ICU_W_R;
  shared->dim_n_ICU_W_R_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_W_R_unconf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_W_R_unconf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_W_R_unconf_progress_3 = shared->k_ICU_W_R;
  shared->dim_n_ICU_W_R_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_W_R_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_ICU_W_R_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_ICU_W_R_unconf_to_conf_3 = shared->k_ICU_W_R;
  shared->dim_n_ICU_W_R_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_conf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_pre_conf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_pre_conf_progress_3 = shared->k_ICU_pre;
  shared->dim_n_ICU_pre_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1 = shared->n_groups;
  shared->dim_n_ICU_pre_conf_to_ICU_D_conf_2 = shared->n_strains;
  shared->dim_n_ICU_pre_conf_to_ICU_D_conf_3 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 = shared->n_groups;
  shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_2 = shared->n_strains;
  shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_3 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 = shared->n_groups;
  shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_2 = shared->n_strains;
  shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_3 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_unconf_progress_1 = shared->n_groups;
  shared->dim_n_ICU_pre_unconf_progress_2 = shared->n_strains;
  shared->dim_n_ICU_pre_unconf_progress_3 = shared->k_ICU_pre;
  shared->dim_n_ICU_pre_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 = shared->n_groups;
  shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_2 = shared->n_strains;
  shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_3 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 = shared->n_groups;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2 = shared->n_strains;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 = shared->n_groups;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2 = shared->n_strains;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3 = shared->n_vacc_classes;
  shared->dim_n_ICU_pre_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_ICU_pre_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_ICU_pre_unconf_to_conf_3 = shared->k_ICU_pre;
  shared->dim_n_ICU_pre_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_I_A_next_vacc_class_1 = shared->n_groups;
  shared->dim_n_I_A_next_vacc_class_2 = shared->n_strains;
  shared->dim_n_I_A_next_vacc_class_3 = shared->k_A;
  shared->dim_n_I_A_next_vacc_class_4 = shared->n_vacc_classes;
  shared->dim_n_I_A_progress_1 = shared->n_groups;
  shared->dim_n_I_A_progress_2 = shared->n_strains;
  shared->dim_n_I_A_progress_3 = shared->k_A;
  shared->dim_n_I_A_progress_4 = shared->n_vacc_classes;
  shared->dim_n_I_A_vacc_skip_1 = shared->n_groups;
  shared->dim_n_I_A_vacc_skip_2 = shared->n_strains;
  shared->dim_n_I_A_vacc_skip_3 = shared->k_A;
  shared->dim_n_I_A_vacc_skip_4 = shared->n_vacc_classes;
  shared->dim_n_I_A_vaccinated_1 = shared->n_groups;
  shared->dim_n_I_A_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_n_I_C_1_progress_1 = shared->n_groups;
  shared->dim_n_I_C_1_progress_2 = shared->n_strains;
  shared->dim_n_I_C_1_progress_3 = shared->k_C_1;
  shared->dim_n_I_C_1_progress_4 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_progress_1 = shared->n_groups;
  shared->dim_n_I_C_2_progress_2 = shared->n_strains;
  shared->dim_n_I_C_2_progress_3 = shared->k_C_2;
  shared->dim_n_I_C_2_progress_4 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_G_D_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_G_D_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_G_D_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_H_D_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_H_D_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_H_D_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_H_D_conf_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_H_D_conf_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_H_D_conf_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_H_R_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_H_R_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_H_R_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_H_R_conf_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_H_R_conf_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_H_R_conf_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_ICU_pre_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_ICU_pre_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_ICU_pre_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_ICU_pre_conf_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_ICU_pre_conf_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_ICU_pre_conf_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_RS_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_RS_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_RS_3 = shared->n_vacc_classes;
  shared->dim_n_I_C_2_to_hosp_1 = shared->n_groups;
  shared->dim_n_I_C_2_to_hosp_2 = shared->n_strains;
  shared->dim_n_I_C_2_to_hosp_3 = shared->n_vacc_classes;
  shared->dim_n_I_P_next_vacc_class_1 = shared->n_groups;
  shared->dim_n_I_P_next_vacc_class_2 = shared->n_strains;
  shared->dim_n_I_P_next_vacc_class_3 = shared->k_P;
  shared->dim_n_I_P_next_vacc_class_4 = shared->n_vacc_classes;
  shared->dim_n_I_P_progress_1 = shared->n_groups;
  shared->dim_n_I_P_progress_2 = shared->n_strains;
  shared->dim_n_I_P_progress_3 = shared->k_P;
  shared->dim_n_I_P_progress_4 = shared->n_vacc_classes;
  shared->dim_n_I_P_vacc_skip_1 = shared->n_groups;
  shared->dim_n_I_P_vacc_skip_2 = shared->n_strains;
  shared->dim_n_I_P_vacc_skip_3 = shared->k_P;
  shared->dim_n_I_P_vacc_skip_4 = shared->n_vacc_classes;
  shared->dim_n_I_P_vaccinated_1 = shared->n_groups;
  shared->dim_n_I_P_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_n_R5_to_E3_1 = shared->n_groups;
  shared->dim_n_R5_to_E3_2 = shared->n_vacc_classes;
  shared->dim_n_RE_1 = shared->n_groups;
  shared->dim_n_RE_2 = shared->n_strains;
  shared->dim_n_RE_3 = shared->n_vacc_classes;
  shared->dim_n_RS_1 = shared->n_groups;
  shared->dim_n_RS_2 = shared->n_strains_R;
  shared->dim_n_RS_3 = shared->n_vacc_classes;
  shared->dim_n_R_next_vacc_class_1 = shared->n_groups;
  shared->dim_n_R_next_vacc_class_2 = shared->n_strains_R;
  shared->dim_n_R_next_vacc_class_3 = shared->n_vacc_classes;
  shared->dim_n_R_progress_1 = shared->n_groups;
  shared->dim_n_R_progress_2 = shared->n_strains_R;
  shared->dim_n_R_progress_3 = shared->n_vacc_classes;
  shared->dim_n_R_tmp_1 = shared->n_groups;
  shared->dim_n_R_tmp_2 = shared->n_strains_R;
  shared->dim_n_R_tmp_3 = shared->n_vacc_classes;
  shared->dim_n_R_vacc_skip_1 = shared->n_groups;
  shared->dim_n_R_vacc_skip_2 = shared->n_strains_R;
  shared->dim_n_R_vacc_skip_3 = shared->n_vacc_classes;
  shared->dim_n_R_vaccinated_1 = shared->n_groups;
  shared->dim_n_R_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_n_S_next_vacc_class_1 = shared->n_groups;
  shared->dim_n_S_next_vacc_class_2 = shared->n_vacc_classes;
  shared->dim_n_S_progress_1 = shared->n_groups;
  shared->dim_n_S_progress_2 = shared->n_strains;
  shared->dim_n_S_progress_3 = shared->n_vacc_classes;
  shared->dim_n_S_progress_tot_1 = shared->n_groups;
  shared->dim_n_S_progress_tot_2 = shared->n_vacc_classes;
  shared->dim_n_S_vacc_skip_1 = shared->n_groups;
  shared->dim_n_S_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_n_S_vaccinated_1 = shared->n_groups;
  shared->dim_n_S_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_n_T_PCR_pos_progress_1 = shared->n_groups;
  shared->dim_n_T_PCR_pos_progress_2 = shared->n_strains;
  shared->dim_n_T_PCR_pos_progress_3 = shared->k_PCR_pos;
  shared->dim_n_T_PCR_pos_progress_4 = shared->n_vacc_classes;
  shared->dim_n_T_PCR_pre_progress_1 = shared->n_groups;
  shared->dim_n_T_PCR_pre_progress_2 = shared->n_strains;
  shared->dim_n_T_PCR_pre_progress_3 = shared->k_PCR_pre;
  shared->dim_n_T_PCR_pre_progress_4 = shared->n_vacc_classes;
  shared->dim_n_T_sero_pos_1_progress_1 = shared->n_groups;
  shared->dim_n_T_sero_pos_1_progress_2 = shared->n_strains;
  shared->dim_n_T_sero_pos_1_progress_3 = shared->k_sero_pos_1;
  shared->dim_n_T_sero_pos_1_progress_4 = shared->n_vacc_classes;
  shared->dim_n_T_sero_pos_2_progress_1 = shared->n_groups;
  shared->dim_n_T_sero_pos_2_progress_2 = shared->n_strains;
  shared->dim_n_T_sero_pos_2_progress_3 = shared->k_sero_pos_2;
  shared->dim_n_T_sero_pos_2_progress_4 = shared->n_vacc_classes;
  shared->dim_n_T_sero_pre_1_progress_1 = shared->n_groups;
  shared->dim_n_T_sero_pre_1_progress_2 = shared->n_strains;
  shared->dim_n_T_sero_pre_1_progress_3 = shared->k_sero_pre_1;
  shared->dim_n_T_sero_pre_1_progress_4 = shared->n_vacc_classes;
  shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_1 = shared->n_groups;
  shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_2 = shared->n_strains;
  shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_3 = shared->n_vacc_classes;
  shared->dim_n_T_sero_pre_2_progress_1 = shared->n_groups;
  shared->dim_n_T_sero_pre_2_progress_2 = shared->n_strains;
  shared->dim_n_T_sero_pre_2_progress_3 = shared->k_sero_pre_2;
  shared->dim_n_T_sero_pre_2_progress_4 = shared->n_vacc_classes;
  shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_1 = shared->n_groups;
  shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_2 = shared->n_strains;
  shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_3 = shared->n_vacc_classes;
  shared->dim_n_W_D_conf_progress_1 = shared->n_groups;
  shared->dim_n_W_D_conf_progress_2 = shared->n_strains;
  shared->dim_n_W_D_conf_progress_3 = shared->k_W_D;
  shared->dim_n_W_D_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_W_D_unconf_progress_1 = shared->n_groups;
  shared->dim_n_W_D_unconf_progress_2 = shared->n_strains;
  shared->dim_n_W_D_unconf_progress_3 = shared->k_W_D;
  shared->dim_n_W_D_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_W_D_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_W_D_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_W_D_unconf_to_conf_3 = shared->k_W_D;
  shared->dim_n_W_D_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_W_R_conf_progress_1 = shared->n_groups;
  shared->dim_n_W_R_conf_progress_2 = shared->n_strains;
  shared->dim_n_W_R_conf_progress_3 = shared->k_W_R;
  shared->dim_n_W_R_conf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_W_R_unconf_progress_1 = shared->n_groups;
  shared->dim_n_W_R_unconf_progress_2 = shared->n_strains;
  shared->dim_n_W_R_unconf_progress_3 = shared->k_W_R;
  shared->dim_n_W_R_unconf_progress_4 = shared->n_vacc_classes;
  shared->dim_n_W_R_unconf_to_conf_1 = shared->n_groups;
  shared->dim_n_W_R_unconf_to_conf_2 = shared->n_strains;
  shared->dim_n_W_R_unconf_to_conf_3 = shared->k_W_R;
  shared->dim_n_W_R_unconf_to_conf_4 = shared->n_vacc_classes;
  shared->dim_n_com_to_T_sero_pre_1 = shared->n_groups;
  shared->dim_n_com_to_T_sero_pre_2 = shared->n_strains;
  shared->dim_n_com_to_T_sero_pre_3 = shared->n_vacc_classes;
  shared->dim_n_hosp_non_ICU_1 = shared->n_groups;
  shared->dim_n_hosp_non_ICU_2 = shared->n_strains;
  shared->dim_n_hosp_non_ICU_3 = shared->n_vacc_classes;
  shared->dim_n_infected_to_R_1 = shared->n_groups;
  shared->dim_n_infected_to_R_2 = shared->n_strains;
  shared->dim_n_infected_to_R_3 = shared->n_vacc_classes;
  shared->dim_n_infected_to_S_1 = shared->n_groups;
  shared->dim_n_infected_to_S_2 = shared->n_strains;
  shared->dim_n_infected_to_S_3 = shared->n_vacc_classes;
  shared->dim_n_infection_end_1 = shared->n_groups;
  shared->dim_n_infection_end_2 = shared->n_strains;
  shared->dim_n_infection_end_3 = shared->n_vacc_classes;
  shared->dim_n_vacc_skip_1 = shared->n_groups;
  shared->dim_n_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_n_vaccinated_1 = shared->n_groups;
  shared->dim_n_vaccinated_2 = shared->n_vacc_classes;
  shared->dim_new_E_1 = shared->n_groups;
  shared->dim_new_E_2 = shared->n_strains;
  shared->dim_new_E_3 = shared->k_E;
  shared->dim_new_E_4 = shared->n_vacc_classes;
  shared->dim_new_G_D_1 = shared->n_groups;
  shared->dim_new_G_D_2 = shared->n_strains;
  shared->dim_new_G_D_3 = shared->k_G_D;
  shared->dim_new_G_D_4 = shared->n_vacc_classes;
  shared->dim_new_HFR_disag_weighted_inc_1 = shared->n_groups;
  shared->dim_new_HFR_disag_weighted_inc_2 = shared->n_strains;
  shared->dim_new_HFR_disag_weighted_inc_3 = shared->n_vacc_classes;
  shared->dim_new_H_D_conf_1 = shared->n_groups;
  shared->dim_new_H_D_conf_2 = shared->n_strains;
  shared->dim_new_H_D_conf_3 = shared->k_H_D;
  shared->dim_new_H_D_conf_4 = shared->n_vacc_classes;
  shared->dim_new_H_D_unconf_1 = shared->n_groups;
  shared->dim_new_H_D_unconf_2 = shared->n_strains;
  shared->dim_new_H_D_unconf_3 = shared->k_H_D;
  shared->dim_new_H_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_H_R_conf_1 = shared->n_groups;
  shared->dim_new_H_R_conf_2 = shared->n_strains;
  shared->dim_new_H_R_conf_3 = shared->k_H_R;
  shared->dim_new_H_R_conf_4 = shared->n_vacc_classes;
  shared->dim_new_H_R_unconf_1 = shared->n_groups;
  shared->dim_new_H_R_unconf_2 = shared->n_strains;
  shared->dim_new_H_R_unconf_3 = shared->k_H_R;
  shared->dim_new_H_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_D_conf_1 = shared->n_groups;
  shared->dim_new_ICU_D_conf_2 = shared->n_strains;
  shared->dim_new_ICU_D_conf_3 = shared->k_ICU_D;
  shared->dim_new_ICU_D_conf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_D_unconf_1 = shared->n_groups;
  shared->dim_new_ICU_D_unconf_2 = shared->n_strains;
  shared->dim_new_ICU_D_unconf_3 = shared->k_ICU_D;
  shared->dim_new_ICU_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_W_D_conf_1 = shared->n_groups;
  shared->dim_new_ICU_W_D_conf_2 = shared->n_strains;
  shared->dim_new_ICU_W_D_conf_3 = shared->k_ICU_W_D;
  shared->dim_new_ICU_W_D_conf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_W_D_unconf_1 = shared->n_groups;
  shared->dim_new_ICU_W_D_unconf_2 = shared->n_strains;
  shared->dim_new_ICU_W_D_unconf_3 = shared->k_ICU_W_D;
  shared->dim_new_ICU_W_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_W_R_conf_1 = shared->n_groups;
  shared->dim_new_ICU_W_R_conf_2 = shared->n_strains;
  shared->dim_new_ICU_W_R_conf_3 = shared->k_ICU_W_R;
  shared->dim_new_ICU_W_R_conf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_W_R_unconf_1 = shared->n_groups;
  shared->dim_new_ICU_W_R_unconf_2 = shared->n_strains;
  shared->dim_new_ICU_W_R_unconf_3 = shared->k_ICU_W_R;
  shared->dim_new_ICU_W_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_pre_conf_1 = shared->n_groups;
  shared->dim_new_ICU_pre_conf_2 = shared->n_strains;
  shared->dim_new_ICU_pre_conf_3 = shared->k_ICU_pre;
  shared->dim_new_ICU_pre_conf_4 = shared->n_vacc_classes;
  shared->dim_new_ICU_pre_unconf_1 = shared->n_groups;
  shared->dim_new_ICU_pre_unconf_2 = shared->n_strains;
  shared->dim_new_ICU_pre_unconf_3 = shared->k_ICU_pre;
  shared->dim_new_ICU_pre_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_IFR_disag_weighted_inc_1 = shared->n_groups;
  shared->dim_new_IFR_disag_weighted_inc_2 = shared->n_strains;
  shared->dim_new_IFR_disag_weighted_inc_3 = shared->n_vacc_classes;
  shared->dim_new_IHR_disag_weighted_inc_1 = shared->n_groups;
  shared->dim_new_IHR_disag_weighted_inc_2 = shared->n_strains;
  shared->dim_new_IHR_disag_weighted_inc_3 = shared->n_vacc_classes;
  shared->dim_new_I_A_1 = shared->n_groups;
  shared->dim_new_I_A_2 = shared->n_strains;
  shared->dim_new_I_A_3 = shared->k_A;
  shared->dim_new_I_A_4 = shared->n_vacc_classes;
  shared->dim_new_I_C_1_1 = shared->n_groups;
  shared->dim_new_I_C_1_2 = shared->n_strains;
  shared->dim_new_I_C_1_3 = shared->k_C_1;
  shared->dim_new_I_C_1_4 = shared->n_vacc_classes;
  shared->dim_new_I_C_2_1 = shared->n_groups;
  shared->dim_new_I_C_2_2 = shared->n_strains;
  shared->dim_new_I_C_2_3 = shared->k_C_2;
  shared->dim_new_I_C_2_4 = shared->n_vacc_classes;
  shared->dim_new_I_P_1 = shared->n_groups;
  shared->dim_new_I_P_2 = shared->n_strains;
  shared->dim_new_I_P_3 = shared->k_P;
  shared->dim_new_I_P_4 = shared->n_vacc_classes;
  shared->dim_new_I_weighted_1 = shared->n_groups;
  shared->dim_new_I_weighted_2 = shared->n_strains;
  shared->dim_new_I_weighted_3 = shared->n_vacc_classes;
  shared->dim_new_R_1 = shared->n_groups;
  shared->dim_new_R_2 = shared->n_strains_R;
  shared->dim_new_R_3 = shared->n_vacc_classes;
  shared->dim_new_S_1 = shared->n_groups;
  shared->dim_new_S_2 = shared->n_vacc_classes;
  shared->dim_new_T_PCR_neg_1 = shared->n_groups;
  shared->dim_new_T_PCR_neg_2 = shared->n_strains;
  shared->dim_new_T_PCR_neg_3 = shared->n_vacc_classes;
  shared->dim_new_T_PCR_pos_1 = shared->n_groups;
  shared->dim_new_T_PCR_pos_2 = shared->n_strains;
  shared->dim_new_T_PCR_pos_3 = shared->k_PCR_pos;
  shared->dim_new_T_PCR_pos_4 = shared->n_vacc_classes;
  shared->dim_new_T_PCR_pre_1 = shared->n_groups;
  shared->dim_new_T_PCR_pre_2 = shared->n_strains;
  shared->dim_new_T_PCR_pre_3 = shared->k_PCR_pre;
  shared->dim_new_T_PCR_pre_4 = shared->n_vacc_classes;
  shared->dim_new_T_sero_neg_1_1 = shared->n_groups;
  shared->dim_new_T_sero_neg_1_2 = shared->n_strains;
  shared->dim_new_T_sero_neg_1_3 = shared->n_vacc_classes;
  shared->dim_new_T_sero_neg_2_1 = shared->n_groups;
  shared->dim_new_T_sero_neg_2_2 = shared->n_strains;
  shared->dim_new_T_sero_neg_2_3 = shared->n_vacc_classes;
  shared->dim_new_T_sero_pos_1_1 = shared->n_groups;
  shared->dim_new_T_sero_pos_1_2 = shared->n_strains;
  shared->dim_new_T_sero_pos_1_3 = shared->k_sero_pos_1;
  shared->dim_new_T_sero_pos_1_4 = shared->n_vacc_classes;
  shared->dim_new_T_sero_pos_2_1 = shared->n_groups;
  shared->dim_new_T_sero_pos_2_2 = shared->n_strains;
  shared->dim_new_T_sero_pos_2_3 = shared->k_sero_pos_2;
  shared->dim_new_T_sero_pos_2_4 = shared->n_vacc_classes;
  shared->dim_new_T_sero_pre_1_1 = shared->n_groups;
  shared->dim_new_T_sero_pre_1_2 = shared->n_strains;
  shared->dim_new_T_sero_pre_1_3 = shared->k_sero_pre_1;
  shared->dim_new_T_sero_pre_1_4 = shared->n_vacc_classes;
  shared->dim_new_T_sero_pre_2_1 = shared->n_groups;
  shared->dim_new_T_sero_pre_2_2 = shared->n_strains;
  shared->dim_new_T_sero_pre_2_3 = shared->k_sero_pre_2;
  shared->dim_new_T_sero_pre_2_4 = shared->n_vacc_classes;
  shared->dim_new_W_D_conf_1 = shared->n_groups;
  shared->dim_new_W_D_conf_2 = shared->n_strains;
  shared->dim_new_W_D_conf_3 = shared->k_W_D;
  shared->dim_new_W_D_conf_4 = shared->n_vacc_classes;
  shared->dim_new_W_D_unconf_1 = shared->n_groups;
  shared->dim_new_W_D_unconf_2 = shared->n_strains;
  shared->dim_new_W_D_unconf_3 = shared->k_W_D;
  shared->dim_new_W_D_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_W_R_conf_1 = shared->n_groups;
  shared->dim_new_W_R_conf_2 = shared->n_strains;
  shared->dim_new_W_R_conf_3 = shared->k_W_R;
  shared->dim_new_W_R_conf_4 = shared->n_vacc_classes;
  shared->dim_new_W_R_unconf_1 = shared->n_groups;
  shared->dim_new_W_R_unconf_2 = shared->n_strains;
  shared->dim_new_W_R_unconf_3 = shared->k_W_R;
  shared->dim_new_W_R_unconf_4 = shared->n_vacc_classes;
  shared->dim_new_hospitalisations_inc_age = shared->n_groups;
  shared->dim_new_hospitalisations_inc_strain = shared->n_strains;
  shared->dim_new_infections_inc_age = shared->n_groups;
  shared->dim_new_infections_inc_strain = shared->n_strains;
  shared->dim_p_C_1 = shared->n_groups;
  shared->dim_p_C_2 = shared->n_strains;
  shared->dim_p_C_3 = shared->n_vacc_classes;
  shared->dim_p_C_step_1 = shared->n_p_C_steps;
  shared->dim_p_C_step_2 = shared->n_groups;
  shared->dim_p_E_next_vacc_class_1 = shared->n_groups;
  shared->dim_p_E_next_vacc_class_2 = shared->n_strains;
  shared->dim_p_E_next_vacc_class_3 = shared->k_E;
  shared->dim_p_E_next_vacc_class_4 = shared->n_vacc_classes;
  shared->dim_p_E_progress = shared->n_strains;
  shared->dim_p_E_vacc_skip_1 = shared->n_groups;
  shared->dim_p_E_vacc_skip_2 = shared->n_strains;
  shared->dim_p_E_vacc_skip_3 = shared->k_E;
  shared->dim_p_E_vacc_skip_4 = shared->n_vacc_classes;
  shared->dim_p_G_D_1 = shared->n_groups;
  shared->dim_p_G_D_2 = shared->n_strains;
  shared->dim_p_G_D_3 = shared->n_vacc_classes;
  shared->dim_p_G_D_progress = shared->n_strains;
  shared->dim_p_G_D_step_1 = shared->n_p_G_D_steps;
  shared->dim_p_G_D_step_2 = shared->n_groups;
  shared->dim_p_H_1 = shared->n_groups;
  shared->dim_p_H_2 = shared->n_strains;
  shared->dim_p_H_3 = shared->n_vacc_classes;
  shared->dim_p_H_D_1 = shared->n_groups;
  shared->dim_p_H_D_2 = shared->n_strains;
  shared->dim_p_H_D_3 = shared->n_vacc_classes;
  shared->dim_p_H_D_progress = shared->n_strains;
  shared->dim_p_H_D_step_1 = shared->n_p_H_D_steps;
  shared->dim_p_H_D_step_2 = shared->n_groups;
  shared->dim_p_H_R_progress = shared->n_strains;
  shared->dim_p_H_step_1 = shared->n_p_H_steps;
  shared->dim_p_H_step_2 = shared->n_groups;
  shared->dim_p_ICU_1 = shared->n_groups;
  shared->dim_p_ICU_2 = shared->n_strains;
  shared->dim_p_ICU_3 = shared->n_vacc_classes;
  shared->dim_p_ICU_D_1 = shared->n_groups;
  shared->dim_p_ICU_D_2 = shared->n_strains;
  shared->dim_p_ICU_D_3 = shared->n_vacc_classes;
  shared->dim_p_ICU_D_progress = shared->n_strains;
  shared->dim_p_ICU_D_step_1 = shared->n_p_ICU_D_steps;
  shared->dim_p_ICU_D_step_2 = shared->n_groups;
  shared->dim_p_ICU_W_D_progress = shared->n_strains;
  shared->dim_p_ICU_W_R_progress = shared->n_strains;
  shared->dim_p_ICU_pre_progress = shared->n_strains;
  shared->dim_p_ICU_step_1 = shared->n_p_ICU_steps;
  shared->dim_p_ICU_step_2 = shared->n_groups;
  shared->dim_p_I_A_next_vacc_class_1 = shared->n_groups;
  shared->dim_p_I_A_next_vacc_class_2 = shared->n_strains;
  shared->dim_p_I_A_next_vacc_class_3 = shared->k_A;
  shared->dim_p_I_A_next_vacc_class_4 = shared->n_vacc_classes;
  shared->dim_p_I_A_progress = shared->n_strains;
  shared->dim_p_I_A_vacc_skip_1 = shared->n_groups;
  shared->dim_p_I_A_vacc_skip_2 = shared->n_strains;
  shared->dim_p_I_A_vacc_skip_3 = shared->k_A;
  shared->dim_p_I_A_vacc_skip_4 = shared->n_vacc_classes;
  shared->dim_p_I_C_1_progress = shared->n_strains;
  shared->dim_p_I_C_2_progress = shared->n_strains;
  shared->dim_p_I_P_next_vacc_class_1 = shared->n_groups;
  shared->dim_p_I_P_next_vacc_class_2 = shared->n_strains;
  shared->dim_p_I_P_next_vacc_class_3 = shared->k_P;
  shared->dim_p_I_P_next_vacc_class_4 = shared->n_vacc_classes;
  shared->dim_p_I_P_progress = shared->n_strains;
  shared->dim_p_I_P_vacc_skip_1 = shared->n_groups;
  shared->dim_p_I_P_vacc_skip_2 = shared->n_strains;
  shared->dim_p_I_P_vacc_skip_3 = shared->k_P;
  shared->dim_p_I_P_vacc_skip_4 = shared->n_vacc_classes;
  shared->dim_p_R5_to_E3_1 = shared->n_groups;
  shared->dim_p_R5_to_E3_2 = shared->n_vacc_classes;
  shared->dim_p_RS_1 = shared->n_groups;
  shared->dim_p_RS_2 = shared->n_strains_R;
  shared->dim_p_RS_3 = shared->n_vacc_classes;
  shared->dim_p_R_1 = shared->n_groups;
  shared->dim_p_R_2 = shared->n_strains;
  shared->dim_p_R_3 = shared->n_vacc_classes;
  shared->dim_p_R_next_vacc_class_1 = shared->n_groups;
  shared->dim_p_R_next_vacc_class_2 = shared->n_strains_R;
  shared->dim_p_R_next_vacc_class_3 = shared->n_vacc_classes;
  shared->dim_p_R_progress_1 = shared->n_groups;
  shared->dim_p_R_progress_2 = shared->n_strains_R;
  shared->dim_p_R_progress_3 = shared->n_vacc_classes;
  shared->dim_p_R_step_1 = shared->n_p_R_steps;
  shared->dim_p_R_step_2 = shared->n_groups;
  shared->dim_p_R_vacc_skip_1 = shared->n_groups;
  shared->dim_p_R_vacc_skip_2 = shared->n_strains_R;
  shared->dim_p_R_vacc_skip_3 = shared->n_vacc_classes;
  shared->dim_p_SE_1 = shared->n_groups;
  shared->dim_p_SE_2 = shared->n_vacc_classes;
  shared->dim_p_S_next_vacc_class_1 = shared->n_groups;
  shared->dim_p_S_next_vacc_class_2 = shared->n_vacc_classes;
  shared->dim_p_S_vacc_skip_1 = shared->n_groups;
  shared->dim_p_S_vacc_skip_2 = shared->n_vacc_classes;
  shared->dim_p_T_PCR_pos_progress = shared->n_strains;
  shared->dim_p_T_PCR_pre_progress = shared->n_strains;
  shared->dim_p_W_D_1 = shared->n_groups;
  shared->dim_p_W_D_2 = shared->n_strains;
  shared->dim_p_W_D_3 = shared->n_vacc_classes;
  shared->dim_p_W_D_progress = shared->n_strains;
  shared->dim_p_W_D_step_1 = shared->n_p_W_D_steps;
  shared->dim_p_W_D_step_2 = shared->n_groups;
  shared->dim_p_W_R_progress = shared->n_strains;
  shared->dim_p_sero_pos_1 = shared->n_groups;
  shared->dim_p_sero_pos_2 = shared->n_groups;
  shared->dim_p_star = shared->n_groups;
  shared->dim_p_star_step_1 = shared->n_p_star_steps;
  shared->dim_p_star_step_2 = shared->n_groups;
  shared->dim_rate_R_progress_1 = shared->n_groups;
  shared->dim_rate_R_progress_2 = shared->n_strains_R;
  shared->dim_rate_R_progress_3 = shared->n_vacc_classes;
  shared->dim_recovered = shared->n_strains_R;
  shared->dim_rel_gamma_A = shared->n_strains;
  shared->dim_rel_gamma_C_1 = shared->n_strains;
  shared->dim_rel_gamma_C_2 = shared->n_strains;
  shared->dim_rel_gamma_E = shared->n_strains;
  shared->dim_rel_gamma_G_D = shared->n_strains;
  shared->dim_rel_gamma_H_D = shared->n_strains;
  shared->dim_rel_gamma_H_R = shared->n_strains;
  shared->dim_rel_gamma_ICU_D = shared->n_strains;
  shared->dim_rel_gamma_ICU_W_D = shared->n_strains;
  shared->dim_rel_gamma_ICU_W_R = shared->n_strains;
  shared->dim_rel_gamma_ICU_pre = shared->n_strains;
  shared->dim_rel_gamma_P = shared->n_strains;
  shared->dim_rel_gamma_PCR_pos = shared->n_strains;
  shared->dim_rel_gamma_PCR_pre = shared->n_strains;
  shared->dim_rel_gamma_W_D = shared->n_strains;
  shared->dim_rel_gamma_W_R = shared->n_strains;
  shared->dim_rel_infectivity_1 = shared->n_groups;
  shared->dim_rel_infectivity_2 = shared->n_strains;
  shared->dim_rel_infectivity_3 = shared->n_vacc_classes;
  shared->dim_rel_p_G_D_1 = shared->n_groups;
  shared->dim_rel_p_G_D_2 = shared->n_strains;
  shared->dim_rel_p_G_D_3 = shared->n_vacc_classes;
  shared->dim_rel_p_H_D_1 = shared->n_groups;
  shared->dim_rel_p_H_D_2 = shared->n_strains;
  shared->dim_rel_p_H_D_3 = shared->n_vacc_classes;
  shared->dim_rel_p_ICU_1 = shared->n_groups;
  shared->dim_rel_p_ICU_2 = shared->n_strains;
  shared->dim_rel_p_ICU_3 = shared->n_vacc_classes;
  shared->dim_rel_p_ICU_D_1 = shared->n_groups;
  shared->dim_rel_p_ICU_D_2 = shared->n_strains;
  shared->dim_rel_p_ICU_D_3 = shared->n_vacc_classes;
  shared->dim_rel_p_R_1 = shared->n_groups;
  shared->dim_rel_p_R_2 = shared->n_strains;
  shared->dim_rel_p_R_3 = shared->n_vacc_classes;
  shared->dim_rel_p_W_D_1 = shared->n_groups;
  shared->dim_rel_p_W_D_2 = shared->n_strains;
  shared->dim_rel_p_W_D_3 = shared->n_vacc_classes;
  shared->dim_rel_p_hosp_if_sympt_1 = shared->n_groups;
  shared->dim_rel_p_hosp_if_sympt_2 = shared->n_strains;
  shared->dim_rel_p_hosp_if_sympt_3 = shared->n_vacc_classes;
  shared->dim_rel_p_sympt_1 = shared->n_groups;
  shared->dim_rel_p_sympt_2 = shared->n_strains;
  shared->dim_rel_p_sympt_3 = shared->n_vacc_classes;
  shared->dim_rel_susceptibility_1 = shared->n_groups;
  shared->dim_rel_susceptibility_2 = shared->n_strains;
  shared->dim_rel_susceptibility_3 = shared->n_vacc_classes;
  shared->dim_s_ij_1 = shared->n_groups;
  shared->dim_s_ij_2 = shared->n_groups;
  shared->dim_s_ij_3 = shared->n_strains;
  shared->dim_strain_rel_p_G_D = shared->n_strains;
  shared->dim_strain_rel_p_H_D = shared->n_strains;
  shared->dim_strain_rel_p_ICU_D = shared->n_strains;
  shared->dim_strain_rel_p_W_D = shared->n_strains;
  shared->dim_strain_rel_p_hosp_if_sympt = shared->n_strains;
  shared->dim_strain_rel_p_icu = shared->n_strains;
  shared->dim_strain_rel_p_sympt = shared->n_strains;
  shared->dim_strain_transmission = shared->n_strains;
  shared->dim_tmp_vaccine_n_candidates_1 = shared->n_groups;
  shared->dim_tmp_vaccine_n_candidates_2 = shared->n_doses;
  shared->dim_tmp_vaccine_probability_1 = shared->n_groups;
  shared->dim_tmp_vaccine_probability_2 = shared->n_vacc_classes;
  shared->dim_total_attempted_doses_1 = shared->n_groups;
  shared->dim_total_attempted_doses_2 = shared->n_doses;
  shared->dim_vacc_skip_attempted_doses_1 = shared->n_groups;
  shared->dim_vacc_skip_attempted_doses_2 = shared->n_doses;
  shared->dim_vacc_skip_dose = shared->n_doses;
  shared->dim_vacc_skip_dose_inverse = shared->n_vacc_classes;
  shared->dim_vacc_skip_dose_weight = shared->n_doses;
  shared->dim_vacc_skip_from = shared->n_vacc_classes;
  shared->dim_vacc_skip_n_candidates_1 = shared->n_groups;
  shared->dim_vacc_skip_n_candidates_2 = shared->n_doses;
  shared->dim_vacc_skip_probability_1 = shared->n_groups;
  shared->dim_vacc_skip_probability_2 = shared->n_vacc_classes;
  shared->dim_vacc_skip_progression_rate_base = shared->n_vacc_classes;
  shared->dim_vacc_skip_to = shared->n_vacc_classes;
  shared->dim_vacc_skipped = shared->n_vacc_classes;
  shared->dim_vaccine_attempted_doses_1 = shared->n_groups;
  shared->dim_vaccine_attempted_doses_2 = shared->n_doses;
  shared->dim_vaccine_missed_doses_1 = shared->n_groups;
  shared->dim_vaccine_missed_doses_2 = shared->n_doses;
  shared->dim_vaccine_n_candidates_1 = shared->n_groups;
  shared->dim_vaccine_n_candidates_2 = shared->n_doses;
  shared->dim_vaccine_probability_1 = shared->n_groups;
  shared->dim_vaccine_probability_2 = shared->n_vacc_classes;
  shared->dim_vaccine_probability_doses_1 = shared->n_groups;
  shared->dim_vaccine_probability_doses_2 = shared->n_doses;
  shared->dim_vaccine_progression_rate_base_1 = shared->n_groups;
  shared->dim_vaccine_progression_rate_base_2 = shared->n_vacc_classes;
  shared->dim_waning_rate = shared->n_groups;
  shared->dt = 1 / (real_type) shared->steps_per_day;
  shared->initial_beta_out = shared->beta_step[0];
  shared->n_real_strains = (shared->n_strains == 4 ? 2 : 1);
  internal.delta_D_hosp = std::vector<real_type>(shared->dim_delta_D_hosp);
  internal.delta_D_non_hosp = std::vector<real_type>(shared->dim_delta_D_non_hosp);
  internal.delta_hospitalisations_age = std::vector<real_type>(shared->dim_delta_hospitalisations_age);
  internal.delta_hospitalisations_strain = std::vector<real_type>(shared->dim_delta_hospitalisations_strain);
  internal.delta_infections_age = std::vector<real_type>(shared->dim_delta_infections_age);
  internal.delta_infections_strain = std::vector<real_type>(shared->dim_delta_infections_strain);
  internal.gamma_A = std::vector<real_type>(shared->dim_gamma_A);
  internal.gamma_C_1 = std::vector<real_type>(shared->dim_gamma_C_1);
  internal.gamma_C_2 = std::vector<real_type>(shared->dim_gamma_C_2);
  internal.gamma_E = std::vector<real_type>(shared->dim_gamma_E);
  internal.gamma_G_D = std::vector<real_type>(shared->dim_gamma_G_D);
  internal.gamma_H_D = std::vector<real_type>(shared->dim_gamma_H_D);
  internal.gamma_H_R = std::vector<real_type>(shared->dim_gamma_H_R);
  internal.gamma_ICU_D = std::vector<real_type>(shared->dim_gamma_ICU_D);
  internal.gamma_ICU_W_D = std::vector<real_type>(shared->dim_gamma_ICU_W_D);
  internal.gamma_ICU_W_R = std::vector<real_type>(shared->dim_gamma_ICU_W_R);
  internal.gamma_ICU_pre = std::vector<real_type>(shared->dim_gamma_ICU_pre);
  internal.gamma_P = std::vector<real_type>(shared->dim_gamma_P);
  internal.gamma_PCR_pos = std::vector<real_type>(shared->dim_gamma_PCR_pos);
  internal.gamma_PCR_pre = std::vector<real_type>(shared->dim_gamma_PCR_pre);
  internal.gamma_W_D = std::vector<real_type>(shared->dim_gamma_W_D);
  internal.gamma_W_R = std::vector<real_type>(shared->dim_gamma_W_R);
  shared->initial_D_non_hosp = std::vector<real_type>(shared->dim_D_non_hosp);
  shared->initial_N_tot = std::vector<real_type>(shared->dim_N_tot);
  shared->initial_cum_admit_by_age = std::vector<real_type>(shared->dim_cum_admit_by_age);
  shared->initial_cum_infections_strain = std::vector<real_type>(shared->dim_cum_infections_strain);
  shared->initial_hfr_age = std::vector<real_type>(shared->dim_hfr_age);
  shared->initial_hospitalisations_inc_age = std::vector<real_type>(shared->dim_hospitalisations_inc_age);
  shared->initial_hospitalisations_inc_strain = std::vector<real_type>(shared->dim_hospitalisations_inc_strain);
  shared->initial_ifr_age = std::vector<real_type>(shared->dim_ifr_age);
  shared->initial_ihr_age = std::vector<real_type>(shared->dim_ihr_age);
  shared->initial_infections_inc_age = std::vector<real_type>(shared->dim_infections_inc_age);
  shared->initial_infections_inc_strain = std::vector<real_type>(shared->dim_infections_inc_strain);
  shared->initial_recovered = std::vector<real_type>(shared->dim_recovered);
  internal.new_hospitalisations_inc_age = std::vector<real_type>(shared->dim_new_hospitalisations_inc_age);
  internal.new_hospitalisations_inc_strain = std::vector<real_type>(shared->dim_new_hospitalisations_inc_strain);
  internal.new_infections_inc_age = std::vector<real_type>(shared->dim_new_infections_inc_age);
  internal.new_infections_inc_strain = std::vector<real_type>(shared->dim_new_infections_inc_strain);
  internal.p_E_progress = std::vector<real_type>(shared->dim_p_E_progress);
  internal.p_G_D_progress = std::vector<real_type>(shared->dim_p_G_D_progress);
  internal.p_H_D_progress = std::vector<real_type>(shared->dim_p_H_D_progress);
  internal.p_H_R_progress = std::vector<real_type>(shared->dim_p_H_R_progress);
  internal.p_ICU_D_progress = std::vector<real_type>(shared->dim_p_ICU_D_progress);
  internal.p_ICU_W_D_progress = std::vector<real_type>(shared->dim_p_ICU_W_D_progress);
  internal.p_ICU_W_R_progress = std::vector<real_type>(shared->dim_p_ICU_W_R_progress);
  internal.p_ICU_pre_progress = std::vector<real_type>(shared->dim_p_ICU_pre_progress);
  internal.p_I_A_progress = std::vector<real_type>(shared->dim_p_I_A_progress);
  internal.p_I_C_1_progress = std::vector<real_type>(shared->dim_p_I_C_1_progress);
  internal.p_I_C_2_progress = std::vector<real_type>(shared->dim_p_I_C_2_progress);
  internal.p_I_P_progress = std::vector<real_type>(shared->dim_p_I_P_progress);
  internal.p_T_PCR_pos_progress = std::vector<real_type>(shared->dim_p_T_PCR_pos_progress);
  internal.p_T_PCR_pre_progress = std::vector<real_type>(shared->dim_p_T_PCR_pre_progress);
  internal.p_W_D_progress = std::vector<real_type>(shared->dim_p_W_D_progress);
  internal.p_W_R_progress = std::vector<real_type>(shared->dim_p_W_R_progress);
  internal.p_star = std::vector<real_type>(shared->dim_p_star);
  shared->dim_D = shared->dim_D_1 * shared->dim_D_2;
  shared->dim_D_hosp = shared->dim_D_hosp_1 * shared->dim_D_hosp_2;
  shared->dim_E = shared->dim_E_1 * shared->dim_E_2 * shared->dim_E_3 * shared->dim_E_4;
  shared->dim_E_12 = shared->dim_E_1 * shared->dim_E_2;
  shared->dim_E_123 = shared->dim_E_1 * shared->dim_E_2 * shared->dim_E_3;
  shared->dim_G_D = shared->dim_G_D_1 * shared->dim_G_D_2 * shared->dim_G_D_3 * shared->dim_G_D_4;
  shared->dim_G_D_12 = shared->dim_G_D_1 * shared->dim_G_D_2;
  shared->dim_G_D_123 = shared->dim_G_D_1 * shared->dim_G_D_2 * shared->dim_G_D_3;
  shared->dim_HFR_disag = shared->dim_HFR_disag_1 * shared->dim_HFR_disag_2 * shared->dim_HFR_disag_3;
  shared->dim_HFR_disag_12 = shared->dim_HFR_disag_1 * shared->dim_HFR_disag_2;
  shared->dim_HFR_disag_weighted_inc = shared->dim_HFR_disag_weighted_inc_1 * shared->dim_HFR_disag_weighted_inc_2 * shared->dim_HFR_disag_weighted_inc_3;
  shared->dim_HFR_disag_weighted_inc_12 = shared->dim_HFR_disag_weighted_inc_1 * shared->dim_HFR_disag_weighted_inc_2;
  shared->dim_H_D_conf = shared->dim_H_D_conf_1 * shared->dim_H_D_conf_2 * shared->dim_H_D_conf_3 * shared->dim_H_D_conf_4;
  shared->dim_H_D_conf_12 = shared->dim_H_D_conf_1 * shared->dim_H_D_conf_2;
  shared->dim_H_D_conf_123 = shared->dim_H_D_conf_1 * shared->dim_H_D_conf_2 * shared->dim_H_D_conf_3;
  shared->dim_H_D_unconf = shared->dim_H_D_unconf_1 * shared->dim_H_D_unconf_2 * shared->dim_H_D_unconf_3 * shared->dim_H_D_unconf_4;
  shared->dim_H_D_unconf_12 = shared->dim_H_D_unconf_1 * shared->dim_H_D_unconf_2;
  shared->dim_H_D_unconf_123 = shared->dim_H_D_unconf_1 * shared->dim_H_D_unconf_2 * shared->dim_H_D_unconf_3;
  shared->dim_H_R_conf = shared->dim_H_R_conf_1 * shared->dim_H_R_conf_2 * shared->dim_H_R_conf_3 * shared->dim_H_R_conf_4;
  shared->dim_H_R_conf_12 = shared->dim_H_R_conf_1 * shared->dim_H_R_conf_2;
  shared->dim_H_R_conf_123 = shared->dim_H_R_conf_1 * shared->dim_H_R_conf_2 * shared->dim_H_R_conf_3;
  shared->dim_H_R_unconf = shared->dim_H_R_unconf_1 * shared->dim_H_R_unconf_2 * shared->dim_H_R_unconf_3 * shared->dim_H_R_unconf_4;
  shared->dim_H_R_unconf_12 = shared->dim_H_R_unconf_1 * shared->dim_H_R_unconf_2;
  shared->dim_H_R_unconf_123 = shared->dim_H_R_unconf_1 * shared->dim_H_R_unconf_2 * shared->dim_H_R_unconf_3;
  shared->dim_ICU_D_conf = shared->dim_ICU_D_conf_1 * shared->dim_ICU_D_conf_2 * shared->dim_ICU_D_conf_3 * shared->dim_ICU_D_conf_4;
  shared->dim_ICU_D_conf_12 = shared->dim_ICU_D_conf_1 * shared->dim_ICU_D_conf_2;
  shared->dim_ICU_D_conf_123 = shared->dim_ICU_D_conf_1 * shared->dim_ICU_D_conf_2 * shared->dim_ICU_D_conf_3;
  shared->dim_ICU_D_unconf = shared->dim_ICU_D_unconf_1 * shared->dim_ICU_D_unconf_2 * shared->dim_ICU_D_unconf_3 * shared->dim_ICU_D_unconf_4;
  shared->dim_ICU_D_unconf_12 = shared->dim_ICU_D_unconf_1 * shared->dim_ICU_D_unconf_2;
  shared->dim_ICU_D_unconf_123 = shared->dim_ICU_D_unconf_1 * shared->dim_ICU_D_unconf_2 * shared->dim_ICU_D_unconf_3;
  shared->dim_ICU_W_D_conf = shared->dim_ICU_W_D_conf_1 * shared->dim_ICU_W_D_conf_2 * shared->dim_ICU_W_D_conf_3 * shared->dim_ICU_W_D_conf_4;
  shared->dim_ICU_W_D_conf_12 = shared->dim_ICU_W_D_conf_1 * shared->dim_ICU_W_D_conf_2;
  shared->dim_ICU_W_D_conf_123 = shared->dim_ICU_W_D_conf_1 * shared->dim_ICU_W_D_conf_2 * shared->dim_ICU_W_D_conf_3;
  shared->dim_ICU_W_D_unconf = shared->dim_ICU_W_D_unconf_1 * shared->dim_ICU_W_D_unconf_2 * shared->dim_ICU_W_D_unconf_3 * shared->dim_ICU_W_D_unconf_4;
  shared->dim_ICU_W_D_unconf_12 = shared->dim_ICU_W_D_unconf_1 * shared->dim_ICU_W_D_unconf_2;
  shared->dim_ICU_W_D_unconf_123 = shared->dim_ICU_W_D_unconf_1 * shared->dim_ICU_W_D_unconf_2 * shared->dim_ICU_W_D_unconf_3;
  shared->dim_ICU_W_R_conf = shared->dim_ICU_W_R_conf_1 * shared->dim_ICU_W_R_conf_2 * shared->dim_ICU_W_R_conf_3 * shared->dim_ICU_W_R_conf_4;
  shared->dim_ICU_W_R_conf_12 = shared->dim_ICU_W_R_conf_1 * shared->dim_ICU_W_R_conf_2;
  shared->dim_ICU_W_R_conf_123 = shared->dim_ICU_W_R_conf_1 * shared->dim_ICU_W_R_conf_2 * shared->dim_ICU_W_R_conf_3;
  shared->dim_ICU_W_R_unconf = shared->dim_ICU_W_R_unconf_1 * shared->dim_ICU_W_R_unconf_2 * shared->dim_ICU_W_R_unconf_3 * shared->dim_ICU_W_R_unconf_4;
  shared->dim_ICU_W_R_unconf_12 = shared->dim_ICU_W_R_unconf_1 * shared->dim_ICU_W_R_unconf_2;
  shared->dim_ICU_W_R_unconf_123 = shared->dim_ICU_W_R_unconf_1 * shared->dim_ICU_W_R_unconf_2 * shared->dim_ICU_W_R_unconf_3;
  shared->dim_ICU_pre_conf = shared->dim_ICU_pre_conf_1 * shared->dim_ICU_pre_conf_2 * shared->dim_ICU_pre_conf_3 * shared->dim_ICU_pre_conf_4;
  shared->dim_ICU_pre_conf_12 = shared->dim_ICU_pre_conf_1 * shared->dim_ICU_pre_conf_2;
  shared->dim_ICU_pre_conf_123 = shared->dim_ICU_pre_conf_1 * shared->dim_ICU_pre_conf_2 * shared->dim_ICU_pre_conf_3;
  shared->dim_ICU_pre_unconf = shared->dim_ICU_pre_unconf_1 * shared->dim_ICU_pre_unconf_2 * shared->dim_ICU_pre_unconf_3 * shared->dim_ICU_pre_unconf_4;
  shared->dim_ICU_pre_unconf_12 = shared->dim_ICU_pre_unconf_1 * shared->dim_ICU_pre_unconf_2;
  shared->dim_ICU_pre_unconf_123 = shared->dim_ICU_pre_unconf_1 * shared->dim_ICU_pre_unconf_2 * shared->dim_ICU_pre_unconf_3;
  shared->dim_IFR_disag = shared->dim_IFR_disag_1 * shared->dim_IFR_disag_2 * shared->dim_IFR_disag_3;
  shared->dim_IFR_disag_12 = shared->dim_IFR_disag_1 * shared->dim_IFR_disag_2;
  shared->dim_IFR_disag_weighted_inc = shared->dim_IFR_disag_weighted_inc_1 * shared->dim_IFR_disag_weighted_inc_2 * shared->dim_IFR_disag_weighted_inc_3;
  shared->dim_IFR_disag_weighted_inc_12 = shared->dim_IFR_disag_weighted_inc_1 * shared->dim_IFR_disag_weighted_inc_2;
  shared->dim_IHR_disag = shared->dim_IHR_disag_1 * shared->dim_IHR_disag_2 * shared->dim_IHR_disag_3;
  shared->dim_IHR_disag_12 = shared->dim_IHR_disag_1 * shared->dim_IHR_disag_2;
  shared->dim_IHR_disag_weighted_inc = shared->dim_IHR_disag_weighted_inc_1 * shared->dim_IHR_disag_weighted_inc_2 * shared->dim_IHR_disag_weighted_inc_3;
  shared->dim_IHR_disag_weighted_inc_12 = shared->dim_IHR_disag_weighted_inc_1 * shared->dim_IHR_disag_weighted_inc_2;
  shared->dim_I_A = shared->dim_I_A_1 * shared->dim_I_A_2 * shared->dim_I_A_3 * shared->dim_I_A_4;
  shared->dim_I_A_12 = shared->dim_I_A_1 * shared->dim_I_A_2;
  shared->dim_I_A_123 = shared->dim_I_A_1 * shared->dim_I_A_2 * shared->dim_I_A_3;
  shared->dim_I_C_1 = shared->dim_I_C_1_1 * shared->dim_I_C_1_2 * shared->dim_I_C_1_3 * shared->dim_I_C_1_4;
  shared->dim_I_C_1_12 = shared->dim_I_C_1_1 * shared->dim_I_C_1_2;
  shared->dim_I_C_1_123 = shared->dim_I_C_1_1 * shared->dim_I_C_1_2 * shared->dim_I_C_1_3;
  shared->dim_I_C_2 = shared->dim_I_C_2_1 * shared->dim_I_C_2_2 * shared->dim_I_C_2_3 * shared->dim_I_C_2_4;
  shared->dim_I_C_2_12 = shared->dim_I_C_2_1 * shared->dim_I_C_2_2;
  shared->dim_I_C_2_123 = shared->dim_I_C_2_1 * shared->dim_I_C_2_2 * shared->dim_I_C_2_3;
  shared->dim_I_P = shared->dim_I_P_1 * shared->dim_I_P_2 * shared->dim_I_P_3 * shared->dim_I_P_4;
  shared->dim_I_P_12 = shared->dim_I_P_1 * shared->dim_I_P_2;
  shared->dim_I_P_123 = shared->dim_I_P_1 * shared->dim_I_P_2 * shared->dim_I_P_3;
  shared->dim_I_weighted = shared->dim_I_weighted_1 * shared->dim_I_weighted_2 * shared->dim_I_weighted_3;
  shared->dim_I_weighted_12 = shared->dim_I_weighted_1 * shared->dim_I_weighted_2;
  shared->dim_I_with_diff_trans = shared->dim_I_with_diff_trans_1 * shared->dim_I_with_diff_trans_2 * shared->dim_I_with_diff_trans_3;
  shared->dim_I_with_diff_trans_12 = shared->dim_I_with_diff_trans_1 * shared->dim_I_with_diff_trans_2;
  shared->dim_R = shared->dim_R_1 * shared->dim_R_2 * shared->dim_R_3;
  shared->dim_R_12 = shared->dim_R_1 * shared->dim_R_2;
  shared->dim_S = shared->dim_S_1 * shared->dim_S_2;
  shared->dim_T_PCR_neg = shared->dim_T_PCR_neg_1 * shared->dim_T_PCR_neg_2 * shared->dim_T_PCR_neg_3;
  shared->dim_T_PCR_neg_12 = shared->dim_T_PCR_neg_1 * shared->dim_T_PCR_neg_2;
  shared->dim_T_PCR_pos = shared->dim_T_PCR_pos_1 * shared->dim_T_PCR_pos_2 * shared->dim_T_PCR_pos_3 * shared->dim_T_PCR_pos_4;
  shared->dim_T_PCR_pos_12 = shared->dim_T_PCR_pos_1 * shared->dim_T_PCR_pos_2;
  shared->dim_T_PCR_pos_123 = shared->dim_T_PCR_pos_1 * shared->dim_T_PCR_pos_2 * shared->dim_T_PCR_pos_3;
  shared->dim_T_PCR_pre = shared->dim_T_PCR_pre_1 * shared->dim_T_PCR_pre_2 * shared->dim_T_PCR_pre_3 * shared->dim_T_PCR_pre_4;
  shared->dim_T_PCR_pre_12 = shared->dim_T_PCR_pre_1 * shared->dim_T_PCR_pre_2;
  shared->dim_T_PCR_pre_123 = shared->dim_T_PCR_pre_1 * shared->dim_T_PCR_pre_2 * shared->dim_T_PCR_pre_3;
  shared->dim_T_sero_neg_1 = shared->dim_T_sero_neg_1_1 * shared->dim_T_sero_neg_1_2 * shared->dim_T_sero_neg_1_3;
  shared->dim_T_sero_neg_1_12 = shared->dim_T_sero_neg_1_1 * shared->dim_T_sero_neg_1_2;
  shared->dim_T_sero_neg_2 = shared->dim_T_sero_neg_2_1 * shared->dim_T_sero_neg_2_2 * shared->dim_T_sero_neg_2_3;
  shared->dim_T_sero_neg_2_12 = shared->dim_T_sero_neg_2_1 * shared->dim_T_sero_neg_2_2;
  shared->dim_T_sero_pos_1 = shared->dim_T_sero_pos_1_1 * shared->dim_T_sero_pos_1_2 * shared->dim_T_sero_pos_1_3 * shared->dim_T_sero_pos_1_4;
  shared->dim_T_sero_pos_1_12 = shared->dim_T_sero_pos_1_1 * shared->dim_T_sero_pos_1_2;
  shared->dim_T_sero_pos_1_123 = shared->dim_T_sero_pos_1_1 * shared->dim_T_sero_pos_1_2 * shared->dim_T_sero_pos_1_3;
  shared->dim_T_sero_pos_2 = shared->dim_T_sero_pos_2_1 * shared->dim_T_sero_pos_2_2 * shared->dim_T_sero_pos_2_3 * shared->dim_T_sero_pos_2_4;
  shared->dim_T_sero_pos_2_12 = shared->dim_T_sero_pos_2_1 * shared->dim_T_sero_pos_2_2;
  shared->dim_T_sero_pos_2_123 = shared->dim_T_sero_pos_2_1 * shared->dim_T_sero_pos_2_2 * shared->dim_T_sero_pos_2_3;
  shared->dim_T_sero_pre_1 = shared->dim_T_sero_pre_1_1 * shared->dim_T_sero_pre_1_2 * shared->dim_T_sero_pre_1_3 * shared->dim_T_sero_pre_1_4;
  shared->dim_T_sero_pre_1_12 = shared->dim_T_sero_pre_1_1 * shared->dim_T_sero_pre_1_2;
  shared->dim_T_sero_pre_1_123 = shared->dim_T_sero_pre_1_1 * shared->dim_T_sero_pre_1_2 * shared->dim_T_sero_pre_1_3;
  shared->dim_T_sero_pre_2 = shared->dim_T_sero_pre_2_1 * shared->dim_T_sero_pre_2_2 * shared->dim_T_sero_pre_2_3 * shared->dim_T_sero_pre_2_4;
  shared->dim_T_sero_pre_2_12 = shared->dim_T_sero_pre_2_1 * shared->dim_T_sero_pre_2_2;
  shared->dim_T_sero_pre_2_123 = shared->dim_T_sero_pre_2_1 * shared->dim_T_sero_pre_2_2 * shared->dim_T_sero_pre_2_3;
  shared->dim_W_D_conf = shared->dim_W_D_conf_1 * shared->dim_W_D_conf_2 * shared->dim_W_D_conf_3 * shared->dim_W_D_conf_4;
  shared->dim_W_D_conf_12 = shared->dim_W_D_conf_1 * shared->dim_W_D_conf_2;
  shared->dim_W_D_conf_123 = shared->dim_W_D_conf_1 * shared->dim_W_D_conf_2 * shared->dim_W_D_conf_3;
  shared->dim_W_D_unconf = shared->dim_W_D_unconf_1 * shared->dim_W_D_unconf_2 * shared->dim_W_D_unconf_3 * shared->dim_W_D_unconf_4;
  shared->dim_W_D_unconf_12 = shared->dim_W_D_unconf_1 * shared->dim_W_D_unconf_2;
  shared->dim_W_D_unconf_123 = shared->dim_W_D_unconf_1 * shared->dim_W_D_unconf_2 * shared->dim_W_D_unconf_3;
  shared->dim_W_R_conf = shared->dim_W_R_conf_1 * shared->dim_W_R_conf_2 * shared->dim_W_R_conf_3 * shared->dim_W_R_conf_4;
  shared->dim_W_R_conf_12 = shared->dim_W_R_conf_1 * shared->dim_W_R_conf_2;
  shared->dim_W_R_conf_123 = shared->dim_W_R_conf_1 * shared->dim_W_R_conf_2 * shared->dim_W_R_conf_3;
  shared->dim_W_R_unconf = shared->dim_W_R_unconf_1 * shared->dim_W_R_unconf_2 * shared->dim_W_R_unconf_3 * shared->dim_W_R_unconf_4;
  shared->dim_W_R_unconf_12 = shared->dim_W_R_unconf_1 * shared->dim_W_R_unconf_2;
  shared->dim_W_R_unconf_123 = shared->dim_W_R_unconf_1 * shared->dim_W_R_unconf_2 * shared->dim_W_R_unconf_3;
  shared->dim_aux_H_D_conf = shared->dim_aux_H_D_conf_1 * shared->dim_aux_H_D_conf_2 * shared->dim_aux_H_D_conf_3 * shared->dim_aux_H_D_conf_4;
  shared->dim_aux_H_D_conf_12 = shared->dim_aux_H_D_conf_1 * shared->dim_aux_H_D_conf_2;
  shared->dim_aux_H_D_conf_123 = shared->dim_aux_H_D_conf_1 * shared->dim_aux_H_D_conf_2 * shared->dim_aux_H_D_conf_3;
  shared->dim_aux_H_D_unconf = shared->dim_aux_H_D_unconf_1 * shared->dim_aux_H_D_unconf_2 * shared->dim_aux_H_D_unconf_3 * shared->dim_aux_H_D_unconf_4;
  shared->dim_aux_H_D_unconf_12 = shared->dim_aux_H_D_unconf_1 * shared->dim_aux_H_D_unconf_2;
  shared->dim_aux_H_D_unconf_123 = shared->dim_aux_H_D_unconf_1 * shared->dim_aux_H_D_unconf_2 * shared->dim_aux_H_D_unconf_3;
  shared->dim_aux_H_R_conf = shared->dim_aux_H_R_conf_1 * shared->dim_aux_H_R_conf_2 * shared->dim_aux_H_R_conf_3 * shared->dim_aux_H_R_conf_4;
  shared->dim_aux_H_R_conf_12 = shared->dim_aux_H_R_conf_1 * shared->dim_aux_H_R_conf_2;
  shared->dim_aux_H_R_conf_123 = shared->dim_aux_H_R_conf_1 * shared->dim_aux_H_R_conf_2 * shared->dim_aux_H_R_conf_3;
  shared->dim_aux_H_R_unconf = shared->dim_aux_H_R_unconf_1 * shared->dim_aux_H_R_unconf_2 * shared->dim_aux_H_R_unconf_3 * shared->dim_aux_H_R_unconf_4;
  shared->dim_aux_H_R_unconf_12 = shared->dim_aux_H_R_unconf_1 * shared->dim_aux_H_R_unconf_2;
  shared->dim_aux_H_R_unconf_123 = shared->dim_aux_H_R_unconf_1 * shared->dim_aux_H_R_unconf_2 * shared->dim_aux_H_R_unconf_3;
  shared->dim_aux_ICU_D_conf = shared->dim_aux_ICU_D_conf_1 * shared->dim_aux_ICU_D_conf_2 * shared->dim_aux_ICU_D_conf_3 * shared->dim_aux_ICU_D_conf_4;
  shared->dim_aux_ICU_D_conf_12 = shared->dim_aux_ICU_D_conf_1 * shared->dim_aux_ICU_D_conf_2;
  shared->dim_aux_ICU_D_conf_123 = shared->dim_aux_ICU_D_conf_1 * shared->dim_aux_ICU_D_conf_2 * shared->dim_aux_ICU_D_conf_3;
  shared->dim_aux_ICU_D_unconf = shared->dim_aux_ICU_D_unconf_1 * shared->dim_aux_ICU_D_unconf_2 * shared->dim_aux_ICU_D_unconf_3 * shared->dim_aux_ICU_D_unconf_4;
  shared->dim_aux_ICU_D_unconf_12 = shared->dim_aux_ICU_D_unconf_1 * shared->dim_aux_ICU_D_unconf_2;
  shared->dim_aux_ICU_D_unconf_123 = shared->dim_aux_ICU_D_unconf_1 * shared->dim_aux_ICU_D_unconf_2 * shared->dim_aux_ICU_D_unconf_3;
  shared->dim_aux_ICU_W_D_conf = shared->dim_aux_ICU_W_D_conf_1 * shared->dim_aux_ICU_W_D_conf_2 * shared->dim_aux_ICU_W_D_conf_3 * shared->dim_aux_ICU_W_D_conf_4;
  shared->dim_aux_ICU_W_D_conf_12 = shared->dim_aux_ICU_W_D_conf_1 * shared->dim_aux_ICU_W_D_conf_2;
  shared->dim_aux_ICU_W_D_conf_123 = shared->dim_aux_ICU_W_D_conf_1 * shared->dim_aux_ICU_W_D_conf_2 * shared->dim_aux_ICU_W_D_conf_3;
  shared->dim_aux_ICU_W_D_unconf = shared->dim_aux_ICU_W_D_unconf_1 * shared->dim_aux_ICU_W_D_unconf_2 * shared->dim_aux_ICU_W_D_unconf_3 * shared->dim_aux_ICU_W_D_unconf_4;
  shared->dim_aux_ICU_W_D_unconf_12 = shared->dim_aux_ICU_W_D_unconf_1 * shared->dim_aux_ICU_W_D_unconf_2;
  shared->dim_aux_ICU_W_D_unconf_123 = shared->dim_aux_ICU_W_D_unconf_1 * shared->dim_aux_ICU_W_D_unconf_2 * shared->dim_aux_ICU_W_D_unconf_3;
  shared->dim_aux_ICU_W_R_conf = shared->dim_aux_ICU_W_R_conf_1 * shared->dim_aux_ICU_W_R_conf_2 * shared->dim_aux_ICU_W_R_conf_3 * shared->dim_aux_ICU_W_R_conf_4;
  shared->dim_aux_ICU_W_R_conf_12 = shared->dim_aux_ICU_W_R_conf_1 * shared->dim_aux_ICU_W_R_conf_2;
  shared->dim_aux_ICU_W_R_conf_123 = shared->dim_aux_ICU_W_R_conf_1 * shared->dim_aux_ICU_W_R_conf_2 * shared->dim_aux_ICU_W_R_conf_3;
  shared->dim_aux_ICU_W_R_unconf = shared->dim_aux_ICU_W_R_unconf_1 * shared->dim_aux_ICU_W_R_unconf_2 * shared->dim_aux_ICU_W_R_unconf_3 * shared->dim_aux_ICU_W_R_unconf_4;
  shared->dim_aux_ICU_W_R_unconf_12 = shared->dim_aux_ICU_W_R_unconf_1 * shared->dim_aux_ICU_W_R_unconf_2;
  shared->dim_aux_ICU_W_R_unconf_123 = shared->dim_aux_ICU_W_R_unconf_1 * shared->dim_aux_ICU_W_R_unconf_2 * shared->dim_aux_ICU_W_R_unconf_3;
  shared->dim_aux_ICU_pre_conf = shared->dim_aux_ICU_pre_conf_1 * shared->dim_aux_ICU_pre_conf_2 * shared->dim_aux_ICU_pre_conf_3 * shared->dim_aux_ICU_pre_conf_4;
  shared->dim_aux_ICU_pre_conf_12 = shared->dim_aux_ICU_pre_conf_1 * shared->dim_aux_ICU_pre_conf_2;
  shared->dim_aux_ICU_pre_conf_123 = shared->dim_aux_ICU_pre_conf_1 * shared->dim_aux_ICU_pre_conf_2 * shared->dim_aux_ICU_pre_conf_3;
  shared->dim_aux_ICU_pre_unconf = shared->dim_aux_ICU_pre_unconf_1 * shared->dim_aux_ICU_pre_unconf_2 * shared->dim_aux_ICU_pre_unconf_3 * shared->dim_aux_ICU_pre_unconf_4;
  shared->dim_aux_ICU_pre_unconf_12 = shared->dim_aux_ICU_pre_unconf_1 * shared->dim_aux_ICU_pre_unconf_2;
  shared->dim_aux_ICU_pre_unconf_123 = shared->dim_aux_ICU_pre_unconf_1 * shared->dim_aux_ICU_pre_unconf_2 * shared->dim_aux_ICU_pre_unconf_3;
  shared->dim_aux_W_D_conf = shared->dim_aux_W_D_conf_1 * shared->dim_aux_W_D_conf_2 * shared->dim_aux_W_D_conf_3 * shared->dim_aux_W_D_conf_4;
  shared->dim_aux_W_D_conf_12 = shared->dim_aux_W_D_conf_1 * shared->dim_aux_W_D_conf_2;
  shared->dim_aux_W_D_conf_123 = shared->dim_aux_W_D_conf_1 * shared->dim_aux_W_D_conf_2 * shared->dim_aux_W_D_conf_3;
  shared->dim_aux_W_D_unconf = shared->dim_aux_W_D_unconf_1 * shared->dim_aux_W_D_unconf_2 * shared->dim_aux_W_D_unconf_3 * shared->dim_aux_W_D_unconf_4;
  shared->dim_aux_W_D_unconf_12 = shared->dim_aux_W_D_unconf_1 * shared->dim_aux_W_D_unconf_2;
  shared->dim_aux_W_D_unconf_123 = shared->dim_aux_W_D_unconf_1 * shared->dim_aux_W_D_unconf_2 * shared->dim_aux_W_D_unconf_3;
  shared->dim_aux_W_R_conf = shared->dim_aux_W_R_conf_1 * shared->dim_aux_W_R_conf_2 * shared->dim_aux_W_R_conf_3 * shared->dim_aux_W_R_conf_4;
  shared->dim_aux_W_R_conf_12 = shared->dim_aux_W_R_conf_1 * shared->dim_aux_W_R_conf_2;
  shared->dim_aux_W_R_conf_123 = shared->dim_aux_W_R_conf_1 * shared->dim_aux_W_R_conf_2 * shared->dim_aux_W_R_conf_3;
  shared->dim_aux_W_R_unconf = shared->dim_aux_W_R_unconf_1 * shared->dim_aux_W_R_unconf_2 * shared->dim_aux_W_R_unconf_3 * shared->dim_aux_W_R_unconf_4;
  shared->dim_aux_W_R_unconf_12 = shared->dim_aux_W_R_unconf_1 * shared->dim_aux_W_R_unconf_2;
  shared->dim_aux_W_R_unconf_123 = shared->dim_aux_W_R_unconf_1 * shared->dim_aux_W_R_unconf_2 * shared->dim_aux_W_R_unconf_3;
  shared->dim_cross_immunity = shared->n_real_strains;
  shared->dim_cum_infections_disag = shared->dim_cum_infections_disag_1 * shared->dim_cum_infections_disag_2;
  shared->dim_cum_n_E_vacc_skip = shared->dim_cum_n_E_vacc_skip_1 * shared->dim_cum_n_E_vacc_skip_2;
  shared->dim_cum_n_E_vaccinated = shared->dim_cum_n_E_vaccinated_1 * shared->dim_cum_n_E_vaccinated_2;
  shared->dim_cum_n_I_A_vacc_skip = shared->dim_cum_n_I_A_vacc_skip_1 * shared->dim_cum_n_I_A_vacc_skip_2;
  shared->dim_cum_n_I_A_vaccinated = shared->dim_cum_n_I_A_vaccinated_1 * shared->dim_cum_n_I_A_vaccinated_2;
  shared->dim_cum_n_I_P_vacc_skip = shared->dim_cum_n_I_P_vacc_skip_1 * shared->dim_cum_n_I_P_vacc_skip_2;
  shared->dim_cum_n_I_P_vaccinated = shared->dim_cum_n_I_P_vaccinated_1 * shared->dim_cum_n_I_P_vaccinated_2;
  shared->dim_cum_n_R_vacc_skip = shared->dim_cum_n_R_vacc_skip_1 * shared->dim_cum_n_R_vacc_skip_2;
  shared->dim_cum_n_R_vaccinated = shared->dim_cum_n_R_vaccinated_1 * shared->dim_cum_n_R_vaccinated_2;
  shared->dim_cum_n_S_vacc_skip = shared->dim_cum_n_S_vacc_skip_1 * shared->dim_cum_n_S_vacc_skip_2;
  shared->dim_cum_n_S_vaccinated = shared->dim_cum_n_S_vaccinated_1 * shared->dim_cum_n_S_vaccinated_2;
  shared->dim_cum_n_vacc_skip = shared->dim_cum_n_vacc_skip_1 * shared->dim_cum_n_vacc_skip_2;
  shared->dim_cum_n_vaccinated = shared->dim_cum_n_vaccinated_1 * shared->dim_cum_n_vaccinated_2;
  shared->dim_delta_D_hosp_disag = shared->dim_delta_D_hosp_disag_1 * shared->dim_delta_D_hosp_disag_2;
  shared->dim_delta_D_non_hosp_disag = shared->dim_delta_D_non_hosp_disag_1 * shared->dim_delta_D_non_hosp_disag_2;
  shared->dim_delta_diagnoses_admitted = shared->dim_delta_diagnoses_admitted_1 * shared->dim_delta_diagnoses_admitted_2;
  shared->dim_delta_infections = shared->dim_delta_infections_1 * shared->dim_delta_infections_2 * shared->dim_delta_infections_3;
  shared->dim_delta_infections_12 = shared->dim_delta_infections_1 * shared->dim_delta_infections_2;
  shared->dim_diagnoses_admitted = shared->dim_diagnoses_admitted_1 * shared->dim_diagnoses_admitted_2;
  shared->dim_eff_sus_R_1 = shared->n_groups;
  shared->dim_eff_sus_R_2 = shared->n_real_strains;
  shared->dim_eff_sus_R_3 = shared->n_vacc_classes;
  shared->dim_eff_sus_S_1 = shared->n_groups;
  shared->dim_eff_sus_S_2 = shared->n_real_strains;
  shared->dim_eff_sus_S_3 = shared->n_vacc_classes;
  shared->dim_effective_susceptible = shared->n_real_strains;
  shared->dim_hfr_strain = shared->n_real_strains;
  shared->dim_ifr_strain = shared->n_real_strains;
  shared->dim_ihr_strain = shared->n_real_strains;
  shared->dim_lambda_1 = shared->n_groups;
  shared->dim_lambda_2 = shared->n_real_strains;
  shared->dim_lambda_susc_1 = shared->n_groups;
  shared->dim_lambda_susc_2 = shared->n_real_strains;
  shared->dim_lambda_susc_3 = shared->n_vacc_classes;
  shared->dim_m = shared->dim_m_1 * shared->dim_m_2;
  shared->dim_n_EI_A = shared->dim_n_EI_A_1 * shared->dim_n_EI_A_2 * shared->dim_n_EI_A_3;
  shared->dim_n_EI_A_12 = shared->dim_n_EI_A_1 * shared->dim_n_EI_A_2;
  shared->dim_n_EI_P = shared->dim_n_EI_P_1 * shared->dim_n_EI_P_2 * shared->dim_n_EI_P_3;
  shared->dim_n_EI_P_12 = shared->dim_n_EI_P_1 * shared->dim_n_EI_P_2;
  shared->dim_n_E_next_vacc_class = shared->dim_n_E_next_vacc_class_1 * shared->dim_n_E_next_vacc_class_2 * shared->dim_n_E_next_vacc_class_3 * shared->dim_n_E_next_vacc_class_4;
  shared->dim_n_E_next_vacc_class_12 = shared->dim_n_E_next_vacc_class_1 * shared->dim_n_E_next_vacc_class_2;
  shared->dim_n_E_next_vacc_class_123 = shared->dim_n_E_next_vacc_class_1 * shared->dim_n_E_next_vacc_class_2 * shared->dim_n_E_next_vacc_class_3;
  shared->dim_n_E_progress = shared->dim_n_E_progress_1 * shared->dim_n_E_progress_2 * shared->dim_n_E_progress_3 * shared->dim_n_E_progress_4;
  shared->dim_n_E_progress_12 = shared->dim_n_E_progress_1 * shared->dim_n_E_progress_2;
  shared->dim_n_E_progress_123 = shared->dim_n_E_progress_1 * shared->dim_n_E_progress_2 * shared->dim_n_E_progress_3;
  shared->dim_n_E_vacc_skip = shared->dim_n_E_vacc_skip_1 * shared->dim_n_E_vacc_skip_2 * shared->dim_n_E_vacc_skip_3 * shared->dim_n_E_vacc_skip_4;
  shared->dim_n_E_vacc_skip_12 = shared->dim_n_E_vacc_skip_1 * shared->dim_n_E_vacc_skip_2;
  shared->dim_n_E_vacc_skip_123 = shared->dim_n_E_vacc_skip_1 * shared->dim_n_E_vacc_skip_2 * shared->dim_n_E_vacc_skip_3;
  shared->dim_n_E_vaccinated = shared->dim_n_E_vaccinated_1 * shared->dim_n_E_vaccinated_2;
  shared->dim_n_G_D_progress = shared->dim_n_G_D_progress_1 * shared->dim_n_G_D_progress_2 * shared->dim_n_G_D_progress_3 * shared->dim_n_G_D_progress_4;
  shared->dim_n_G_D_progress_12 = shared->dim_n_G_D_progress_1 * shared->dim_n_G_D_progress_2;
  shared->dim_n_G_D_progress_123 = shared->dim_n_G_D_progress_1 * shared->dim_n_G_D_progress_2 * shared->dim_n_G_D_progress_3;
  shared->dim_n_H_D_conf_progress = shared->dim_n_H_D_conf_progress_1 * shared->dim_n_H_D_conf_progress_2 * shared->dim_n_H_D_conf_progress_3 * shared->dim_n_H_D_conf_progress_4;
  shared->dim_n_H_D_conf_progress_12 = shared->dim_n_H_D_conf_progress_1 * shared->dim_n_H_D_conf_progress_2;
  shared->dim_n_H_D_conf_progress_123 = shared->dim_n_H_D_conf_progress_1 * shared->dim_n_H_D_conf_progress_2 * shared->dim_n_H_D_conf_progress_3;
  shared->dim_n_H_D_unconf_progress = shared->dim_n_H_D_unconf_progress_1 * shared->dim_n_H_D_unconf_progress_2 * shared->dim_n_H_D_unconf_progress_3 * shared->dim_n_H_D_unconf_progress_4;
  shared->dim_n_H_D_unconf_progress_12 = shared->dim_n_H_D_unconf_progress_1 * shared->dim_n_H_D_unconf_progress_2;
  shared->dim_n_H_D_unconf_progress_123 = shared->dim_n_H_D_unconf_progress_1 * shared->dim_n_H_D_unconf_progress_2 * shared->dim_n_H_D_unconf_progress_3;
  shared->dim_n_H_D_unconf_to_conf = shared->dim_n_H_D_unconf_to_conf_1 * shared->dim_n_H_D_unconf_to_conf_2 * shared->dim_n_H_D_unconf_to_conf_3 * shared->dim_n_H_D_unconf_to_conf_4;
  shared->dim_n_H_D_unconf_to_conf_12 = shared->dim_n_H_D_unconf_to_conf_1 * shared->dim_n_H_D_unconf_to_conf_2;
  shared->dim_n_H_D_unconf_to_conf_123 = shared->dim_n_H_D_unconf_to_conf_1 * shared->dim_n_H_D_unconf_to_conf_2 * shared->dim_n_H_D_unconf_to_conf_3;
  shared->dim_n_H_R_conf_progress = shared->dim_n_H_R_conf_progress_1 * shared->dim_n_H_R_conf_progress_2 * shared->dim_n_H_R_conf_progress_3 * shared->dim_n_H_R_conf_progress_4;
  shared->dim_n_H_R_conf_progress_12 = shared->dim_n_H_R_conf_progress_1 * shared->dim_n_H_R_conf_progress_2;
  shared->dim_n_H_R_conf_progress_123 = shared->dim_n_H_R_conf_progress_1 * shared->dim_n_H_R_conf_progress_2 * shared->dim_n_H_R_conf_progress_3;
  shared->dim_n_H_R_unconf_progress = shared->dim_n_H_R_unconf_progress_1 * shared->dim_n_H_R_unconf_progress_2 * shared->dim_n_H_R_unconf_progress_3 * shared->dim_n_H_R_unconf_progress_4;
  shared->dim_n_H_R_unconf_progress_12 = shared->dim_n_H_R_unconf_progress_1 * shared->dim_n_H_R_unconf_progress_2;
  shared->dim_n_H_R_unconf_progress_123 = shared->dim_n_H_R_unconf_progress_1 * shared->dim_n_H_R_unconf_progress_2 * shared->dim_n_H_R_unconf_progress_3;
  shared->dim_n_H_R_unconf_to_conf = shared->dim_n_H_R_unconf_to_conf_1 * shared->dim_n_H_R_unconf_to_conf_2 * shared->dim_n_H_R_unconf_to_conf_3 * shared->dim_n_H_R_unconf_to_conf_4;
  shared->dim_n_H_R_unconf_to_conf_12 = shared->dim_n_H_R_unconf_to_conf_1 * shared->dim_n_H_R_unconf_to_conf_2;
  shared->dim_n_H_R_unconf_to_conf_123 = shared->dim_n_H_R_unconf_to_conf_1 * shared->dim_n_H_R_unconf_to_conf_2 * shared->dim_n_H_R_unconf_to_conf_3;
  shared->dim_n_ICU_D_conf_progress = shared->dim_n_ICU_D_conf_progress_1 * shared->dim_n_ICU_D_conf_progress_2 * shared->dim_n_ICU_D_conf_progress_3 * shared->dim_n_ICU_D_conf_progress_4;
  shared->dim_n_ICU_D_conf_progress_12 = shared->dim_n_ICU_D_conf_progress_1 * shared->dim_n_ICU_D_conf_progress_2;
  shared->dim_n_ICU_D_conf_progress_123 = shared->dim_n_ICU_D_conf_progress_1 * shared->dim_n_ICU_D_conf_progress_2 * shared->dim_n_ICU_D_conf_progress_3;
  shared->dim_n_ICU_D_unconf_progress = shared->dim_n_ICU_D_unconf_progress_1 * shared->dim_n_ICU_D_unconf_progress_2 * shared->dim_n_ICU_D_unconf_progress_3 * shared->dim_n_ICU_D_unconf_progress_4;
  shared->dim_n_ICU_D_unconf_progress_12 = shared->dim_n_ICU_D_unconf_progress_1 * shared->dim_n_ICU_D_unconf_progress_2;
  shared->dim_n_ICU_D_unconf_progress_123 = shared->dim_n_ICU_D_unconf_progress_1 * shared->dim_n_ICU_D_unconf_progress_2 * shared->dim_n_ICU_D_unconf_progress_3;
  shared->dim_n_ICU_D_unconf_to_conf = shared->dim_n_ICU_D_unconf_to_conf_1 * shared->dim_n_ICU_D_unconf_to_conf_2 * shared->dim_n_ICU_D_unconf_to_conf_3 * shared->dim_n_ICU_D_unconf_to_conf_4;
  shared->dim_n_ICU_D_unconf_to_conf_12 = shared->dim_n_ICU_D_unconf_to_conf_1 * shared->dim_n_ICU_D_unconf_to_conf_2;
  shared->dim_n_ICU_D_unconf_to_conf_123 = shared->dim_n_ICU_D_unconf_to_conf_1 * shared->dim_n_ICU_D_unconf_to_conf_2 * shared->dim_n_ICU_D_unconf_to_conf_3;
  shared->dim_n_ICU_W_D_conf_progress = shared->dim_n_ICU_W_D_conf_progress_1 * shared->dim_n_ICU_W_D_conf_progress_2 * shared->dim_n_ICU_W_D_conf_progress_3 * shared->dim_n_ICU_W_D_conf_progress_4;
  shared->dim_n_ICU_W_D_conf_progress_12 = shared->dim_n_ICU_W_D_conf_progress_1 * shared->dim_n_ICU_W_D_conf_progress_2;
  shared->dim_n_ICU_W_D_conf_progress_123 = shared->dim_n_ICU_W_D_conf_progress_1 * shared->dim_n_ICU_W_D_conf_progress_2 * shared->dim_n_ICU_W_D_conf_progress_3;
  shared->dim_n_ICU_W_D_unconf_progress = shared->dim_n_ICU_W_D_unconf_progress_1 * shared->dim_n_ICU_W_D_unconf_progress_2 * shared->dim_n_ICU_W_D_unconf_progress_3 * shared->dim_n_ICU_W_D_unconf_progress_4;
  shared->dim_n_ICU_W_D_unconf_progress_12 = shared->dim_n_ICU_W_D_unconf_progress_1 * shared->dim_n_ICU_W_D_unconf_progress_2;
  shared->dim_n_ICU_W_D_unconf_progress_123 = shared->dim_n_ICU_W_D_unconf_progress_1 * shared->dim_n_ICU_W_D_unconf_progress_2 * shared->dim_n_ICU_W_D_unconf_progress_3;
  shared->dim_n_ICU_W_D_unconf_to_conf = shared->dim_n_ICU_W_D_unconf_to_conf_1 * shared->dim_n_ICU_W_D_unconf_to_conf_2 * shared->dim_n_ICU_W_D_unconf_to_conf_3 * shared->dim_n_ICU_W_D_unconf_to_conf_4;
  shared->dim_n_ICU_W_D_unconf_to_conf_12 = shared->dim_n_ICU_W_D_unconf_to_conf_1 * shared->dim_n_ICU_W_D_unconf_to_conf_2;
  shared->dim_n_ICU_W_D_unconf_to_conf_123 = shared->dim_n_ICU_W_D_unconf_to_conf_1 * shared->dim_n_ICU_W_D_unconf_to_conf_2 * shared->dim_n_ICU_W_D_unconf_to_conf_3;
  shared->dim_n_ICU_W_R_conf_progress = shared->dim_n_ICU_W_R_conf_progress_1 * shared->dim_n_ICU_W_R_conf_progress_2 * shared->dim_n_ICU_W_R_conf_progress_3 * shared->dim_n_ICU_W_R_conf_progress_4;
  shared->dim_n_ICU_W_R_conf_progress_12 = shared->dim_n_ICU_W_R_conf_progress_1 * shared->dim_n_ICU_W_R_conf_progress_2;
  shared->dim_n_ICU_W_R_conf_progress_123 = shared->dim_n_ICU_W_R_conf_progress_1 * shared->dim_n_ICU_W_R_conf_progress_2 * shared->dim_n_ICU_W_R_conf_progress_3;
  shared->dim_n_ICU_W_R_unconf_progress = shared->dim_n_ICU_W_R_unconf_progress_1 * shared->dim_n_ICU_W_R_unconf_progress_2 * shared->dim_n_ICU_W_R_unconf_progress_3 * shared->dim_n_ICU_W_R_unconf_progress_4;
  shared->dim_n_ICU_W_R_unconf_progress_12 = shared->dim_n_ICU_W_R_unconf_progress_1 * shared->dim_n_ICU_W_R_unconf_progress_2;
  shared->dim_n_ICU_W_R_unconf_progress_123 = shared->dim_n_ICU_W_R_unconf_progress_1 * shared->dim_n_ICU_W_R_unconf_progress_2 * shared->dim_n_ICU_W_R_unconf_progress_3;
  shared->dim_n_ICU_W_R_unconf_to_conf = shared->dim_n_ICU_W_R_unconf_to_conf_1 * shared->dim_n_ICU_W_R_unconf_to_conf_2 * shared->dim_n_ICU_W_R_unconf_to_conf_3 * shared->dim_n_ICU_W_R_unconf_to_conf_4;
  shared->dim_n_ICU_W_R_unconf_to_conf_12 = shared->dim_n_ICU_W_R_unconf_to_conf_1 * shared->dim_n_ICU_W_R_unconf_to_conf_2;
  shared->dim_n_ICU_W_R_unconf_to_conf_123 = shared->dim_n_ICU_W_R_unconf_to_conf_1 * shared->dim_n_ICU_W_R_unconf_to_conf_2 * shared->dim_n_ICU_W_R_unconf_to_conf_3;
  shared->dim_n_ICU_pre_conf_progress = shared->dim_n_ICU_pre_conf_progress_1 * shared->dim_n_ICU_pre_conf_progress_2 * shared->dim_n_ICU_pre_conf_progress_3 * shared->dim_n_ICU_pre_conf_progress_4;
  shared->dim_n_ICU_pre_conf_progress_12 = shared->dim_n_ICU_pre_conf_progress_1 * shared->dim_n_ICU_pre_conf_progress_2;
  shared->dim_n_ICU_pre_conf_progress_123 = shared->dim_n_ICU_pre_conf_progress_1 * shared->dim_n_ICU_pre_conf_progress_2 * shared->dim_n_ICU_pre_conf_progress_3;
  shared->dim_n_ICU_pre_conf_to_ICU_D_conf = shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1 * shared->dim_n_ICU_pre_conf_to_ICU_D_conf_2 * shared->dim_n_ICU_pre_conf_to_ICU_D_conf_3;
  shared->dim_n_ICU_pre_conf_to_ICU_D_conf_12 = shared->dim_n_ICU_pre_conf_to_ICU_D_conf_1 * shared->dim_n_ICU_pre_conf_to_ICU_D_conf_2;
  shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf = shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_2 * shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_3;
  shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_12 = shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_1 * shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf_2;
  shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf = shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_2 * shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_3;
  shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_12 = shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_1 * shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf_2;
  shared->dim_n_ICU_pre_unconf_progress = shared->dim_n_ICU_pre_unconf_progress_1 * shared->dim_n_ICU_pre_unconf_progress_2 * shared->dim_n_ICU_pre_unconf_progress_3 * shared->dim_n_ICU_pre_unconf_progress_4;
  shared->dim_n_ICU_pre_unconf_progress_12 = shared->dim_n_ICU_pre_unconf_progress_1 * shared->dim_n_ICU_pre_unconf_progress_2;
  shared->dim_n_ICU_pre_unconf_progress_123 = shared->dim_n_ICU_pre_unconf_progress_1 * shared->dim_n_ICU_pre_unconf_progress_2 * shared->dim_n_ICU_pre_unconf_progress_3;
  shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf = shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_2 * shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_3;
  shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_12 = shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_1 * shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf_2;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf = shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2 * shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_3;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_12 = shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_1 * shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf_2;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf = shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2 * shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_3;
  shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_12 = shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_1 * shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf_2;
  shared->dim_n_ICU_pre_unconf_to_conf = shared->dim_n_ICU_pre_unconf_to_conf_1 * shared->dim_n_ICU_pre_unconf_to_conf_2 * shared->dim_n_ICU_pre_unconf_to_conf_3 * shared->dim_n_ICU_pre_unconf_to_conf_4;
  shared->dim_n_ICU_pre_unconf_to_conf_12 = shared->dim_n_ICU_pre_unconf_to_conf_1 * shared->dim_n_ICU_pre_unconf_to_conf_2;
  shared->dim_n_ICU_pre_unconf_to_conf_123 = shared->dim_n_ICU_pre_unconf_to_conf_1 * shared->dim_n_ICU_pre_unconf_to_conf_2 * shared->dim_n_ICU_pre_unconf_to_conf_3;
  shared->dim_n_I_A_next_vacc_class = shared->dim_n_I_A_next_vacc_class_1 * shared->dim_n_I_A_next_vacc_class_2 * shared->dim_n_I_A_next_vacc_class_3 * shared->dim_n_I_A_next_vacc_class_4;
  shared->dim_n_I_A_next_vacc_class_12 = shared->dim_n_I_A_next_vacc_class_1 * shared->dim_n_I_A_next_vacc_class_2;
  shared->dim_n_I_A_next_vacc_class_123 = shared->dim_n_I_A_next_vacc_class_1 * shared->dim_n_I_A_next_vacc_class_2 * shared->dim_n_I_A_next_vacc_class_3;
  shared->dim_n_I_A_progress = shared->dim_n_I_A_progress_1 * shared->dim_n_I_A_progress_2 * shared->dim_n_I_A_progress_3 * shared->dim_n_I_A_progress_4;
  shared->dim_n_I_A_progress_12 = shared->dim_n_I_A_progress_1 * shared->dim_n_I_A_progress_2;
  shared->dim_n_I_A_progress_123 = shared->dim_n_I_A_progress_1 * shared->dim_n_I_A_progress_2 * shared->dim_n_I_A_progress_3;
  shared->dim_n_I_A_vacc_skip = shared->dim_n_I_A_vacc_skip_1 * shared->dim_n_I_A_vacc_skip_2 * shared->dim_n_I_A_vacc_skip_3 * shared->dim_n_I_A_vacc_skip_4;
  shared->dim_n_I_A_vacc_skip_12 = shared->dim_n_I_A_vacc_skip_1 * shared->dim_n_I_A_vacc_skip_2;
  shared->dim_n_I_A_vacc_skip_123 = shared->dim_n_I_A_vacc_skip_1 * shared->dim_n_I_A_vacc_skip_2 * shared->dim_n_I_A_vacc_skip_3;
  shared->dim_n_I_A_vaccinated = shared->dim_n_I_A_vaccinated_1 * shared->dim_n_I_A_vaccinated_2;
  shared->dim_n_I_C_1_progress = shared->dim_n_I_C_1_progress_1 * shared->dim_n_I_C_1_progress_2 * shared->dim_n_I_C_1_progress_3 * shared->dim_n_I_C_1_progress_4;
  shared->dim_n_I_C_1_progress_12 = shared->dim_n_I_C_1_progress_1 * shared->dim_n_I_C_1_progress_2;
  shared->dim_n_I_C_1_progress_123 = shared->dim_n_I_C_1_progress_1 * shared->dim_n_I_C_1_progress_2 * shared->dim_n_I_C_1_progress_3;
  shared->dim_n_I_C_2_progress = shared->dim_n_I_C_2_progress_1 * shared->dim_n_I_C_2_progress_2 * shared->dim_n_I_C_2_progress_3 * shared->dim_n_I_C_2_progress_4;
  shared->dim_n_I_C_2_progress_12 = shared->dim_n_I_C_2_progress_1 * shared->dim_n_I_C_2_progress_2;
  shared->dim_n_I_C_2_progress_123 = shared->dim_n_I_C_2_progress_1 * shared->dim_n_I_C_2_progress_2 * shared->dim_n_I_C_2_progress_3;
  shared->dim_n_I_C_2_to_G_D = shared->dim_n_I_C_2_to_G_D_1 * shared->dim_n_I_C_2_to_G_D_2 * shared->dim_n_I_C_2_to_G_D_3;
  shared->dim_n_I_C_2_to_G_D_12 = shared->dim_n_I_C_2_to_G_D_1 * shared->dim_n_I_C_2_to_G_D_2;
  shared->dim_n_I_C_2_to_H_D = shared->dim_n_I_C_2_to_H_D_1 * shared->dim_n_I_C_2_to_H_D_2 * shared->dim_n_I_C_2_to_H_D_3;
  shared->dim_n_I_C_2_to_H_D_12 = shared->dim_n_I_C_2_to_H_D_1 * shared->dim_n_I_C_2_to_H_D_2;
  shared->dim_n_I_C_2_to_H_D_conf = shared->dim_n_I_C_2_to_H_D_conf_1 * shared->dim_n_I_C_2_to_H_D_conf_2 * shared->dim_n_I_C_2_to_H_D_conf_3;
  shared->dim_n_I_C_2_to_H_D_conf_12 = shared->dim_n_I_C_2_to_H_D_conf_1 * shared->dim_n_I_C_2_to_H_D_conf_2;
  shared->dim_n_I_C_2_to_H_R = shared->dim_n_I_C_2_to_H_R_1 * shared->dim_n_I_C_2_to_H_R_2 * shared->dim_n_I_C_2_to_H_R_3;
  shared->dim_n_I_C_2_to_H_R_12 = shared->dim_n_I_C_2_to_H_R_1 * shared->dim_n_I_C_2_to_H_R_2;
  shared->dim_n_I_C_2_to_H_R_conf = shared->dim_n_I_C_2_to_H_R_conf_1 * shared->dim_n_I_C_2_to_H_R_conf_2 * shared->dim_n_I_C_2_to_H_R_conf_3;
  shared->dim_n_I_C_2_to_H_R_conf_12 = shared->dim_n_I_C_2_to_H_R_conf_1 * shared->dim_n_I_C_2_to_H_R_conf_2;
  shared->dim_n_I_C_2_to_ICU_pre = shared->dim_n_I_C_2_to_ICU_pre_1 * shared->dim_n_I_C_2_to_ICU_pre_2 * shared->dim_n_I_C_2_to_ICU_pre_3;
  shared->dim_n_I_C_2_to_ICU_pre_12 = shared->dim_n_I_C_2_to_ICU_pre_1 * shared->dim_n_I_C_2_to_ICU_pre_2;
  shared->dim_n_I_C_2_to_ICU_pre_conf = shared->dim_n_I_C_2_to_ICU_pre_conf_1 * shared->dim_n_I_C_2_to_ICU_pre_conf_2 * shared->dim_n_I_C_2_to_ICU_pre_conf_3;
  shared->dim_n_I_C_2_to_ICU_pre_conf_12 = shared->dim_n_I_C_2_to_ICU_pre_conf_1 * shared->dim_n_I_C_2_to_ICU_pre_conf_2;
  shared->dim_n_I_C_2_to_RS = shared->dim_n_I_C_2_to_RS_1 * shared->dim_n_I_C_2_to_RS_2 * shared->dim_n_I_C_2_to_RS_3;
  shared->dim_n_I_C_2_to_RS_12 = shared->dim_n_I_C_2_to_RS_1 * shared->dim_n_I_C_2_to_RS_2;
  shared->dim_n_I_C_2_to_hosp = shared->dim_n_I_C_2_to_hosp_1 * shared->dim_n_I_C_2_to_hosp_2 * shared->dim_n_I_C_2_to_hosp_3;
  shared->dim_n_I_C_2_to_hosp_12 = shared->dim_n_I_C_2_to_hosp_1 * shared->dim_n_I_C_2_to_hosp_2;
  shared->dim_n_I_P_next_vacc_class = shared->dim_n_I_P_next_vacc_class_1 * shared->dim_n_I_P_next_vacc_class_2 * shared->dim_n_I_P_next_vacc_class_3 * shared->dim_n_I_P_next_vacc_class_4;
  shared->dim_n_I_P_next_vacc_class_12 = shared->dim_n_I_P_next_vacc_class_1 * shared->dim_n_I_P_next_vacc_class_2;
  shared->dim_n_I_P_next_vacc_class_123 = shared->dim_n_I_P_next_vacc_class_1 * shared->dim_n_I_P_next_vacc_class_2 * shared->dim_n_I_P_next_vacc_class_3;
  shared->dim_n_I_P_progress = shared->dim_n_I_P_progress_1 * shared->dim_n_I_P_progress_2 * shared->dim_n_I_P_progress_3 * shared->dim_n_I_P_progress_4;
  shared->dim_n_I_P_progress_12 = shared->dim_n_I_P_progress_1 * shared->dim_n_I_P_progress_2;
  shared->dim_n_I_P_progress_123 = shared->dim_n_I_P_progress_1 * shared->dim_n_I_P_progress_2 * shared->dim_n_I_P_progress_3;
  shared->dim_n_I_P_vacc_skip = shared->dim_n_I_P_vacc_skip_1 * shared->dim_n_I_P_vacc_skip_2 * shared->dim_n_I_P_vacc_skip_3 * shared->dim_n_I_P_vacc_skip_4;
  shared->dim_n_I_P_vacc_skip_12 = shared->dim_n_I_P_vacc_skip_1 * shared->dim_n_I_P_vacc_skip_2;
  shared->dim_n_I_P_vacc_skip_123 = shared->dim_n_I_P_vacc_skip_1 * shared->dim_n_I_P_vacc_skip_2 * shared->dim_n_I_P_vacc_skip_3;
  shared->dim_n_I_P_vaccinated = shared->dim_n_I_P_vaccinated_1 * shared->dim_n_I_P_vaccinated_2;
  shared->dim_n_R5_to_E3 = shared->dim_n_R5_to_E3_1 * shared->dim_n_R5_to_E3_2;
  shared->dim_n_RE = shared->dim_n_RE_1 * shared->dim_n_RE_2 * shared->dim_n_RE_3;
  shared->dim_n_RE_12 = shared->dim_n_RE_1 * shared->dim_n_RE_2;
  shared->dim_n_RS = shared->dim_n_RS_1 * shared->dim_n_RS_2 * shared->dim_n_RS_3;
  shared->dim_n_RS_12 = shared->dim_n_RS_1 * shared->dim_n_RS_2;
  shared->dim_n_R_next_vacc_class = shared->dim_n_R_next_vacc_class_1 * shared->dim_n_R_next_vacc_class_2 * shared->dim_n_R_next_vacc_class_3;
  shared->dim_n_R_next_vacc_class_12 = shared->dim_n_R_next_vacc_class_1 * shared->dim_n_R_next_vacc_class_2;
  shared->dim_n_R_progress = shared->dim_n_R_progress_1 * shared->dim_n_R_progress_2 * shared->dim_n_R_progress_3;
  shared->dim_n_R_progress_12 = shared->dim_n_R_progress_1 * shared->dim_n_R_progress_2;
  shared->dim_n_R_tmp = shared->dim_n_R_tmp_1 * shared->dim_n_R_tmp_2 * shared->dim_n_R_tmp_3;
  shared->dim_n_R_tmp_12 = shared->dim_n_R_tmp_1 * shared->dim_n_R_tmp_2;
  shared->dim_n_R_vacc_skip = shared->dim_n_R_vacc_skip_1 * shared->dim_n_R_vacc_skip_2 * shared->dim_n_R_vacc_skip_3;
  shared->dim_n_R_vacc_skip_12 = shared->dim_n_R_vacc_skip_1 * shared->dim_n_R_vacc_skip_2;
  shared->dim_n_R_vaccinated = shared->dim_n_R_vaccinated_1 * shared->dim_n_R_vaccinated_2;
  shared->dim_n_S_next_vacc_class = shared->dim_n_S_next_vacc_class_1 * shared->dim_n_S_next_vacc_class_2;
  shared->dim_n_S_progress = shared->dim_n_S_progress_1 * shared->dim_n_S_progress_2 * shared->dim_n_S_progress_3;
  shared->dim_n_S_progress_12 = shared->dim_n_S_progress_1 * shared->dim_n_S_progress_2;
  shared->dim_n_S_progress_tot = shared->dim_n_S_progress_tot_1 * shared->dim_n_S_progress_tot_2;
  shared->dim_n_S_vacc_skip = shared->dim_n_S_vacc_skip_1 * shared->dim_n_S_vacc_skip_2;
  shared->dim_n_S_vaccinated = shared->dim_n_S_vaccinated_1 * shared->dim_n_S_vaccinated_2;
  shared->dim_n_T_PCR_pos_progress = shared->dim_n_T_PCR_pos_progress_1 * shared->dim_n_T_PCR_pos_progress_2 * shared->dim_n_T_PCR_pos_progress_3 * shared->dim_n_T_PCR_pos_progress_4;
  shared->dim_n_T_PCR_pos_progress_12 = shared->dim_n_T_PCR_pos_progress_1 * shared->dim_n_T_PCR_pos_progress_2;
  shared->dim_n_T_PCR_pos_progress_123 = shared->dim_n_T_PCR_pos_progress_1 * shared->dim_n_T_PCR_pos_progress_2 * shared->dim_n_T_PCR_pos_progress_3;
  shared->dim_n_T_PCR_pre_progress = shared->dim_n_T_PCR_pre_progress_1 * shared->dim_n_T_PCR_pre_progress_2 * shared->dim_n_T_PCR_pre_progress_3 * shared->dim_n_T_PCR_pre_progress_4;
  shared->dim_n_T_PCR_pre_progress_12 = shared->dim_n_T_PCR_pre_progress_1 * shared->dim_n_T_PCR_pre_progress_2;
  shared->dim_n_T_PCR_pre_progress_123 = shared->dim_n_T_PCR_pre_progress_1 * shared->dim_n_T_PCR_pre_progress_2 * shared->dim_n_T_PCR_pre_progress_3;
  shared->dim_n_T_sero_pos_1_progress = shared->dim_n_T_sero_pos_1_progress_1 * shared->dim_n_T_sero_pos_1_progress_2 * shared->dim_n_T_sero_pos_1_progress_3 * shared->dim_n_T_sero_pos_1_progress_4;
  shared->dim_n_T_sero_pos_1_progress_12 = shared->dim_n_T_sero_pos_1_progress_1 * shared->dim_n_T_sero_pos_1_progress_2;
  shared->dim_n_T_sero_pos_1_progress_123 = shared->dim_n_T_sero_pos_1_progress_1 * shared->dim_n_T_sero_pos_1_progress_2 * shared->dim_n_T_sero_pos_1_progress_3;
  shared->dim_n_T_sero_pos_2_progress = shared->dim_n_T_sero_pos_2_progress_1 * shared->dim_n_T_sero_pos_2_progress_2 * shared->dim_n_T_sero_pos_2_progress_3 * shared->dim_n_T_sero_pos_2_progress_4;
  shared->dim_n_T_sero_pos_2_progress_12 = shared->dim_n_T_sero_pos_2_progress_1 * shared->dim_n_T_sero_pos_2_progress_2;
  shared->dim_n_T_sero_pos_2_progress_123 = shared->dim_n_T_sero_pos_2_progress_1 * shared->dim_n_T_sero_pos_2_progress_2 * shared->dim_n_T_sero_pos_2_progress_3;
  shared->dim_n_T_sero_pre_1_progress = shared->dim_n_T_sero_pre_1_progress_1 * shared->dim_n_T_sero_pre_1_progress_2 * shared->dim_n_T_sero_pre_1_progress_3 * shared->dim_n_T_sero_pre_1_progress_4;
  shared->dim_n_T_sero_pre_1_progress_12 = shared->dim_n_T_sero_pre_1_progress_1 * shared->dim_n_T_sero_pre_1_progress_2;
  shared->dim_n_T_sero_pre_1_progress_123 = shared->dim_n_T_sero_pre_1_progress_1 * shared->dim_n_T_sero_pre_1_progress_2 * shared->dim_n_T_sero_pre_1_progress_3;
  shared->dim_n_T_sero_pre_1_to_T_sero_pos_1 = shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_1 * shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_2 * shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_3;
  shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_12 = shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_1 * shared->dim_n_T_sero_pre_1_to_T_sero_pos_1_2;
  shared->dim_n_T_sero_pre_2_progress = shared->dim_n_T_sero_pre_2_progress_1 * shared->dim_n_T_sero_pre_2_progress_2 * shared->dim_n_T_sero_pre_2_progress_3 * shared->dim_n_T_sero_pre_2_progress_4;
  shared->dim_n_T_sero_pre_2_progress_12 = shared->dim_n_T_sero_pre_2_progress_1 * shared->dim_n_T_sero_pre_2_progress_2;
  shared->dim_n_T_sero_pre_2_progress_123 = shared->dim_n_T_sero_pre_2_progress_1 * shared->dim_n_T_sero_pre_2_progress_2 * shared->dim_n_T_sero_pre_2_progress_3;
  shared->dim_n_T_sero_pre_2_to_T_sero_pos_2 = shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_1 * shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_2 * shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_3;
  shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_12 = shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_1 * shared->dim_n_T_sero_pre_2_to_T_sero_pos_2_2;
  shared->dim_n_W_D_conf_progress = shared->dim_n_W_D_conf_progress_1 * shared->dim_n_W_D_conf_progress_2 * shared->dim_n_W_D_conf_progress_3 * shared->dim_n_W_D_conf_progress_4;
  shared->dim_n_W_D_conf_progress_12 = shared->dim_n_W_D_conf_progress_1 * shared->dim_n_W_D_conf_progress_2;
  shared->dim_n_W_D_conf_progress_123 = shared->dim_n_W_D_conf_progress_1 * shared->dim_n_W_D_conf_progress_2 * shared->dim_n_W_D_conf_progress_3;
  shared->dim_n_W_D_unconf_progress = shared->dim_n_W_D_unconf_progress_1 * shared->dim_n_W_D_unconf_progress_2 * shared->dim_n_W_D_unconf_progress_3 * shared->dim_n_W_D_unconf_progress_4;
  shared->dim_n_W_D_unconf_progress_12 = shared->dim_n_W_D_unconf_progress_1 * shared->dim_n_W_D_unconf_progress_2;
  shared->dim_n_W_D_unconf_progress_123 = shared->dim_n_W_D_unconf_progress_1 * shared->dim_n_W_D_unconf_progress_2 * shared->dim_n_W_D_unconf_progress_3;
  shared->dim_n_W_D_unconf_to_conf = shared->dim_n_W_D_unconf_to_conf_1 * shared->dim_n_W_D_unconf_to_conf_2 * shared->dim_n_W_D_unconf_to_conf_3 * shared->dim_n_W_D_unconf_to_conf_4;
  shared->dim_n_W_D_unconf_to_conf_12 = shared->dim_n_W_D_unconf_to_conf_1 * shared->dim_n_W_D_unconf_to_conf_2;
  shared->dim_n_W_D_unconf_to_conf_123 = shared->dim_n_W_D_unconf_to_conf_1 * shared->dim_n_W_D_unconf_to_conf_2 * shared->dim_n_W_D_unconf_to_conf_3;
  shared->dim_n_W_R_conf_progress = shared->dim_n_W_R_conf_progress_1 * shared->dim_n_W_R_conf_progress_2 * shared->dim_n_W_R_conf_progress_3 * shared->dim_n_W_R_conf_progress_4;
  shared->dim_n_W_R_conf_progress_12 = shared->dim_n_W_R_conf_progress_1 * shared->dim_n_W_R_conf_progress_2;
  shared->dim_n_W_R_conf_progress_123 = shared->dim_n_W_R_conf_progress_1 * shared->dim_n_W_R_conf_progress_2 * shared->dim_n_W_R_conf_progress_3;
  shared->dim_n_W_R_unconf_progress = shared->dim_n_W_R_unconf_progress_1 * shared->dim_n_W_R_unconf_progress_2 * shared->dim_n_W_R_unconf_progress_3 * shared->dim_n_W_R_unconf_progress_4;
  shared->dim_n_W_R_unconf_progress_12 = shared->dim_n_W_R_unconf_progress_1 * shared->dim_n_W_R_unconf_progress_2;
  shared->dim_n_W_R_unconf_progress_123 = shared->dim_n_W_R_unconf_progress_1 * shared->dim_n_W_R_unconf_progress_2 * shared->dim_n_W_R_unconf_progress_3;
  shared->dim_n_W_R_unconf_to_conf = shared->dim_n_W_R_unconf_to_conf_1 * shared->dim_n_W_R_unconf_to_conf_2 * shared->dim_n_W_R_unconf_to_conf_3 * shared->dim_n_W_R_unconf_to_conf_4;
  shared->dim_n_W_R_unconf_to_conf_12 = shared->dim_n_W_R_unconf_to_conf_1 * shared->dim_n_W_R_unconf_to_conf_2;
  shared->dim_n_W_R_unconf_to_conf_123 = shared->dim_n_W_R_unconf_to_conf_1 * shared->dim_n_W_R_unconf_to_conf_2 * shared->dim_n_W_R_unconf_to_conf_3;
  shared->dim_n_com_to_T_sero_pre = shared->dim_n_com_to_T_sero_pre_1 * shared->dim_n_com_to_T_sero_pre_2 * shared->dim_n_com_to_T_sero_pre_3;
  shared->dim_n_com_to_T_sero_pre_12 = shared->dim_n_com_to_T_sero_pre_1 * shared->dim_n_com_to_T_sero_pre_2;
  shared->dim_n_hosp_non_ICU = shared->dim_n_hosp_non_ICU_1 * shared->dim_n_hosp_non_ICU_2 * shared->dim_n_hosp_non_ICU_3;
  shared->dim_n_hosp_non_ICU_12 = shared->dim_n_hosp_non_ICU_1 * shared->dim_n_hosp_non_ICU_2;
  shared->dim_n_infected_to_R = shared->dim_n_infected_to_R_1 * shared->dim_n_infected_to_R_2 * shared->dim_n_infected_to_R_3;
  shared->dim_n_infected_to_R_12 = shared->dim_n_infected_to_R_1 * shared->dim_n_infected_to_R_2;
  shared->dim_n_infected_to_S = shared->dim_n_infected_to_S_1 * shared->dim_n_infected_to_S_2 * shared->dim_n_infected_to_S_3;
  shared->dim_n_infected_to_S_12 = shared->dim_n_infected_to_S_1 * shared->dim_n_infected_to_S_2;
  shared->dim_n_infection_end = shared->dim_n_infection_end_1 * shared->dim_n_infection_end_2 * shared->dim_n_infection_end_3;
  shared->dim_n_infection_end_12 = shared->dim_n_infection_end_1 * shared->dim_n_infection_end_2;
  shared->dim_n_vacc_skip = shared->dim_n_vacc_skip_1 * shared->dim_n_vacc_skip_2;
  shared->dim_n_vaccinated = shared->dim_n_vaccinated_1 * shared->dim_n_vaccinated_2;
  shared->dim_new_E = shared->dim_new_E_1 * shared->dim_new_E_2 * shared->dim_new_E_3 * shared->dim_new_E_4;
  shared->dim_new_E_12 = shared->dim_new_E_1 * shared->dim_new_E_2;
  shared->dim_new_E_123 = shared->dim_new_E_1 * shared->dim_new_E_2 * shared->dim_new_E_3;
  shared->dim_new_G_D = shared->dim_new_G_D_1 * shared->dim_new_G_D_2 * shared->dim_new_G_D_3 * shared->dim_new_G_D_4;
  shared->dim_new_G_D_12 = shared->dim_new_G_D_1 * shared->dim_new_G_D_2;
  shared->dim_new_G_D_123 = shared->dim_new_G_D_1 * shared->dim_new_G_D_2 * shared->dim_new_G_D_3;
  shared->dim_new_HFR_disag_weighted_inc = shared->dim_new_HFR_disag_weighted_inc_1 * shared->dim_new_HFR_disag_weighted_inc_2 * shared->dim_new_HFR_disag_weighted_inc_3;
  shared->dim_new_HFR_disag_weighted_inc_12 = shared->dim_new_HFR_disag_weighted_inc_1 * shared->dim_new_HFR_disag_weighted_inc_2;
  shared->dim_new_H_D_conf = shared->dim_new_H_D_conf_1 * shared->dim_new_H_D_conf_2 * shared->dim_new_H_D_conf_3 * shared->dim_new_H_D_conf_4;
  shared->dim_new_H_D_conf_12 = shared->dim_new_H_D_conf_1 * shared->dim_new_H_D_conf_2;
  shared->dim_new_H_D_conf_123 = shared->dim_new_H_D_conf_1 * shared->dim_new_H_D_conf_2 * shared->dim_new_H_D_conf_3;
  shared->dim_new_H_D_unconf = shared->dim_new_H_D_unconf_1 * shared->dim_new_H_D_unconf_2 * shared->dim_new_H_D_unconf_3 * shared->dim_new_H_D_unconf_4;
  shared->dim_new_H_D_unconf_12 = shared->dim_new_H_D_unconf_1 * shared->dim_new_H_D_unconf_2;
  shared->dim_new_H_D_unconf_123 = shared->dim_new_H_D_unconf_1 * shared->dim_new_H_D_unconf_2 * shared->dim_new_H_D_unconf_3;
  shared->dim_new_H_R_conf = shared->dim_new_H_R_conf_1 * shared->dim_new_H_R_conf_2 * shared->dim_new_H_R_conf_3 * shared->dim_new_H_R_conf_4;
  shared->dim_new_H_R_conf_12 = shared->dim_new_H_R_conf_1 * shared->dim_new_H_R_conf_2;
  shared->dim_new_H_R_conf_123 = shared->dim_new_H_R_conf_1 * shared->dim_new_H_R_conf_2 * shared->dim_new_H_R_conf_3;
  shared->dim_new_H_R_unconf = shared->dim_new_H_R_unconf_1 * shared->dim_new_H_R_unconf_2 * shared->dim_new_H_R_unconf_3 * shared->dim_new_H_R_unconf_4;
  shared->dim_new_H_R_unconf_12 = shared->dim_new_H_R_unconf_1 * shared->dim_new_H_R_unconf_2;
  shared->dim_new_H_R_unconf_123 = shared->dim_new_H_R_unconf_1 * shared->dim_new_H_R_unconf_2 * shared->dim_new_H_R_unconf_3;
  shared->dim_new_ICU_D_conf = shared->dim_new_ICU_D_conf_1 * shared->dim_new_ICU_D_conf_2 * shared->dim_new_ICU_D_conf_3 * shared->dim_new_ICU_D_conf_4;
  shared->dim_new_ICU_D_conf_12 = shared->dim_new_ICU_D_conf_1 * shared->dim_new_ICU_D_conf_2;
  shared->dim_new_ICU_D_conf_123 = shared->dim_new_ICU_D_conf_1 * shared->dim_new_ICU_D_conf_2 * shared->dim_new_ICU_D_conf_3;
  shared->dim_new_ICU_D_unconf = shared->dim_new_ICU_D_unconf_1 * shared->dim_new_ICU_D_unconf_2 * shared->dim_new_ICU_D_unconf_3 * shared->dim_new_ICU_D_unconf_4;
  shared->dim_new_ICU_D_unconf_12 = shared->dim_new_ICU_D_unconf_1 * shared->dim_new_ICU_D_unconf_2;
  shared->dim_new_ICU_D_unconf_123 = shared->dim_new_ICU_D_unconf_1 * shared->dim_new_ICU_D_unconf_2 * shared->dim_new_ICU_D_unconf_3;
  shared->dim_new_ICU_W_D_conf = shared->dim_new_ICU_W_D_conf_1 * shared->dim_new_ICU_W_D_conf_2 * shared->dim_new_ICU_W_D_conf_3 * shared->dim_new_ICU_W_D_conf_4;
  shared->dim_new_ICU_W_D_conf_12 = shared->dim_new_ICU_W_D_conf_1 * shared->dim_new_ICU_W_D_conf_2;
  shared->dim_new_ICU_W_D_conf_123 = shared->dim_new_ICU_W_D_conf_1 * shared->dim_new_ICU_W_D_conf_2 * shared->dim_new_ICU_W_D_conf_3;
  shared->dim_new_ICU_W_D_unconf = shared->dim_new_ICU_W_D_unconf_1 * shared->dim_new_ICU_W_D_unconf_2 * shared->dim_new_ICU_W_D_unconf_3 * shared->dim_new_ICU_W_D_unconf_4;
  shared->dim_new_ICU_W_D_unconf_12 = shared->dim_new_ICU_W_D_unconf_1 * shared->dim_new_ICU_W_D_unconf_2;
  shared->dim_new_ICU_W_D_unconf_123 = shared->dim_new_ICU_W_D_unconf_1 * shared->dim_new_ICU_W_D_unconf_2 * shared->dim_new_ICU_W_D_unconf_3;
  shared->dim_new_ICU_W_R_conf = shared->dim_new_ICU_W_R_conf_1 * shared->dim_new_ICU_W_R_conf_2 * shared->dim_new_ICU_W_R_conf_3 * shared->dim_new_ICU_W_R_conf_4;
  shared->dim_new_ICU_W_R_conf_12 = shared->dim_new_ICU_W_R_conf_1 * shared->dim_new_ICU_W_R_conf_2;
  shared->dim_new_ICU_W_R_conf_123 = shared->dim_new_ICU_W_R_conf_1 * shared->dim_new_ICU_W_R_conf_2 * shared->dim_new_ICU_W_R_conf_3;
  shared->dim_new_ICU_W_R_unconf = shared->dim_new_ICU_W_R_unconf_1 * shared->dim_new_ICU_W_R_unconf_2 * shared->dim_new_ICU_W_R_unconf_3 * shared->dim_new_ICU_W_R_unconf_4;
  shared->dim_new_ICU_W_R_unconf_12 = shared->dim_new_ICU_W_R_unconf_1 * shared->dim_new_ICU_W_R_unconf_2;
  shared->dim_new_ICU_W_R_unconf_123 = shared->dim_new_ICU_W_R_unconf_1 * shared->dim_new_ICU_W_R_unconf_2 * shared->dim_new_ICU_W_R_unconf_3;
  shared->dim_new_ICU_pre_conf = shared->dim_new_ICU_pre_conf_1 * shared->dim_new_ICU_pre_conf_2 * shared->dim_new_ICU_pre_conf_3 * shared->dim_new_ICU_pre_conf_4;
  shared->dim_new_ICU_pre_conf_12 = shared->dim_new_ICU_pre_conf_1 * shared->dim_new_ICU_pre_conf_2;
  shared->dim_new_ICU_pre_conf_123 = shared->dim_new_ICU_pre_conf_1 * shared->dim_new_ICU_pre_conf_2 * shared->dim_new_ICU_pre_conf_3;
  shared->dim_new_ICU_pre_unconf = shared->dim_new_ICU_pre_unconf_1 * shared->dim_new_ICU_pre_unconf_2 * shared->dim_new_ICU_pre_unconf_3 * shared->dim_new_ICU_pre_unconf_4;
  shared->dim_new_ICU_pre_unconf_12 = shared->dim_new_ICU_pre_unconf_1 * shared->dim_new_ICU_pre_unconf_2;
  shared->dim_new_ICU_pre_unconf_123 = shared->dim_new_ICU_pre_unconf_1 * shared->dim_new_ICU_pre_unconf_2 * shared->dim_new_ICU_pre_unconf_3;
  shared->dim_new_IFR_disag_weighted_inc = shared->dim_new_IFR_disag_weighted_inc_1 * shared->dim_new_IFR_disag_weighted_inc_2 * shared->dim_new_IFR_disag_weighted_inc_3;
  shared->dim_new_IFR_disag_weighted_inc_12 = shared->dim_new_IFR_disag_weighted_inc_1 * shared->dim_new_IFR_disag_weighted_inc_2;
  shared->dim_new_IHR_disag_weighted_inc = shared->dim_new_IHR_disag_weighted_inc_1 * shared->dim_new_IHR_disag_weighted_inc_2 * shared->dim_new_IHR_disag_weighted_inc_3;
  shared->dim_new_IHR_disag_weighted_inc_12 = shared->dim_new_IHR_disag_weighted_inc_1 * shared->dim_new_IHR_disag_weighted_inc_2;
  shared->dim_new_I_A = shared->dim_new_I_A_1 * shared->dim_new_I_A_2 * shared->dim_new_I_A_3 * shared->dim_new_I_A_4;
  shared->dim_new_I_A_12 = shared->dim_new_I_A_1 * shared->dim_new_I_A_2;
  shared->dim_new_I_A_123 = shared->dim_new_I_A_1 * shared->dim_new_I_A_2 * shared->dim_new_I_A_3;
  shared->dim_new_I_C_1 = shared->dim_new_I_C_1_1 * shared->dim_new_I_C_1_2 * shared->dim_new_I_C_1_3 * shared->dim_new_I_C_1_4;
  shared->dim_new_I_C_1_12 = shared->dim_new_I_C_1_1 * shared->dim_new_I_C_1_2;
  shared->dim_new_I_C_1_123 = shared->dim_new_I_C_1_1 * shared->dim_new_I_C_1_2 * shared->dim_new_I_C_1_3;
  shared->dim_new_I_C_2 = shared->dim_new_I_C_2_1 * shared->dim_new_I_C_2_2 * shared->dim_new_I_C_2_3 * shared->dim_new_I_C_2_4;
  shared->dim_new_I_C_2_12 = shared->dim_new_I_C_2_1 * shared->dim_new_I_C_2_2;
  shared->dim_new_I_C_2_123 = shared->dim_new_I_C_2_1 * shared->dim_new_I_C_2_2 * shared->dim_new_I_C_2_3;
  shared->dim_new_I_P = shared->dim_new_I_P_1 * shared->dim_new_I_P_2 * shared->dim_new_I_P_3 * shared->dim_new_I_P_4;
  shared->dim_new_I_P_12 = shared->dim_new_I_P_1 * shared->dim_new_I_P_2;
  shared->dim_new_I_P_123 = shared->dim_new_I_P_1 * shared->dim_new_I_P_2 * shared->dim_new_I_P_3;
  shared->dim_new_I_weighted = shared->dim_new_I_weighted_1 * shared->dim_new_I_weighted_2 * shared->dim_new_I_weighted_3;
  shared->dim_new_I_weighted_12 = shared->dim_new_I_weighted_1 * shared->dim_new_I_weighted_2;
  shared->dim_new_R = shared->dim_new_R_1 * shared->dim_new_R_2 * shared->dim_new_R_3;
  shared->dim_new_R_12 = shared->dim_new_R_1 * shared->dim_new_R_2;
  shared->dim_new_S = shared->dim_new_S_1 * shared->dim_new_S_2;
  shared->dim_new_T_PCR_neg = shared->dim_new_T_PCR_neg_1 * shared->dim_new_T_PCR_neg_2 * shared->dim_new_T_PCR_neg_3;
  shared->dim_new_T_PCR_neg_12 = shared->dim_new_T_PCR_neg_1 * shared->dim_new_T_PCR_neg_2;
  shared->dim_new_T_PCR_pos = shared->dim_new_T_PCR_pos_1 * shared->dim_new_T_PCR_pos_2 * shared->dim_new_T_PCR_pos_3 * shared->dim_new_T_PCR_pos_4;
  shared->dim_new_T_PCR_pos_12 = shared->dim_new_T_PCR_pos_1 * shared->dim_new_T_PCR_pos_2;
  shared->dim_new_T_PCR_pos_123 = shared->dim_new_T_PCR_pos_1 * shared->dim_new_T_PCR_pos_2 * shared->dim_new_T_PCR_pos_3;
  shared->dim_new_T_PCR_pre = shared->dim_new_T_PCR_pre_1 * shared->dim_new_T_PCR_pre_2 * shared->dim_new_T_PCR_pre_3 * shared->dim_new_T_PCR_pre_4;
  shared->dim_new_T_PCR_pre_12 = shared->dim_new_T_PCR_pre_1 * shared->dim_new_T_PCR_pre_2;
  shared->dim_new_T_PCR_pre_123 = shared->dim_new_T_PCR_pre_1 * shared->dim_new_T_PCR_pre_2 * shared->dim_new_T_PCR_pre_3;
  shared->dim_new_T_sero_neg_1 = shared->dim_new_T_sero_neg_1_1 * shared->dim_new_T_sero_neg_1_2 * shared->dim_new_T_sero_neg_1_3;
  shared->dim_new_T_sero_neg_1_12 = shared->dim_new_T_sero_neg_1_1 * shared->dim_new_T_sero_neg_1_2;
  shared->dim_new_T_sero_neg_2 = shared->dim_new_T_sero_neg_2_1 * shared->dim_new_T_sero_neg_2_2 * shared->dim_new_T_sero_neg_2_3;
  shared->dim_new_T_sero_neg_2_12 = shared->dim_new_T_sero_neg_2_1 * shared->dim_new_T_sero_neg_2_2;
  shared->dim_new_T_sero_pos_1 = shared->dim_new_T_sero_pos_1_1 * shared->dim_new_T_sero_pos_1_2 * shared->dim_new_T_sero_pos_1_3 * shared->dim_new_T_sero_pos_1_4;
  shared->dim_new_T_sero_pos_1_12 = shared->dim_new_T_sero_pos_1_1 * shared->dim_new_T_sero_pos_1_2;
  shared->dim_new_T_sero_pos_1_123 = shared->dim_new_T_sero_pos_1_1 * shared->dim_new_T_sero_pos_1_2 * shared->dim_new_T_sero_pos_1_3;
  shared->dim_new_T_sero_pos_2 = shared->dim_new_T_sero_pos_2_1 * shared->dim_new_T_sero_pos_2_2 * shared->dim_new_T_sero_pos_2_3 * shared->dim_new_T_sero_pos_2_4;
  shared->dim_new_T_sero_pos_2_12 = shared->dim_new_T_sero_pos_2_1 * shared->dim_new_T_sero_pos_2_2;
  shared->dim_new_T_sero_pos_2_123 = shared->dim_new_T_sero_pos_2_1 * shared->dim_new_T_sero_pos_2_2 * shared->dim_new_T_sero_pos_2_3;
  shared->dim_new_T_sero_pre_1 = shared->dim_new_T_sero_pre_1_1 * shared->dim_new_T_sero_pre_1_2 * shared->dim_new_T_sero_pre_1_3 * shared->dim_new_T_sero_pre_1_4;
  shared->dim_new_T_sero_pre_1_12 = shared->dim_new_T_sero_pre_1_1 * shared->dim_new_T_sero_pre_1_2;
  shared->dim_new_T_sero_pre_1_123 = shared->dim_new_T_sero_pre_1_1 * shared->dim_new_T_sero_pre_1_2 * shared->dim_new_T_sero_pre_1_3;
  shared->dim_new_T_sero_pre_2 = shared->dim_new_T_sero_pre_2_1 * shared->dim_new_T_sero_pre_2_2 * shared->dim_new_T_sero_pre_2_3 * shared->dim_new_T_sero_pre_2_4;
  shared->dim_new_T_sero_pre_2_12 = shared->dim_new_T_sero_pre_2_1 * shared->dim_new_T_sero_pre_2_2;
  shared->dim_new_T_sero_pre_2_123 = shared->dim_new_T_sero_pre_2_1 * shared->dim_new_T_sero_pre_2_2 * shared->dim_new_T_sero_pre_2_3;
  shared->dim_new_W_D_conf = shared->dim_new_W_D_conf_1 * shared->dim_new_W_D_conf_2 * shared->dim_new_W_D_conf_3 * shared->dim_new_W_D_conf_4;
  shared->dim_new_W_D_conf_12 = shared->dim_new_W_D_conf_1 * shared->dim_new_W_D_conf_2;
  shared->dim_new_W_D_conf_123 = shared->dim_new_W_D_conf_1 * shared->dim_new_W_D_conf_2 * shared->dim_new_W_D_conf_3;
  shared->dim_new_W_D_unconf = shared->dim_new_W_D_unconf_1 * shared->dim_new_W_D_unconf_2 * shared->dim_new_W_D_unconf_3 * shared->dim_new_W_D_unconf_4;
  shared->dim_new_W_D_unconf_12 = shared->dim_new_W_D_unconf_1 * shared->dim_new_W_D_unconf_2;
  shared->dim_new_W_D_unconf_123 = shared->dim_new_W_D_unconf_1 * shared->dim_new_W_D_unconf_2 * shared->dim_new_W_D_unconf_3;
  shared->dim_new_W_R_conf = shared->dim_new_W_R_conf_1 * shared->dim_new_W_R_conf_2 * shared->dim_new_W_R_conf_3 * shared->dim_new_W_R_conf_4;
  shared->dim_new_W_R_conf_12 = shared->dim_new_W_R_conf_1 * shared->dim_new_W_R_conf_2;
  shared->dim_new_W_R_conf_123 = shared->dim_new_W_R_conf_1 * shared->dim_new_W_R_conf_2 * shared->dim_new_W_R_conf_3;
  shared->dim_new_W_R_unconf = shared->dim_new_W_R_unconf_1 * shared->dim_new_W_R_unconf_2 * shared->dim_new_W_R_unconf_3 * shared->dim_new_W_R_unconf_4;
  shared->dim_new_W_R_unconf_12 = shared->dim_new_W_R_unconf_1 * shared->dim_new_W_R_unconf_2;
  shared->dim_new_W_R_unconf_123 = shared->dim_new_W_R_unconf_1 * shared->dim_new_W_R_unconf_2 * shared->dim_new_W_R_unconf_3;
  shared->dim_p_C = shared->dim_p_C_1 * shared->dim_p_C_2 * shared->dim_p_C_3;
  shared->dim_p_C_12 = shared->dim_p_C_1 * shared->dim_p_C_2;
  shared->dim_p_C_step = shared->dim_p_C_step_1 * shared->dim_p_C_step_2;
  shared->dim_p_E_next_vacc_class = shared->dim_p_E_next_vacc_class_1 * shared->dim_p_E_next_vacc_class_2 * shared->dim_p_E_next_vacc_class_3 * shared->dim_p_E_next_vacc_class_4;
  shared->dim_p_E_next_vacc_class_12 = shared->dim_p_E_next_vacc_class_1 * shared->dim_p_E_next_vacc_class_2;
  shared->dim_p_E_next_vacc_class_123 = shared->dim_p_E_next_vacc_class_1 * shared->dim_p_E_next_vacc_class_2 * shared->dim_p_E_next_vacc_class_3;
  shared->dim_p_E_vacc_skip = shared->dim_p_E_vacc_skip_1 * shared->dim_p_E_vacc_skip_2 * shared->dim_p_E_vacc_skip_3 * shared->dim_p_E_vacc_skip_4;
  shared->dim_p_E_vacc_skip_12 = shared->dim_p_E_vacc_skip_1 * shared->dim_p_E_vacc_skip_2;
  shared->dim_p_E_vacc_skip_123 = shared->dim_p_E_vacc_skip_1 * shared->dim_p_E_vacc_skip_2 * shared->dim_p_E_vacc_skip_3;
  shared->dim_p_G_D = shared->dim_p_G_D_1 * shared->dim_p_G_D_2 * shared->dim_p_G_D_3;
  shared->dim_p_G_D_12 = shared->dim_p_G_D_1 * shared->dim_p_G_D_2;
  shared->dim_p_G_D_step = shared->dim_p_G_D_step_1 * shared->dim_p_G_D_step_2;
  shared->dim_p_H = shared->dim_p_H_1 * shared->dim_p_H_2 * shared->dim_p_H_3;
  shared->dim_p_H_12 = shared->dim_p_H_1 * shared->dim_p_H_2;
  shared->dim_p_H_D = shared->dim_p_H_D_1 * shared->dim_p_H_D_2 * shared->dim_p_H_D_3;
  shared->dim_p_H_D_12 = shared->dim_p_H_D_1 * shared->dim_p_H_D_2;
  shared->dim_p_H_D_step = shared->dim_p_H_D_step_1 * shared->dim_p_H_D_step_2;
  shared->dim_p_H_step = shared->dim_p_H_step_1 * shared->dim_p_H_step_2;
  shared->dim_p_ICU = shared->dim_p_ICU_1 * shared->dim_p_ICU_2 * shared->dim_p_ICU_3;
  shared->dim_p_ICU_12 = shared->dim_p_ICU_1 * shared->dim_p_ICU_2;
  shared->dim_p_ICU_D = shared->dim_p_ICU_D_1 * shared->dim_p_ICU_D_2 * shared->dim_p_ICU_D_3;
  shared->dim_p_ICU_D_12 = shared->dim_p_ICU_D_1 * shared->dim_p_ICU_D_2;
  shared->dim_p_ICU_D_step = shared->dim_p_ICU_D_step_1 * shared->dim_p_ICU_D_step_2;
  shared->dim_p_ICU_step = shared->dim_p_ICU_step_1 * shared->dim_p_ICU_step_2;
  shared->dim_p_I_A_next_vacc_class = shared->dim_p_I_A_next_vacc_class_1 * shared->dim_p_I_A_next_vacc_class_2 * shared->dim_p_I_A_next_vacc_class_3 * shared->dim_p_I_A_next_vacc_class_4;
  shared->dim_p_I_A_next_vacc_class_12 = shared->dim_p_I_A_next_vacc_class_1 * shared->dim_p_I_A_next_vacc_class_2;
  shared->dim_p_I_A_next_vacc_class_123 = shared->dim_p_I_A_next_vacc_class_1 * shared->dim_p_I_A_next_vacc_class_2 * shared->dim_p_I_A_next_vacc_class_3;
  shared->dim_p_I_A_vacc_skip = shared->dim_p_I_A_vacc_skip_1 * shared->dim_p_I_A_vacc_skip_2 * shared->dim_p_I_A_vacc_skip_3 * shared->dim_p_I_A_vacc_skip_4;
  shared->dim_p_I_A_vacc_skip_12 = shared->dim_p_I_A_vacc_skip_1 * shared->dim_p_I_A_vacc_skip_2;
  shared->dim_p_I_A_vacc_skip_123 = shared->dim_p_I_A_vacc_skip_1 * shared->dim_p_I_A_vacc_skip_2 * shared->dim_p_I_A_vacc_skip_3;
  shared->dim_p_I_P_next_vacc_class = shared->dim_p_I_P_next_vacc_class_1 * shared->dim_p_I_P_next_vacc_class_2 * shared->dim_p_I_P_next_vacc_class_3 * shared->dim_p_I_P_next_vacc_class_4;
  shared->dim_p_I_P_next_vacc_class_12 = shared->dim_p_I_P_next_vacc_class_1 * shared->dim_p_I_P_next_vacc_class_2;
  shared->dim_p_I_P_next_vacc_class_123 = shared->dim_p_I_P_next_vacc_class_1 * shared->dim_p_I_P_next_vacc_class_2 * shared->dim_p_I_P_next_vacc_class_3;
  shared->dim_p_I_P_vacc_skip = shared->dim_p_I_P_vacc_skip_1 * shared->dim_p_I_P_vacc_skip_2 * shared->dim_p_I_P_vacc_skip_3 * shared->dim_p_I_P_vacc_skip_4;
  shared->dim_p_I_P_vacc_skip_12 = shared->dim_p_I_P_vacc_skip_1 * shared->dim_p_I_P_vacc_skip_2;
  shared->dim_p_I_P_vacc_skip_123 = shared->dim_p_I_P_vacc_skip_1 * shared->dim_p_I_P_vacc_skip_2 * shared->dim_p_I_P_vacc_skip_3;
  shared->dim_p_R = shared->dim_p_R_1 * shared->dim_p_R_2 * shared->dim_p_R_3;
  shared->dim_p_R5_to_E3 = shared->dim_p_R5_to_E3_1 * shared->dim_p_R5_to_E3_2;
  shared->dim_p_RS = shared->dim_p_RS_1 * shared->dim_p_RS_2 * shared->dim_p_RS_3;
  shared->dim_p_RS_12 = shared->dim_p_RS_1 * shared->dim_p_RS_2;
  shared->dim_p_R_12 = shared->dim_p_R_1 * shared->dim_p_R_2;
  shared->dim_p_R_next_vacc_class = shared->dim_p_R_next_vacc_class_1 * shared->dim_p_R_next_vacc_class_2 * shared->dim_p_R_next_vacc_class_3;
  shared->dim_p_R_next_vacc_class_12 = shared->dim_p_R_next_vacc_class_1 * shared->dim_p_R_next_vacc_class_2;
  shared->dim_p_R_progress = shared->dim_p_R_progress_1 * shared->dim_p_R_progress_2 * shared->dim_p_R_progress_3;
  shared->dim_p_R_progress_12 = shared->dim_p_R_progress_1 * shared->dim_p_R_progress_2;
  shared->dim_p_R_step = shared->dim_p_R_step_1 * shared->dim_p_R_step_2;
  shared->dim_p_R_vacc_skip = shared->dim_p_R_vacc_skip_1 * shared->dim_p_R_vacc_skip_2 * shared->dim_p_R_vacc_skip_3;
  shared->dim_p_R_vacc_skip_12 = shared->dim_p_R_vacc_skip_1 * shared->dim_p_R_vacc_skip_2;
  shared->dim_p_SE = shared->dim_p_SE_1 * shared->dim_p_SE_2;
  shared->dim_p_S_next_vacc_class = shared->dim_p_S_next_vacc_class_1 * shared->dim_p_S_next_vacc_class_2;
  shared->dim_p_S_vacc_skip = shared->dim_p_S_vacc_skip_1 * shared->dim_p_S_vacc_skip_2;
  shared->dim_p_W_D = shared->dim_p_W_D_1 * shared->dim_p_W_D_2 * shared->dim_p_W_D_3;
  shared->dim_p_W_D_12 = shared->dim_p_W_D_1 * shared->dim_p_W_D_2;
  shared->dim_p_W_D_step = shared->dim_p_W_D_step_1 * shared->dim_p_W_D_step_2;
  shared->dim_p_star_step = shared->dim_p_star_step_1 * shared->dim_p_star_step_2;
  shared->dim_prob_strain = shared->n_real_strains;
  shared->dim_protected_R_unvaccinated = shared->n_real_strains;
  shared->dim_protected_R_vaccinated = shared->n_real_strains;
  shared->dim_protected_S_vaccinated = shared->n_real_strains;
  shared->dim_rate_RE_progress_1 = shared->n_groups;
  shared->dim_rate_RE_progress_2 = shared->n_real_strains;
  shared->dim_rate_RE_progress_3 = shared->n_vacc_classes;
  shared->dim_rate_R_progress = shared->dim_rate_R_progress_1 * shared->dim_rate_R_progress_2 * shared->dim_rate_R_progress_3;
  shared->dim_rate_R_progress_12 = shared->dim_rate_R_progress_1 * shared->dim_rate_R_progress_2;
  shared->dim_rel_foi_strain_1 = shared->n_groups;
  shared->dim_rel_foi_strain_2 = shared->n_real_strains;
  shared->dim_rel_foi_strain_3 = shared->n_vacc_classes;
  shared->dim_rel_infectivity = shared->dim_rel_infectivity_1 * shared->dim_rel_infectivity_2 * shared->dim_rel_infectivity_3;
  shared->dim_rel_infectivity_12 = shared->dim_rel_infectivity_1 * shared->dim_rel_infectivity_2;
  shared->dim_rel_p_G_D = shared->dim_rel_p_G_D_1 * shared->dim_rel_p_G_D_2 * shared->dim_rel_p_G_D_3;
  shared->dim_rel_p_G_D_12 = shared->dim_rel_p_G_D_1 * shared->dim_rel_p_G_D_2;
  shared->dim_rel_p_H_D = shared->dim_rel_p_H_D_1 * shared->dim_rel_p_H_D_2 * shared->dim_rel_p_H_D_3;
  shared->dim_rel_p_H_D_12 = shared->dim_rel_p_H_D_1 * shared->dim_rel_p_H_D_2;
  shared->dim_rel_p_ICU = shared->dim_rel_p_ICU_1 * shared->dim_rel_p_ICU_2 * shared->dim_rel_p_ICU_3;
  shared->dim_rel_p_ICU_12 = shared->dim_rel_p_ICU_1 * shared->dim_rel_p_ICU_2;
  shared->dim_rel_p_ICU_D = shared->dim_rel_p_ICU_D_1 * shared->dim_rel_p_ICU_D_2 * shared->dim_rel_p_ICU_D_3;
  shared->dim_rel_p_ICU_D_12 = shared->dim_rel_p_ICU_D_1 * shared->dim_rel_p_ICU_D_2;
  shared->dim_rel_p_R = shared->dim_rel_p_R_1 * shared->dim_rel_p_R_2 * shared->dim_rel_p_R_3;
  shared->dim_rel_p_R_12 = shared->dim_rel_p_R_1 * shared->dim_rel_p_R_2;
  shared->dim_rel_p_W_D = shared->dim_rel_p_W_D_1 * shared->dim_rel_p_W_D_2 * shared->dim_rel_p_W_D_3;
  shared->dim_rel_p_W_D_12 = shared->dim_rel_p_W_D_1 * shared->dim_rel_p_W_D_2;
  shared->dim_rel_p_hosp_if_sympt = shared->dim_rel_p_hosp_if_sympt_1 * shared->dim_rel_p_hosp_if_sympt_2 * shared->dim_rel_p_hosp_if_sympt_3;
  shared->dim_rel_p_hosp_if_sympt_12 = shared->dim_rel_p_hosp_if_sympt_1 * shared->dim_rel_p_hosp_if_sympt_2;
  shared->dim_rel_p_sympt = shared->dim_rel_p_sympt_1 * shared->dim_rel_p_sympt_2 * shared->dim_rel_p_sympt_3;
  shared->dim_rel_p_sympt_12 = shared->dim_rel_p_sympt_1 * shared->dim_rel_p_sympt_2;
  shared->dim_rel_susceptibility = shared->dim_rel_susceptibility_1 * shared->dim_rel_susceptibility_2 * shared->dim_rel_susceptibility_3;
  shared->dim_rel_susceptibility_12 = shared->dim_rel_susceptibility_1 * shared->dim_rel_susceptibility_2;
  shared->dim_s_ij = shared->dim_s_ij_1 * shared->dim_s_ij_2 * shared->dim_s_ij_3;
  shared->dim_s_ij_12 = shared->dim_s_ij_1 * shared->dim_s_ij_2;
  shared->dim_tmp_vaccine_n_candidates = shared->dim_tmp_vaccine_n_candidates_1 * shared->dim_tmp_vaccine_n_candidates_2;
  shared->dim_tmp_vaccine_probability = shared->dim_tmp_vaccine_probability_1 * shared->dim_tmp_vaccine_probability_2;
  shared->dim_total_attempted_doses = shared->dim_total_attempted_doses_1 * shared->dim_total_attempted_doses_2;
  shared->dim_vacc_skip_attempted_doses = shared->dim_vacc_skip_attempted_doses_1 * shared->dim_vacc_skip_attempted_doses_2;
  shared->dim_vacc_skip_n_candidates = shared->dim_vacc_skip_n_candidates_1 * shared->dim_vacc_skip_n_candidates_2;
  shared->dim_vacc_skip_probability = shared->dim_vacc_skip_probability_1 * shared->dim_vacc_skip_probability_2;
  shared->dim_vaccine_attempted_doses = shared->dim_vaccine_attempted_doses_1 * shared->dim_vaccine_attempted_doses_2;
  shared->dim_vaccine_dose_step_12 = shared->dim_vaccine_dose_step_1 * shared->dim_vaccine_dose_step_2;
  shared->dim_vaccine_missed_doses = shared->dim_vaccine_missed_doses_1 * shared->dim_vaccine_missed_doses_2;
  shared->dim_vaccine_n_candidates = shared->dim_vaccine_n_candidates_1 * shared->dim_vaccine_n_candidates_2;
  shared->dim_vaccine_probability = shared->dim_vaccine_probability_1 * shared->dim_vaccine_probability_2;
  shared->dim_vaccine_probability_doses = shared->dim_vaccine_probability_doses_1 * shared->dim_vaccine_probability_doses_2;
  shared->dim_vaccine_progression_rate_base = shared->dim_vaccine_progression_rate_base_1 * shared->dim_vaccine_progression_rate_base_2;
  shared->gamma_A_step = user_get_array_fixed<real_type, 1>(user, "gamma_A_step", shared->gamma_A_step, {shared->dim_gamma_A_step}, NA_REAL, NA_REAL);
  shared->gamma_C_1_step = user_get_array_fixed<real_type, 1>(user, "gamma_C_1_step", shared->gamma_C_1_step, {shared->dim_gamma_C_1_step}, NA_REAL, NA_REAL);
  shared->gamma_C_2_step = user_get_array_fixed<real_type, 1>(user, "gamma_C_2_step", shared->gamma_C_2_step, {shared->dim_gamma_C_2_step}, NA_REAL, NA_REAL);
  shared->gamma_E_step = user_get_array_fixed<real_type, 1>(user, "gamma_E_step", shared->gamma_E_step, {shared->dim_gamma_E_step}, NA_REAL, NA_REAL);
  shared->gamma_G_D_step = user_get_array_fixed<real_type, 1>(user, "gamma_G_D_step", shared->gamma_G_D_step, {shared->dim_gamma_G_D_step}, NA_REAL, NA_REAL);
  shared->gamma_H_D_step = user_get_array_fixed<real_type, 1>(user, "gamma_H_D_step", shared->gamma_H_D_step, {shared->dim_gamma_H_D_step}, NA_REAL, NA_REAL);
  shared->gamma_H_R_step = user_get_array_fixed<real_type, 1>(user, "gamma_H_R_step", shared->gamma_H_R_step, {shared->dim_gamma_H_R_step}, NA_REAL, NA_REAL);
  shared->gamma_ICU_D_step = user_get_array_fixed<real_type, 1>(user, "gamma_ICU_D_step", shared->gamma_ICU_D_step, {shared->dim_gamma_ICU_D_step}, NA_REAL, NA_REAL);
  shared->gamma_ICU_W_D_step = user_get_array_fixed<real_type, 1>(user, "gamma_ICU_W_D_step", shared->gamma_ICU_W_D_step, {shared->dim_gamma_ICU_W_D_step}, NA_REAL, NA_REAL);
  shared->gamma_ICU_W_R_step = user_get_array_fixed<real_type, 1>(user, "gamma_ICU_W_R_step", shared->gamma_ICU_W_R_step, {shared->dim_gamma_ICU_W_R_step}, NA_REAL, NA_REAL);
  shared->gamma_ICU_pre_step = user_get_array_fixed<real_type, 1>(user, "gamma_ICU_pre_step", shared->gamma_ICU_pre_step, {shared->dim_gamma_ICU_pre_step}, NA_REAL, NA_REAL);
  shared->gamma_PCR_pos_step = user_get_array_fixed<real_type, 1>(user, "gamma_PCR_pos_step", shared->gamma_PCR_pos_step, {shared->dim_gamma_PCR_pos_step}, NA_REAL, NA_REAL);
  shared->gamma_PCR_pre_step = user_get_array_fixed<real_type, 1>(user, "gamma_PCR_pre_step", shared->gamma_PCR_pre_step, {shared->dim_gamma_PCR_pre_step}, NA_REAL, NA_REAL);
  shared->gamma_P_step = user_get_array_fixed<real_type, 1>(user, "gamma_P_step", shared->gamma_P_step, {shared->dim_gamma_P_step}, NA_REAL, NA_REAL);
  shared->gamma_U_step = user_get_array_fixed<real_type, 1>(user, "gamma_U_step", shared->gamma_U_step, {shared->dim_gamma_U_step}, NA_REAL, NA_REAL);
  shared->gamma_W_D_step = user_get_array_fixed<real_type, 1>(user, "gamma_W_D_step", shared->gamma_W_D_step, {shared->dim_gamma_W_D_step}, NA_REAL, NA_REAL);
  shared->gamma_W_R_step = user_get_array_fixed<real_type, 1>(user, "gamma_W_R_step", shared->gamma_W_R_step, {shared->dim_gamma_W_R_step}, NA_REAL, NA_REAL);
  shared->index_dose = user_get_array_fixed<int, 1>(user, "index_dose", shared->index_dose, {shared->dim_index_dose}, NA_INTEGER, NA_INTEGER);
  shared->index_dose_inverse = user_get_array_fixed<int, 1>(user, "index_dose_inverse", shared->index_dose_inverse, {shared->dim_index_dose_inverse}, NA_INTEGER, NA_INTEGER);
  for (int i = 1; i <= shared->dim_D_non_hosp; ++i) {
    shared->initial_D_non_hosp[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_N_tot; ++i) {
    shared->initial_N_tot[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_cum_admit_by_age; ++i) {
    shared->initial_cum_admit_by_age[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_cum_infections_strain; ++i) {
    shared->initial_cum_infections_strain[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_hfr_age; ++i) {
    
  }
  for (int i = 1; i <= shared->dim_hospitalisations_inc_age; ++i) {
    shared->initial_hospitalisations_inc_age[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_hospitalisations_inc_strain; ++i) {
    shared->initial_hospitalisations_inc_strain[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_ifr_age; ++i) {
    
  }
  for (int i = 1; i <= shared->dim_ihr_age; ++i) {
    
  }
  for (int i = 1; i <= shared->dim_infections_inc_age; ++i) {
    shared->initial_infections_inc_age[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_infections_inc_strain; ++i) {
    shared->initial_infections_inc_strain[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_recovered; ++i) {
    shared->initial_recovered[i - 1] = 0;
  }
  shared->offset_variable_D_non_hosp = shared->dim_cum_infections_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + 90;
  shared->offset_variable_N_tot = shared->dim_D_non_hosp + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + 90;
  shared->offset_variable_cum_admit_by_age = shared->dim_D_non_hosp + shared->dim_cum_infections_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + 90;
  shared->offset_variable_hospitalisations_inc_age = shared->dim_cum_infections_strain + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + 90;
  shared->offset_variable_hospitalisations_inc_strain = shared->dim_cum_infections_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + 90;
  shared->offset_variable_infections_inc_age = shared->dim_cum_infections_strain + shared->dim_infections_inc_strain + 90;
  shared->offset_variable_infections_inc_strain = shared->dim_cum_infections_strain + 90;
  shared->offset_variable_prob_strain = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + 90;
  shared->p_T_sero_pos_1_progress = 1 - dust::math::exp(- shared->gamma_sero_pos_1 * shared->dt);
  shared->p_T_sero_pos_2_progress = 1 - dust::math::exp(- shared->gamma_sero_pos_2 * shared->dt);
  shared->p_T_sero_pre_1_progress = 1 - dust::math::exp(- shared->gamma_sero_pre_1 * shared->dt);
  shared->p_T_sero_pre_2_progress = 1 - dust::math::exp(- shared->gamma_sero_pre_2 * shared->dt);
  shared->p_sero_pos_1 = user_get_array_fixed<real_type, 1>(user, "p_sero_pos_1", shared->p_sero_pos_1, {shared->dim_p_sero_pos_1}, NA_REAL, NA_REAL);
  shared->p_sero_pos_2 = user_get_array_fixed<real_type, 1>(user, "p_sero_pos_2", shared->p_sero_pos_2, {shared->dim_p_sero_pos_2}, NA_REAL, NA_REAL);
  shared->rel_gamma_A = user_get_array_fixed<real_type, 1>(user, "rel_gamma_A", shared->rel_gamma_A, {shared->dim_rel_gamma_A}, NA_REAL, NA_REAL);
  shared->rel_gamma_C_1 = user_get_array_fixed<real_type, 1>(user, "rel_gamma_C_1", shared->rel_gamma_C_1, {shared->dim_rel_gamma_C_1}, NA_REAL, NA_REAL);
  shared->rel_gamma_C_2 = user_get_array_fixed<real_type, 1>(user, "rel_gamma_C_2", shared->rel_gamma_C_2, {shared->dim_rel_gamma_C_2}, NA_REAL, NA_REAL);
  shared->rel_gamma_E = user_get_array_fixed<real_type, 1>(user, "rel_gamma_E", shared->rel_gamma_E, {shared->dim_rel_gamma_E}, NA_REAL, NA_REAL);
  shared->rel_gamma_G_D = user_get_array_fixed<real_type, 1>(user, "rel_gamma_G_D", shared->rel_gamma_G_D, {shared->dim_rel_gamma_G_D}, NA_REAL, NA_REAL);
  shared->rel_gamma_H_D = user_get_array_fixed<real_type, 1>(user, "rel_gamma_H_D", shared->rel_gamma_H_D, {shared->dim_rel_gamma_H_D}, NA_REAL, NA_REAL);
  shared->rel_gamma_H_R = user_get_array_fixed<real_type, 1>(user, "rel_gamma_H_R", shared->rel_gamma_H_R, {shared->dim_rel_gamma_H_R}, NA_REAL, NA_REAL);
  shared->rel_gamma_ICU_D = user_get_array_fixed<real_type, 1>(user, "rel_gamma_ICU_D", shared->rel_gamma_ICU_D, {shared->dim_rel_gamma_ICU_D}, NA_REAL, NA_REAL);
  shared->rel_gamma_ICU_W_D = user_get_array_fixed<real_type, 1>(user, "rel_gamma_ICU_W_D", shared->rel_gamma_ICU_W_D, {shared->dim_rel_gamma_ICU_W_D}, NA_REAL, NA_REAL);
  shared->rel_gamma_ICU_W_R = user_get_array_fixed<real_type, 1>(user, "rel_gamma_ICU_W_R", shared->rel_gamma_ICU_W_R, {shared->dim_rel_gamma_ICU_W_R}, NA_REAL, NA_REAL);
  shared->rel_gamma_ICU_pre = user_get_array_fixed<real_type, 1>(user, "rel_gamma_ICU_pre", shared->rel_gamma_ICU_pre, {shared->dim_rel_gamma_ICU_pre}, NA_REAL, NA_REAL);
  shared->rel_gamma_P = user_get_array_fixed<real_type, 1>(user, "rel_gamma_P", shared->rel_gamma_P, {shared->dim_rel_gamma_P}, NA_REAL, NA_REAL);
  shared->rel_gamma_PCR_pos = user_get_array_fixed<real_type, 1>(user, "rel_gamma_PCR_pos", shared->rel_gamma_PCR_pos, {shared->dim_rel_gamma_PCR_pos}, NA_REAL, NA_REAL);
  shared->rel_gamma_PCR_pre = user_get_array_fixed<real_type, 1>(user, "rel_gamma_PCR_pre", shared->rel_gamma_PCR_pre, {shared->dim_rel_gamma_PCR_pre}, NA_REAL, NA_REAL);
  shared->rel_gamma_W_D = user_get_array_fixed<real_type, 1>(user, "rel_gamma_W_D", shared->rel_gamma_W_D, {shared->dim_rel_gamma_W_D}, NA_REAL, NA_REAL);
  shared->rel_gamma_W_R = user_get_array_fixed<real_type, 1>(user, "rel_gamma_W_R", shared->rel_gamma_W_R, {shared->dim_rel_gamma_W_R}, NA_REAL, NA_REAL);
  shared->seed_step_end = shared->seed_step_start + shared->dim_seed_value;
  shared->strain_rel_p_G_D = user_get_array_fixed<real_type, 1>(user, "strain_rel_p_G_D", shared->strain_rel_p_G_D, {shared->dim_strain_rel_p_G_D}, NA_REAL, NA_REAL);
  shared->strain_rel_p_H_D = user_get_array_fixed<real_type, 1>(user, "strain_rel_p_H_D", shared->strain_rel_p_H_D, {shared->dim_strain_rel_p_H_D}, NA_REAL, NA_REAL);
  shared->strain_rel_p_ICU_D = user_get_array_fixed<real_type, 1>(user, "strain_rel_p_ICU_D", shared->strain_rel_p_ICU_D, {shared->dim_strain_rel_p_ICU_D}, NA_REAL, NA_REAL);
  shared->strain_rel_p_W_D = user_get_array_fixed<real_type, 1>(user, "strain_rel_p_W_D", shared->strain_rel_p_W_D, {shared->dim_strain_rel_p_W_D}, NA_REAL, NA_REAL);
  shared->strain_rel_p_hosp_if_sympt = user_get_array_fixed<real_type, 1>(user, "strain_rel_p_hosp_if_sympt", shared->strain_rel_p_hosp_if_sympt, {shared->dim_strain_rel_p_hosp_if_sympt}, NA_REAL, NA_REAL);
  shared->strain_rel_p_icu = user_get_array_fixed<real_type, 1>(user, "strain_rel_p_icu", shared->strain_rel_p_icu, {shared->dim_strain_rel_p_icu}, NA_REAL, NA_REAL);
  shared->strain_rel_p_sympt = user_get_array_fixed<real_type, 1>(user, "strain_rel_p_sympt", shared->strain_rel_p_sympt, {shared->dim_strain_rel_p_sympt}, NA_REAL, NA_REAL);
  shared->strain_seed_step_end = shared->strain_seed_step_start + shared->dim_strain_seed_value;
  shared->strain_transmission = user_get_array_fixed<real_type, 1>(user, "strain_transmission", shared->strain_transmission, {shared->dim_strain_transmission}, NA_REAL, NA_REAL);
  shared->vacc_skip_dose = user_get_array_fixed<int, 1>(user, "vacc_skip_dose", shared->vacc_skip_dose, {shared->dim_vacc_skip_dose}, NA_INTEGER, NA_INTEGER);
  shared->vacc_skip_dose_inverse = user_get_array_fixed<int, 1>(user, "vacc_skip_dose_inverse", shared->vacc_skip_dose_inverse, {shared->dim_vacc_skip_dose_inverse}, NA_INTEGER, NA_INTEGER);
  shared->vacc_skip_dose_weight = user_get_array_fixed<real_type, 1>(user, "vacc_skip_dose_weight", shared->vacc_skip_dose_weight, {shared->dim_vacc_skip_dose_weight}, NA_REAL, NA_REAL);
  shared->vacc_skip_from = user_get_array_fixed<int, 1>(user, "vacc_skip_from", shared->vacc_skip_from, {shared->dim_vacc_skip_from}, NA_INTEGER, NA_INTEGER);
  shared->vacc_skip_progression_rate_base = user_get_array_fixed<real_type, 1>(user, "vacc_skip_progression_rate_base", shared->vacc_skip_progression_rate_base, {shared->dim_vacc_skip_progression_rate_base}, NA_REAL, NA_REAL);
  shared->vacc_skip_to = user_get_array_fixed<int, 1>(user, "vacc_skip_to", shared->vacc_skip_to, {shared->dim_vacc_skip_to}, NA_INTEGER, NA_INTEGER);
  shared->vacc_skipped = user_get_array_fixed<int, 1>(user, "vacc_skipped", shared->vacc_skipped, {shared->dim_vacc_skipped}, NA_INTEGER, NA_INTEGER);
  shared->waning_rate = user_get_array_fixed<real_type, 1>(user, "waning_rate", shared->waning_rate, {shared->dim_waning_rate}, NA_REAL, NA_REAL);
  internal.HFR_disag = std::vector<real_type>(shared->dim_HFR_disag);
  internal.IFR_disag = std::vector<real_type>(shared->dim_IFR_disag);
  internal.IHR_disag = std::vector<real_type>(shared->dim_IHR_disag);
  internal.I_with_diff_trans = std::vector<real_type>(shared->dim_I_with_diff_trans);
  internal.aux_H_D_conf = std::vector<real_type>(shared->dim_aux_H_D_conf);
  internal.aux_H_D_unconf = std::vector<real_type>(shared->dim_aux_H_D_unconf);
  internal.aux_H_R_conf = std::vector<real_type>(shared->dim_aux_H_R_conf);
  internal.aux_H_R_unconf = std::vector<real_type>(shared->dim_aux_H_R_unconf);
  internal.aux_ICU_D_conf = std::vector<real_type>(shared->dim_aux_ICU_D_conf);
  internal.aux_ICU_D_unconf = std::vector<real_type>(shared->dim_aux_ICU_D_unconf);
  internal.aux_ICU_W_D_conf = std::vector<real_type>(shared->dim_aux_ICU_W_D_conf);
  internal.aux_ICU_W_D_unconf = std::vector<real_type>(shared->dim_aux_ICU_W_D_unconf);
  internal.aux_ICU_W_R_conf = std::vector<real_type>(shared->dim_aux_ICU_W_R_conf);
  internal.aux_ICU_W_R_unconf = std::vector<real_type>(shared->dim_aux_ICU_W_R_unconf);
  internal.aux_ICU_pre_conf = std::vector<real_type>(shared->dim_aux_ICU_pre_conf);
  internal.aux_ICU_pre_unconf = std::vector<real_type>(shared->dim_aux_ICU_pre_unconf);
  internal.aux_W_D_conf = std::vector<real_type>(shared->dim_aux_W_D_conf);
  internal.aux_W_D_unconf = std::vector<real_type>(shared->dim_aux_W_D_unconf);
  internal.aux_W_R_conf = std::vector<real_type>(shared->dim_aux_W_R_conf);
  internal.aux_W_R_unconf = std::vector<real_type>(shared->dim_aux_W_R_unconf);
  internal.delta_D_hosp_disag = std::vector<real_type>(shared->dim_delta_D_hosp_disag);
  internal.delta_D_non_hosp_disag = std::vector<real_type>(shared->dim_delta_D_non_hosp_disag);
  internal.delta_diagnoses_admitted = std::vector<real_type>(shared->dim_delta_diagnoses_admitted);
  internal.delta_infections = std::vector<real_type>(shared->dim_delta_infections);
  shared->initial_D = std::vector<real_type>(shared->dim_D);
  shared->initial_D_hosp = std::vector<real_type>(shared->dim_D_hosp);
  shared->initial_E = std::vector<real_type>(shared->dim_E);
  shared->initial_G_D = std::vector<real_type>(shared->dim_G_D);
  shared->initial_HFR_disag_weighted_inc = std::vector<real_type>(shared->dim_HFR_disag_weighted_inc);
  shared->initial_H_D_conf = std::vector<real_type>(shared->dim_H_D_conf);
  shared->initial_H_D_unconf = std::vector<real_type>(shared->dim_H_D_unconf);
  shared->initial_H_R_conf = std::vector<real_type>(shared->dim_H_R_conf);
  shared->initial_H_R_unconf = std::vector<real_type>(shared->dim_H_R_unconf);
  shared->initial_ICU_D_conf = std::vector<real_type>(shared->dim_ICU_D_conf);
  shared->initial_ICU_D_unconf = std::vector<real_type>(shared->dim_ICU_D_unconf);
  shared->initial_ICU_W_D_conf = std::vector<real_type>(shared->dim_ICU_W_D_conf);
  shared->initial_ICU_W_D_unconf = std::vector<real_type>(shared->dim_ICU_W_D_unconf);
  shared->initial_ICU_W_R_conf = std::vector<real_type>(shared->dim_ICU_W_R_conf);
  shared->initial_ICU_W_R_unconf = std::vector<real_type>(shared->dim_ICU_W_R_unconf);
  shared->initial_ICU_pre_conf = std::vector<real_type>(shared->dim_ICU_pre_conf);
  shared->initial_ICU_pre_unconf = std::vector<real_type>(shared->dim_ICU_pre_unconf);
  shared->initial_IFR_disag_weighted_inc = std::vector<real_type>(shared->dim_IFR_disag_weighted_inc);
  shared->initial_IHR_disag_weighted_inc = std::vector<real_type>(shared->dim_IHR_disag_weighted_inc);
  shared->initial_I_A = std::vector<real_type>(shared->dim_I_A);
  shared->initial_I_C_1 = std::vector<real_type>(shared->dim_I_C_1);
  shared->initial_I_C_2 = std::vector<real_type>(shared->dim_I_C_2);
  shared->initial_I_P = std::vector<real_type>(shared->dim_I_P);
  shared->initial_I_weighted = std::vector<real_type>(shared->dim_I_weighted);
  shared->initial_R = std::vector<real_type>(shared->dim_R);
  shared->initial_S = std::vector<real_type>(shared->dim_S);
  shared->initial_T_PCR_neg = std::vector<real_type>(shared->dim_T_PCR_neg);
  shared->initial_T_PCR_pos = std::vector<real_type>(shared->dim_T_PCR_pos);
  shared->initial_T_PCR_pre = std::vector<real_type>(shared->dim_T_PCR_pre);
  shared->initial_T_sero_neg_1 = std::vector<real_type>(shared->dim_T_sero_neg_1);
  shared->initial_T_sero_neg_2 = std::vector<real_type>(shared->dim_T_sero_neg_2);
  shared->initial_T_sero_pos_1 = std::vector<real_type>(shared->dim_T_sero_pos_1);
  shared->initial_T_sero_pos_2 = std::vector<real_type>(shared->dim_T_sero_pos_2);
  shared->initial_T_sero_pre_1 = std::vector<real_type>(shared->dim_T_sero_pre_1);
  shared->initial_T_sero_pre_2 = std::vector<real_type>(shared->dim_T_sero_pre_2);
  shared->initial_W_D_conf = std::vector<real_type>(shared->dim_W_D_conf);
  shared->initial_W_D_unconf = std::vector<real_type>(shared->dim_W_D_unconf);
  shared->initial_W_R_conf = std::vector<real_type>(shared->dim_W_R_conf);
  shared->initial_W_R_unconf = std::vector<real_type>(shared->dim_W_R_unconf);
  shared->initial_cum_infections_disag = std::vector<real_type>(shared->dim_cum_infections_disag);
  shared->initial_cum_n_E_vacc_skip = std::vector<real_type>(shared->dim_cum_n_E_vacc_skip);
  shared->initial_cum_n_E_vaccinated = std::vector<real_type>(shared->dim_cum_n_E_vaccinated);
  shared->initial_cum_n_I_A_vacc_skip = std::vector<real_type>(shared->dim_cum_n_I_A_vacc_skip);
  shared->initial_cum_n_I_A_vaccinated = std::vector<real_type>(shared->dim_cum_n_I_A_vaccinated);
  shared->initial_cum_n_I_P_vacc_skip = std::vector<real_type>(shared->dim_cum_n_I_P_vacc_skip);
  shared->initial_cum_n_I_P_vaccinated = std::vector<real_type>(shared->dim_cum_n_I_P_vaccinated);
  shared->initial_cum_n_R_vacc_skip = std::vector<real_type>(shared->dim_cum_n_R_vacc_skip);
  shared->initial_cum_n_R_vaccinated = std::vector<real_type>(shared->dim_cum_n_R_vaccinated);
  shared->initial_cum_n_S_vacc_skip = std::vector<real_type>(shared->dim_cum_n_S_vacc_skip);
  shared->initial_cum_n_S_vaccinated = std::vector<real_type>(shared->dim_cum_n_S_vaccinated);
  shared->initial_cum_n_vacc_skip = std::vector<real_type>(shared->dim_cum_n_vacc_skip);
  shared->initial_cum_n_vaccinated = std::vector<real_type>(shared->dim_cum_n_vaccinated);
  shared->initial_diagnoses_admitted = std::vector<real_type>(shared->dim_diagnoses_admitted);
  shared->initial_effective_susceptible = std::vector<real_type>(shared->dim_effective_susceptible);
  shared->initial_hfr_strain = std::vector<real_type>(shared->dim_hfr_strain);
  shared->initial_ifr_strain = std::vector<real_type>(shared->dim_ifr_strain);
  shared->initial_ihr_strain = std::vector<real_type>(shared->dim_ihr_strain);
  shared->initial_prob_strain = std::vector<real_type>(shared->dim_prob_strain);
  shared->initial_protected_R_unvaccinated = std::vector<real_type>(shared->dim_protected_R_unvaccinated);
  shared->initial_protected_R_vaccinated = std::vector<real_type>(shared->dim_protected_R_vaccinated);
  shared->initial_protected_S_vaccinated = std::vector<real_type>(shared->dim_protected_S_vaccinated);
  shared->initial_tmp_vaccine_n_candidates = std::vector<real_type>(shared->dim_tmp_vaccine_n_candidates);
  shared->initial_tmp_vaccine_probability = std::vector<real_type>(shared->dim_tmp_vaccine_probability);
  shared->initial_vaccine_missed_doses = std::vector<real_type>(shared->dim_vaccine_missed_doses);
  internal.n_EI_A = std::vector<real_type>(shared->dim_n_EI_A);
  internal.n_EI_P = std::vector<real_type>(shared->dim_n_EI_P);
  internal.n_E_next_vacc_class = std::vector<real_type>(shared->dim_n_E_next_vacc_class);
  internal.n_E_progress = std::vector<real_type>(shared->dim_n_E_progress);
  internal.n_E_vacc_skip = std::vector<real_type>(shared->dim_n_E_vacc_skip);
  internal.n_E_vaccinated = std::vector<real_type>(shared->dim_n_E_vaccinated);
  internal.n_G_D_progress = std::vector<real_type>(shared->dim_n_G_D_progress);
  internal.n_H_D_conf_progress = std::vector<real_type>(shared->dim_n_H_D_conf_progress);
  internal.n_H_D_unconf_progress = std::vector<real_type>(shared->dim_n_H_D_unconf_progress);
  internal.n_H_D_unconf_to_conf = std::vector<real_type>(shared->dim_n_H_D_unconf_to_conf);
  internal.n_H_R_conf_progress = std::vector<real_type>(shared->dim_n_H_R_conf_progress);
  internal.n_H_R_unconf_progress = std::vector<real_type>(shared->dim_n_H_R_unconf_progress);
  internal.n_H_R_unconf_to_conf = std::vector<real_type>(shared->dim_n_H_R_unconf_to_conf);
  internal.n_ICU_D_conf_progress = std::vector<real_type>(shared->dim_n_ICU_D_conf_progress);
  internal.n_ICU_D_unconf_progress = std::vector<real_type>(shared->dim_n_ICU_D_unconf_progress);
  internal.n_ICU_D_unconf_to_conf = std::vector<real_type>(shared->dim_n_ICU_D_unconf_to_conf);
  internal.n_ICU_W_D_conf_progress = std::vector<real_type>(shared->dim_n_ICU_W_D_conf_progress);
  internal.n_ICU_W_D_unconf_progress = std::vector<real_type>(shared->dim_n_ICU_W_D_unconf_progress);
  internal.n_ICU_W_D_unconf_to_conf = std::vector<real_type>(shared->dim_n_ICU_W_D_unconf_to_conf);
  internal.n_ICU_W_R_conf_progress = std::vector<real_type>(shared->dim_n_ICU_W_R_conf_progress);
  internal.n_ICU_W_R_unconf_progress = std::vector<real_type>(shared->dim_n_ICU_W_R_unconf_progress);
  internal.n_ICU_W_R_unconf_to_conf = std::vector<real_type>(shared->dim_n_ICU_W_R_unconf_to_conf);
  internal.n_ICU_pre_conf_progress = std::vector<real_type>(shared->dim_n_ICU_pre_conf_progress);
  internal.n_ICU_pre_conf_to_ICU_D_conf = std::vector<real_type>(shared->dim_n_ICU_pre_conf_to_ICU_D_conf);
  internal.n_ICU_pre_conf_to_ICU_W_D_conf = std::vector<real_type>(shared->dim_n_ICU_pre_conf_to_ICU_W_D_conf);
  internal.n_ICU_pre_conf_to_ICU_W_R_conf = std::vector<real_type>(shared->dim_n_ICU_pre_conf_to_ICU_W_R_conf);
  internal.n_ICU_pre_unconf_progress = std::vector<real_type>(shared->dim_n_ICU_pre_unconf_progress);
  internal.n_ICU_pre_unconf_to_ICU_D_unconf = std::vector<real_type>(shared->dim_n_ICU_pre_unconf_to_ICU_D_unconf);
  internal.n_ICU_pre_unconf_to_ICU_W_D_unconf = std::vector<real_type>(shared->dim_n_ICU_pre_unconf_to_ICU_W_D_unconf);
  internal.n_ICU_pre_unconf_to_ICU_W_R_unconf = std::vector<real_type>(shared->dim_n_ICU_pre_unconf_to_ICU_W_R_unconf);
  internal.n_ICU_pre_unconf_to_conf = std::vector<real_type>(shared->dim_n_ICU_pre_unconf_to_conf);
  internal.n_I_A_next_vacc_class = std::vector<real_type>(shared->dim_n_I_A_next_vacc_class);
  internal.n_I_A_progress = std::vector<real_type>(shared->dim_n_I_A_progress);
  internal.n_I_A_vacc_skip = std::vector<real_type>(shared->dim_n_I_A_vacc_skip);
  internal.n_I_A_vaccinated = std::vector<real_type>(shared->dim_n_I_A_vaccinated);
  internal.n_I_C_1_progress = std::vector<real_type>(shared->dim_n_I_C_1_progress);
  internal.n_I_C_2_progress = std::vector<real_type>(shared->dim_n_I_C_2_progress);
  internal.n_I_C_2_to_G_D = std::vector<real_type>(shared->dim_n_I_C_2_to_G_D);
  internal.n_I_C_2_to_H_D = std::vector<real_type>(shared->dim_n_I_C_2_to_H_D);
  internal.n_I_C_2_to_H_D_conf = std::vector<real_type>(shared->dim_n_I_C_2_to_H_D_conf);
  internal.n_I_C_2_to_H_R = std::vector<real_type>(shared->dim_n_I_C_2_to_H_R);
  internal.n_I_C_2_to_H_R_conf = std::vector<real_type>(shared->dim_n_I_C_2_to_H_R_conf);
  internal.n_I_C_2_to_ICU_pre = std::vector<real_type>(shared->dim_n_I_C_2_to_ICU_pre);
  internal.n_I_C_2_to_ICU_pre_conf = std::vector<real_type>(shared->dim_n_I_C_2_to_ICU_pre_conf);
  internal.n_I_C_2_to_RS = std::vector<real_type>(shared->dim_n_I_C_2_to_RS);
  internal.n_I_C_2_to_hosp = std::vector<real_type>(shared->dim_n_I_C_2_to_hosp);
  internal.n_I_P_next_vacc_class = std::vector<real_type>(shared->dim_n_I_P_next_vacc_class);
  internal.n_I_P_progress = std::vector<real_type>(shared->dim_n_I_P_progress);
  internal.n_I_P_vacc_skip = std::vector<real_type>(shared->dim_n_I_P_vacc_skip);
  internal.n_I_P_vaccinated = std::vector<real_type>(shared->dim_n_I_P_vaccinated);
  internal.n_R5_to_E3 = std::vector<real_type>(shared->dim_n_R5_to_E3);
  internal.n_RE = std::vector<real_type>(shared->dim_n_RE);
  internal.n_RS = std::vector<real_type>(shared->dim_n_RS);
  internal.n_R_next_vacc_class = std::vector<real_type>(shared->dim_n_R_next_vacc_class);
  internal.n_R_progress = std::vector<real_type>(shared->dim_n_R_progress);
  internal.n_R_tmp = std::vector<real_type>(shared->dim_n_R_tmp);
  internal.n_R_vacc_skip = std::vector<real_type>(shared->dim_n_R_vacc_skip);
  internal.n_R_vaccinated = std::vector<real_type>(shared->dim_n_R_vaccinated);
  internal.n_S_next_vacc_class = std::vector<real_type>(shared->dim_n_S_next_vacc_class);
  internal.n_S_progress = std::vector<real_type>(shared->dim_n_S_progress);
  internal.n_S_progress_tot = std::vector<real_type>(shared->dim_n_S_progress_tot);
  internal.n_S_vacc_skip = std::vector<real_type>(shared->dim_n_S_vacc_skip);
  internal.n_S_vaccinated = std::vector<real_type>(shared->dim_n_S_vaccinated);
  internal.n_T_PCR_pos_progress = std::vector<real_type>(shared->dim_n_T_PCR_pos_progress);
  internal.n_T_PCR_pre_progress = std::vector<real_type>(shared->dim_n_T_PCR_pre_progress);
  internal.n_T_sero_pos_1_progress = std::vector<real_type>(shared->dim_n_T_sero_pos_1_progress);
  internal.n_T_sero_pos_2_progress = std::vector<real_type>(shared->dim_n_T_sero_pos_2_progress);
  internal.n_T_sero_pre_1_progress = std::vector<real_type>(shared->dim_n_T_sero_pre_1_progress);
  internal.n_T_sero_pre_1_to_T_sero_pos_1 = std::vector<real_type>(shared->dim_n_T_sero_pre_1_to_T_sero_pos_1);
  internal.n_T_sero_pre_2_progress = std::vector<real_type>(shared->dim_n_T_sero_pre_2_progress);
  internal.n_T_sero_pre_2_to_T_sero_pos_2 = std::vector<real_type>(shared->dim_n_T_sero_pre_2_to_T_sero_pos_2);
  internal.n_W_D_conf_progress = std::vector<real_type>(shared->dim_n_W_D_conf_progress);
  internal.n_W_D_unconf_progress = std::vector<real_type>(shared->dim_n_W_D_unconf_progress);
  internal.n_W_D_unconf_to_conf = std::vector<real_type>(shared->dim_n_W_D_unconf_to_conf);
  internal.n_W_R_conf_progress = std::vector<real_type>(shared->dim_n_W_R_conf_progress);
  internal.n_W_R_unconf_progress = std::vector<real_type>(shared->dim_n_W_R_unconf_progress);
  internal.n_W_R_unconf_to_conf = std::vector<real_type>(shared->dim_n_W_R_unconf_to_conf);
  internal.n_com_to_T_sero_pre = std::vector<real_type>(shared->dim_n_com_to_T_sero_pre);
  internal.n_hosp_non_ICU = std::vector<real_type>(shared->dim_n_hosp_non_ICU);
  internal.n_infected_to_R = std::vector<real_type>(shared->dim_n_infected_to_R);
  internal.n_infected_to_S = std::vector<real_type>(shared->dim_n_infected_to_S);
  internal.n_infection_end = std::vector<real_type>(shared->dim_n_infection_end);
  internal.n_vacc_skip = std::vector<real_type>(shared->dim_n_vacc_skip);
  internal.n_vaccinated = std::vector<real_type>(shared->dim_n_vaccinated);
  internal.new_E = std::vector<real_type>(shared->dim_new_E);
  internal.new_G_D = std::vector<real_type>(shared->dim_new_G_D);
  internal.new_HFR_disag_weighted_inc = std::vector<real_type>(shared->dim_new_HFR_disag_weighted_inc);
  internal.new_H_D_conf = std::vector<real_type>(shared->dim_new_H_D_conf);
  internal.new_H_D_unconf = std::vector<real_type>(shared->dim_new_H_D_unconf);
  internal.new_H_R_conf = std::vector<real_type>(shared->dim_new_H_R_conf);
  internal.new_H_R_unconf = std::vector<real_type>(shared->dim_new_H_R_unconf);
  internal.new_ICU_D_conf = std::vector<real_type>(shared->dim_new_ICU_D_conf);
  internal.new_ICU_D_unconf = std::vector<real_type>(shared->dim_new_ICU_D_unconf);
  internal.new_ICU_W_D_conf = std::vector<real_type>(shared->dim_new_ICU_W_D_conf);
  internal.new_ICU_W_D_unconf = std::vector<real_type>(shared->dim_new_ICU_W_D_unconf);
  internal.new_ICU_W_R_conf = std::vector<real_type>(shared->dim_new_ICU_W_R_conf);
  internal.new_ICU_W_R_unconf = std::vector<real_type>(shared->dim_new_ICU_W_R_unconf);
  internal.new_ICU_pre_conf = std::vector<real_type>(shared->dim_new_ICU_pre_conf);
  internal.new_ICU_pre_unconf = std::vector<real_type>(shared->dim_new_ICU_pre_unconf);
  internal.new_IFR_disag_weighted_inc = std::vector<real_type>(shared->dim_new_IFR_disag_weighted_inc);
  internal.new_IHR_disag_weighted_inc = std::vector<real_type>(shared->dim_new_IHR_disag_weighted_inc);
  internal.new_I_A = std::vector<real_type>(shared->dim_new_I_A);
  internal.new_I_C_1 = std::vector<real_type>(shared->dim_new_I_C_1);
  internal.new_I_C_2 = std::vector<real_type>(shared->dim_new_I_C_2);
  internal.new_I_P = std::vector<real_type>(shared->dim_new_I_P);
  internal.new_I_weighted = std::vector<real_type>(shared->dim_new_I_weighted);
  internal.new_R = std::vector<real_type>(shared->dim_new_R);
  internal.new_S = std::vector<real_type>(shared->dim_new_S);
  internal.new_T_PCR_neg = std::vector<real_type>(shared->dim_new_T_PCR_neg);
  internal.new_T_PCR_pos = std::vector<real_type>(shared->dim_new_T_PCR_pos);
  internal.new_T_PCR_pre = std::vector<real_type>(shared->dim_new_T_PCR_pre);
  internal.new_T_sero_neg_1 = std::vector<real_type>(shared->dim_new_T_sero_neg_1);
  internal.new_T_sero_neg_2 = std::vector<real_type>(shared->dim_new_T_sero_neg_2);
  internal.new_T_sero_pos_1 = std::vector<real_type>(shared->dim_new_T_sero_pos_1);
  internal.new_T_sero_pos_2 = std::vector<real_type>(shared->dim_new_T_sero_pos_2);
  internal.new_T_sero_pre_1 = std::vector<real_type>(shared->dim_new_T_sero_pre_1);
  internal.new_T_sero_pre_2 = std::vector<real_type>(shared->dim_new_T_sero_pre_2);
  internal.new_W_D_conf = std::vector<real_type>(shared->dim_new_W_D_conf);
  internal.new_W_D_unconf = std::vector<real_type>(shared->dim_new_W_D_unconf);
  internal.new_W_R_conf = std::vector<real_type>(shared->dim_new_W_R_conf);
  internal.new_W_R_unconf = std::vector<real_type>(shared->dim_new_W_R_unconf);
  internal.p_C = std::vector<real_type>(shared->dim_p_C);
  internal.p_E_next_vacc_class = std::vector<real_type>(shared->dim_p_E_next_vacc_class);
  internal.p_E_vacc_skip = std::vector<real_type>(shared->dim_p_E_vacc_skip);
  internal.p_G_D = std::vector<real_type>(shared->dim_p_G_D);
  internal.p_H = std::vector<real_type>(shared->dim_p_H);
  internal.p_H_D = std::vector<real_type>(shared->dim_p_H_D);
  internal.p_ICU = std::vector<real_type>(shared->dim_p_ICU);
  internal.p_ICU_D = std::vector<real_type>(shared->dim_p_ICU_D);
  internal.p_I_A_next_vacc_class = std::vector<real_type>(shared->dim_p_I_A_next_vacc_class);
  internal.p_I_A_vacc_skip = std::vector<real_type>(shared->dim_p_I_A_vacc_skip);
  internal.p_I_P_next_vacc_class = std::vector<real_type>(shared->dim_p_I_P_next_vacc_class);
  internal.p_I_P_vacc_skip = std::vector<real_type>(shared->dim_p_I_P_vacc_skip);
  internal.p_R = std::vector<real_type>(shared->dim_p_R);
  internal.p_R5_to_E3 = std::vector<real_type>(shared->dim_p_R5_to_E3);
  internal.p_RS = std::vector<real_type>(shared->dim_p_RS);
  internal.p_R_next_vacc_class = std::vector<real_type>(shared->dim_p_R_next_vacc_class);
  internal.p_R_progress = std::vector<real_type>(shared->dim_p_R_progress);
  internal.p_R_vacc_skip = std::vector<real_type>(shared->dim_p_R_vacc_skip);
  internal.p_SE = std::vector<real_type>(shared->dim_p_SE);
  internal.p_S_next_vacc_class = std::vector<real_type>(shared->dim_p_S_next_vacc_class);
  internal.p_S_vacc_skip = std::vector<real_type>(shared->dim_p_S_vacc_skip);
  internal.p_W_D = std::vector<real_type>(shared->dim_p_W_D);
  internal.rate_R_progress = std::vector<real_type>(shared->dim_rate_R_progress);
  internal.s_ij = std::vector<real_type>(shared->dim_s_ij);
  internal.total_attempted_doses = std::vector<real_type>(shared->dim_total_attempted_doses);
  internal.vacc_skip_attempted_doses = std::vector<real_type>(shared->dim_vacc_skip_attempted_doses);
  internal.vacc_skip_n_candidates = std::vector<real_type>(shared->dim_vacc_skip_n_candidates);
  internal.vacc_skip_probability = std::vector<real_type>(shared->dim_vacc_skip_probability);
  internal.vaccine_attempted_doses = std::vector<real_type>(shared->dim_vaccine_attempted_doses);
  internal.vaccine_n_candidates = std::vector<real_type>(shared->dim_vaccine_n_candidates);
  internal.vaccine_probability = std::vector<real_type>(shared->dim_vaccine_probability);
  internal.vaccine_probability_doses = std::vector<real_type>(shared->dim_vaccine_probability_doses);
  shared->cross_immunity = user_get_array_fixed<real_type, 1>(user, "cross_immunity", shared->cross_immunity, {shared->dim_cross_immunity}, NA_REAL, NA_REAL);
  shared->dim_eff_sus_R = shared->dim_eff_sus_R_1 * shared->dim_eff_sus_R_2 * shared->dim_eff_sus_R_3;
  shared->dim_eff_sus_R_12 = shared->dim_eff_sus_R_1 * shared->dim_eff_sus_R_2;
  shared->dim_eff_sus_S = shared->dim_eff_sus_S_1 * shared->dim_eff_sus_S_2 * shared->dim_eff_sus_S_3;
  shared->dim_eff_sus_S_12 = shared->dim_eff_sus_S_1 * shared->dim_eff_sus_S_2;
  shared->dim_lambda = shared->dim_lambda_1 * shared->dim_lambda_2;
  shared->dim_lambda_susc = shared->dim_lambda_susc_1 * shared->dim_lambda_susc_2 * shared->dim_lambda_susc_3;
  shared->dim_lambda_susc_12 = shared->dim_lambda_susc_1 * shared->dim_lambda_susc_2;
  shared->dim_rate_RE_progress = shared->dim_rate_RE_progress_1 * shared->dim_rate_RE_progress_2 * shared->dim_rate_RE_progress_3;
  shared->dim_rate_RE_progress_12 = shared->dim_rate_RE_progress_1 * shared->dim_rate_RE_progress_2;
  shared->dim_rel_foi_strain = shared->dim_rel_foi_strain_1 * shared->dim_rel_foi_strain_2 * shared->dim_rel_foi_strain_3;
  shared->dim_rel_foi_strain_12 = shared->dim_rel_foi_strain_1 * shared->dim_rel_foi_strain_2;
  for (int i = 1; i <= shared->dim_D_1; ++i) {
    for (int j = 1; j <= shared->dim_D_2; ++j) {
      shared->initial_D[i - 1 + shared->dim_D_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_D_hosp_1; ++i) {
    for (int j = 1; j <= shared->dim_D_hosp_2; ++j) {
      shared->initial_D_hosp[i - 1 + shared->dim_D_hosp_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_E_1; ++i) {
    for (int j = 1; j <= shared->dim_E_2; ++j) {
      for (int k = 1; k <= shared->dim_E_3; ++k) {
        for (int l = 1; l <= shared->dim_E_4; ++l) {
          shared->initial_E[i - 1 + shared->dim_E_1 * (j - 1) + shared->dim_E_12 * (k - 1) + shared->dim_E_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_G_D_1; ++i) {
    for (int j = 1; j <= shared->dim_G_D_2; ++j) {
      for (int k = 1; k <= shared->dim_G_D_3; ++k) {
        for (int l = 1; l <= shared->dim_G_D_4; ++l) {
          shared->initial_G_D[i - 1 + shared->dim_G_D_1 * (j - 1) + shared->dim_G_D_12 * (k - 1) + shared->dim_G_D_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_HFR_disag_weighted_inc_1; ++i) {
    for (int j = 1; j <= shared->dim_HFR_disag_weighted_inc_2; ++j) {
      for (int k = 1; k <= shared->dim_HFR_disag_weighted_inc_3; ++k) {
        shared->initial_HFR_disag_weighted_inc[i - 1 + shared->dim_HFR_disag_weighted_inc_1 * (j - 1) + shared->dim_HFR_disag_weighted_inc_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_H_D_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_H_D_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_H_D_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_H_D_conf_4; ++l) {
          shared->initial_H_D_conf[i - 1 + shared->dim_H_D_conf_1 * (j - 1) + shared->dim_H_D_conf_12 * (k - 1) + shared->dim_H_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_H_D_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_H_D_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_H_D_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_H_D_unconf_4; ++l) {
          shared->initial_H_D_unconf[i - 1 + shared->dim_H_D_unconf_1 * (j - 1) + shared->dim_H_D_unconf_12 * (k - 1) + shared->dim_H_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_H_R_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_H_R_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_H_R_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_H_R_conf_4; ++l) {
          shared->initial_H_R_conf[i - 1 + shared->dim_H_R_conf_1 * (j - 1) + shared->dim_H_R_conf_12 * (k - 1) + shared->dim_H_R_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_H_R_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_H_R_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_H_R_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_H_R_unconf_4; ++l) {
          shared->initial_H_R_unconf[i - 1 + shared->dim_H_R_unconf_1 * (j - 1) + shared->dim_H_R_unconf_12 * (k - 1) + shared->dim_H_R_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_D_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_D_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_D_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_D_conf_4; ++l) {
          shared->initial_ICU_D_conf[i - 1 + shared->dim_ICU_D_conf_1 * (j - 1) + shared->dim_ICU_D_conf_12 * (k - 1) + shared->dim_ICU_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_D_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_D_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_D_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_D_unconf_4; ++l) {
          shared->initial_ICU_D_unconf[i - 1 + shared->dim_ICU_D_unconf_1 * (j - 1) + shared->dim_ICU_D_unconf_12 * (k - 1) + shared->dim_ICU_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_W_D_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_W_D_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_W_D_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_W_D_conf_4; ++l) {
          shared->initial_ICU_W_D_conf[i - 1 + shared->dim_ICU_W_D_conf_1 * (j - 1) + shared->dim_ICU_W_D_conf_12 * (k - 1) + shared->dim_ICU_W_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_W_D_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_W_D_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_W_D_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_W_D_unconf_4; ++l) {
          shared->initial_ICU_W_D_unconf[i - 1 + shared->dim_ICU_W_D_unconf_1 * (j - 1) + shared->dim_ICU_W_D_unconf_12 * (k - 1) + shared->dim_ICU_W_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_W_R_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_W_R_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_W_R_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_W_R_conf_4; ++l) {
          shared->initial_ICU_W_R_conf[i - 1 + shared->dim_ICU_W_R_conf_1 * (j - 1) + shared->dim_ICU_W_R_conf_12 * (k - 1) + shared->dim_ICU_W_R_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_W_R_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_W_R_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_W_R_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_W_R_unconf_4; ++l) {
          shared->initial_ICU_W_R_unconf[i - 1 + shared->dim_ICU_W_R_unconf_1 * (j - 1) + shared->dim_ICU_W_R_unconf_12 * (k - 1) + shared->dim_ICU_W_R_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_pre_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_pre_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_pre_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_pre_conf_4; ++l) {
          shared->initial_ICU_pre_conf[i - 1 + shared->dim_ICU_pre_conf_1 * (j - 1) + shared->dim_ICU_pre_conf_12 * (k - 1) + shared->dim_ICU_pre_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_ICU_pre_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_ICU_pre_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_ICU_pre_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_ICU_pre_unconf_4; ++l) {
          shared->initial_ICU_pre_unconf[i - 1 + shared->dim_ICU_pre_unconf_1 * (j - 1) + shared->dim_ICU_pre_unconf_12 * (k - 1) + shared->dim_ICU_pre_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_IFR_disag_weighted_inc_1; ++i) {
    for (int j = 1; j <= shared->dim_IFR_disag_weighted_inc_2; ++j) {
      for (int k = 1; k <= shared->dim_IFR_disag_weighted_inc_3; ++k) {
        shared->initial_IFR_disag_weighted_inc[i - 1 + shared->dim_IFR_disag_weighted_inc_1 * (j - 1) + shared->dim_IFR_disag_weighted_inc_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_IHR_disag_weighted_inc_1; ++i) {
    for (int j = 1; j <= shared->dim_IHR_disag_weighted_inc_2; ++j) {
      for (int k = 1; k <= shared->dim_IHR_disag_weighted_inc_3; ++k) {
        shared->initial_IHR_disag_weighted_inc[i - 1 + shared->dim_IHR_disag_weighted_inc_1 * (j - 1) + shared->dim_IHR_disag_weighted_inc_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_I_A_1; ++i) {
    for (int j = 1; j <= shared->dim_I_A_2; ++j) {
      for (int k = 1; k <= shared->dim_I_A_3; ++k) {
        for (int l = 1; l <= shared->dim_I_A_4; ++l) {
          shared->initial_I_A[i - 1 + shared->dim_I_A_1 * (j - 1) + shared->dim_I_A_12 * (k - 1) + shared->dim_I_A_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_I_C_1_1; ++i) {
    for (int j = 1; j <= shared->dim_I_C_1_2; ++j) {
      for (int k = 1; k <= shared->dim_I_C_1_3; ++k) {
        for (int l = 1; l <= shared->dim_I_C_1_4; ++l) {
          shared->initial_I_C_1[i - 1 + shared->dim_I_C_1_1 * (j - 1) + shared->dim_I_C_1_12 * (k - 1) + shared->dim_I_C_1_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_I_C_2_1; ++i) {
    for (int j = 1; j <= shared->dim_I_C_2_2; ++j) {
      for (int k = 1; k <= shared->dim_I_C_2_3; ++k) {
        for (int l = 1; l <= shared->dim_I_C_2_4; ++l) {
          shared->initial_I_C_2[i - 1 + shared->dim_I_C_2_1 * (j - 1) + shared->dim_I_C_2_12 * (k - 1) + shared->dim_I_C_2_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_I_P_1; ++i) {
    for (int j = 1; j <= shared->dim_I_P_2; ++j) {
      for (int k = 1; k <= shared->dim_I_P_3; ++k) {
        for (int l = 1; l <= shared->dim_I_P_4; ++l) {
          shared->initial_I_P[i - 1 + shared->dim_I_P_1 * (j - 1) + shared->dim_I_P_12 * (k - 1) + shared->dim_I_P_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_I_weighted_1; ++i) {
    for (int j = 1; j <= shared->dim_I_weighted_2; ++j) {
      for (int k = 1; k <= shared->dim_I_weighted_3; ++k) {
        shared->initial_I_weighted[i - 1 + shared->dim_I_weighted_1 * (j - 1) + shared->dim_I_weighted_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_R_1; ++i) {
    for (int j = 1; j <= shared->dim_R_2; ++j) {
      for (int k = 1; k <= shared->dim_R_3; ++k) {
        shared->initial_R[i - 1 + shared->dim_R_1 * (j - 1) + shared->dim_R_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_S_1; ++i) {
    for (int j = 1; j <= shared->dim_S_2; ++j) {
      shared->initial_S[i - 1 + shared->dim_S_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_T_PCR_neg_1; ++i) {
    for (int j = 1; j <= shared->dim_T_PCR_neg_2; ++j) {
      for (int k = 1; k <= shared->dim_T_PCR_neg_3; ++k) {
        shared->initial_T_PCR_neg[i - 1 + shared->dim_T_PCR_neg_1 * (j - 1) + shared->dim_T_PCR_neg_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_PCR_pos_1; ++i) {
    for (int j = 1; j <= shared->dim_T_PCR_pos_2; ++j) {
      for (int k = 1; k <= shared->dim_T_PCR_pos_3; ++k) {
        for (int l = 1; l <= shared->dim_T_PCR_pos_4; ++l) {
          shared->initial_T_PCR_pos[i - 1 + shared->dim_T_PCR_pos_1 * (j - 1) + shared->dim_T_PCR_pos_12 * (k - 1) + shared->dim_T_PCR_pos_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_PCR_pre_1; ++i) {
    for (int j = 1; j <= shared->dim_T_PCR_pre_2; ++j) {
      for (int k = 1; k <= shared->dim_T_PCR_pre_3; ++k) {
        for (int l = 1; l <= shared->dim_T_PCR_pre_4; ++l) {
          shared->initial_T_PCR_pre[i - 1 + shared->dim_T_PCR_pre_1 * (j - 1) + shared->dim_T_PCR_pre_12 * (k - 1) + shared->dim_T_PCR_pre_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_sero_neg_1_1; ++i) {
    for (int j = 1; j <= shared->dim_T_sero_neg_1_2; ++j) {
      for (int k = 1; k <= shared->dim_T_sero_neg_1_3; ++k) {
        shared->initial_T_sero_neg_1[i - 1 + shared->dim_T_sero_neg_1_1 * (j - 1) + shared->dim_T_sero_neg_1_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_sero_neg_2_1; ++i) {
    for (int j = 1; j <= shared->dim_T_sero_neg_2_2; ++j) {
      for (int k = 1; k <= shared->dim_T_sero_neg_2_3; ++k) {
        shared->initial_T_sero_neg_2[i - 1 + shared->dim_T_sero_neg_2_1 * (j - 1) + shared->dim_T_sero_neg_2_12 * (k - 1)] = 0;
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_sero_pos_1_1; ++i) {
    for (int j = 1; j <= shared->dim_T_sero_pos_1_2; ++j) {
      for (int k = 1; k <= shared->dim_T_sero_pos_1_3; ++k) {
        for (int l = 1; l <= shared->dim_T_sero_pos_1_4; ++l) {
          shared->initial_T_sero_pos_1[i - 1 + shared->dim_T_sero_pos_1_1 * (j - 1) + shared->dim_T_sero_pos_1_12 * (k - 1) + shared->dim_T_sero_pos_1_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_sero_pos_2_1; ++i) {
    for (int j = 1; j <= shared->dim_T_sero_pos_2_2; ++j) {
      for (int k = 1; k <= shared->dim_T_sero_pos_2_3; ++k) {
        for (int l = 1; l <= shared->dim_T_sero_pos_2_4; ++l) {
          shared->initial_T_sero_pos_2[i - 1 + shared->dim_T_sero_pos_2_1 * (j - 1) + shared->dim_T_sero_pos_2_12 * (k - 1) + shared->dim_T_sero_pos_2_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_sero_pre_1_1; ++i) {
    for (int j = 1; j <= shared->dim_T_sero_pre_1_2; ++j) {
      for (int k = 1; k <= shared->dim_T_sero_pre_1_3; ++k) {
        for (int l = 1; l <= shared->dim_T_sero_pre_1_4; ++l) {
          shared->initial_T_sero_pre_1[i - 1 + shared->dim_T_sero_pre_1_1 * (j - 1) + shared->dim_T_sero_pre_1_12 * (k - 1) + shared->dim_T_sero_pre_1_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_T_sero_pre_2_1; ++i) {
    for (int j = 1; j <= shared->dim_T_sero_pre_2_2; ++j) {
      for (int k = 1; k <= shared->dim_T_sero_pre_2_3; ++k) {
        for (int l = 1; l <= shared->dim_T_sero_pre_2_4; ++l) {
          shared->initial_T_sero_pre_2[i - 1 + shared->dim_T_sero_pre_2_1 * (j - 1) + shared->dim_T_sero_pre_2_12 * (k - 1) + shared->dim_T_sero_pre_2_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_W_D_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_W_D_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_W_D_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_W_D_conf_4; ++l) {
          shared->initial_W_D_conf[i - 1 + shared->dim_W_D_conf_1 * (j - 1) + shared->dim_W_D_conf_12 * (k - 1) + shared->dim_W_D_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_W_D_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_W_D_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_W_D_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_W_D_unconf_4; ++l) {
          shared->initial_W_D_unconf[i - 1 + shared->dim_W_D_unconf_1 * (j - 1) + shared->dim_W_D_unconf_12 * (k - 1) + shared->dim_W_D_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_W_R_conf_1; ++i) {
    for (int j = 1; j <= shared->dim_W_R_conf_2; ++j) {
      for (int k = 1; k <= shared->dim_W_R_conf_3; ++k) {
        for (int l = 1; l <= shared->dim_W_R_conf_4; ++l) {
          shared->initial_W_R_conf[i - 1 + shared->dim_W_R_conf_1 * (j - 1) + shared->dim_W_R_conf_12 * (k - 1) + shared->dim_W_R_conf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_W_R_unconf_1; ++i) {
    for (int j = 1; j <= shared->dim_W_R_unconf_2; ++j) {
      for (int k = 1; k <= shared->dim_W_R_unconf_3; ++k) {
        for (int l = 1; l <= shared->dim_W_R_unconf_4; ++l) {
          shared->initial_W_R_unconf[i - 1 + shared->dim_W_R_unconf_1 * (j - 1) + shared->dim_W_R_unconf_12 * (k - 1) + shared->dim_W_R_unconf_123 * (l - 1)] = 0;
        }
      }
    }
  }
  for (int i = 1; i <= shared->dim_cum_infections_disag_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_infections_disag_2; ++j) {
      shared->initial_cum_infections_disag[i - 1 + shared->dim_cum_infections_disag_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_E_vacc_skip_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_E_vacc_skip_2; ++j) {
      shared->initial_cum_n_E_vacc_skip[i - 1 + shared->dim_cum_n_E_vacc_skip_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_E_vaccinated_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_E_vaccinated_2; ++j) {
      shared->initial_cum_n_E_vaccinated[i - 1 + shared->dim_cum_n_E_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_I_A_vacc_skip_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_I_A_vacc_skip_2; ++j) {
      shared->initial_cum_n_I_A_vacc_skip[i - 1 + shared->dim_cum_n_I_A_vacc_skip_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_I_A_vaccinated_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_I_A_vaccinated_2; ++j) {
      shared->initial_cum_n_I_A_vaccinated[i - 1 + shared->dim_cum_n_I_A_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_I_P_vacc_skip_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_I_P_vacc_skip_2; ++j) {
      shared->initial_cum_n_I_P_vacc_skip[i - 1 + shared->dim_cum_n_I_P_vacc_skip_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_I_P_vaccinated_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_I_P_vaccinated_2; ++j) {
      shared->initial_cum_n_I_P_vaccinated[i - 1 + shared->dim_cum_n_I_P_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_R_vacc_skip_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_R_vacc_skip_2; ++j) {
      shared->initial_cum_n_R_vacc_skip[i - 1 + shared->dim_cum_n_R_vacc_skip_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_R_vaccinated_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_R_vaccinated_2; ++j) {
      shared->initial_cum_n_R_vaccinated[i - 1 + shared->dim_cum_n_R_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_S_vacc_skip_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_S_vacc_skip_2; ++j) {
      shared->initial_cum_n_S_vacc_skip[i - 1 + shared->dim_cum_n_S_vacc_skip_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_S_vaccinated_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_S_vaccinated_2; ++j) {
      shared->initial_cum_n_S_vaccinated[i - 1 + shared->dim_cum_n_S_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_vacc_skip_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_vacc_skip_2; ++j) {
      shared->initial_cum_n_vacc_skip[i - 1 + shared->dim_cum_n_vacc_skip_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_cum_n_vaccinated_1; ++i) {
    for (int j = 1; j <= shared->dim_cum_n_vaccinated_2; ++j) {
      shared->initial_cum_n_vaccinated[i - 1 + shared->dim_cum_n_vaccinated_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_diagnoses_admitted_1; ++i) {
    for (int j = 1; j <= shared->dim_diagnoses_admitted_2; ++j) {
      shared->initial_diagnoses_admitted[i - 1 + shared->dim_diagnoses_admitted_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_effective_susceptible; ++i) {
    shared->initial_effective_susceptible[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_hfr_strain; ++i) {
    
  }
  for (int i = 1; i <= shared->dim_ifr_strain; ++i) {
    
  }
  for (int i = 1; i <= shared->dim_ihr_strain; ++i) {
    
  }
  for (int i = 1; i <= shared->n_real_strains; ++i) {
    shared->initial_prob_strain[i - 1] = 0;
  }
  {
     int i = 1;
     shared->initial_prob_strain[i - 1] = 1;
  }
  for (int i = 1; i <= shared->dim_protected_R_unvaccinated; ++i) {
    shared->initial_protected_R_unvaccinated[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_protected_R_vaccinated; ++i) {
    shared->initial_protected_R_vaccinated[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_protected_S_vaccinated; ++i) {
    shared->initial_protected_S_vaccinated[i - 1] = 0;
  }
  for (int i = 1; i <= shared->dim_tmp_vaccine_n_candidates_1; ++i) {
    for (int j = 1; j <= shared->dim_tmp_vaccine_n_candidates_2; ++j) {
      shared->initial_tmp_vaccine_n_candidates[i - 1 + shared->dim_tmp_vaccine_n_candidates_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_tmp_vaccine_probability_1; ++i) {
    for (int j = 1; j <= shared->dim_tmp_vaccine_probability_2; ++j) {
      shared->initial_tmp_vaccine_probability[i - 1 + shared->dim_tmp_vaccine_probability_1 * (j - 1)] = 0;
    }
  }
  for (int i = 1; i <= shared->dim_vaccine_missed_doses_1; ++i) {
    for (int j = 1; j <= shared->dim_vaccine_missed_doses_2; ++j) {
      shared->initial_vaccine_missed_doses[i - 1 + shared->dim_vaccine_missed_doses_1 * (j - 1)] = 0;
    }
  }
  shared->m = user_get_array_fixed<real_type, 2>(user, "m", shared->m, {shared->dim_m_1, shared->dim_m_2}, NA_REAL, NA_REAL);
  shared->offset_variable_D = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_D_hosp = shared->dim_D + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_S + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_E = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_HFR_disag_weighted_inc + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_G_D = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_HFR_disag_weighted_inc + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_HFR_disag_weighted_inc = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_IHR_disag_weighted_inc + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_H_D_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_H_D_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_H_R_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_H_R_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_D_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_D_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_W_D_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_W_D_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_W_R_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_W_R_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_pre_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_ICU_pre_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_IFR_disag_weighted_inc = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_HFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_IHR_disag_weighted_inc = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_I_A = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_HFR_disag_weighted_inc + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_I_C_1 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_HFR_disag_weighted_inc + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_I_C_2 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_HFR_disag_weighted_inc + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_I_P = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_HFR_disag_weighted_inc + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_I_weighted = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_R = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_S + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_S = shared->dim_D + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_T_PCR_neg = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_PCR_pos = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_PCR_pre + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_T_sero_pos_1 + shared->dim_T_sero_pos_2 + shared->dim_T_sero_pre_1 + shared->dim_T_sero_pre_2 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_PCR_pre = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_T_sero_pos_1 + shared->dim_T_sero_pos_2 + shared->dim_T_sero_pre_1 + shared->dim_T_sero_pre_2 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_sero_neg_1 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_S + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_sero_neg_2 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_S + shared->dim_T_sero_neg_1 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_sero_pos_1 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_T_sero_pre_1 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_sero_pos_2 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_T_sero_pos_1 + shared->dim_T_sero_pre_1 + shared->dim_T_sero_pre_2 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_sero_pre_1 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_T_sero_pre_2 = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_T_sero_pos_1 + shared->dim_T_sero_pre_1 + shared->dim_W_D_conf + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_W_D_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_W_D_unconf + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_W_D_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_W_R_conf + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_W_R_conf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_W_R_unconf + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_W_R_unconf = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_E + shared->dim_G_D + shared->dim_HFR_disag_weighted_inc + shared->dim_H_D_conf + shared->dim_H_D_unconf + shared->dim_H_R_conf + shared->dim_H_R_unconf + shared->dim_ICU_D_conf + shared->dim_ICU_D_unconf + shared->dim_ICU_W_D_conf + shared->dim_ICU_W_D_unconf + shared->dim_ICU_W_R_conf + shared->dim_ICU_W_R_unconf + shared->dim_ICU_pre_conf + shared->dim_ICU_pre_unconf + shared->dim_IFR_disag_weighted_inc + shared->dim_IHR_disag_weighted_inc + shared->dim_I_A + shared->dim_I_C_1 + shared->dim_I_C_2 + shared->dim_I_P + shared->dim_I_weighted + shared->dim_N_tot + shared->dim_R + shared->dim_S + shared->dim_T_PCR_neg + shared->dim_T_sero_neg_1 + shared->dim_T_sero_neg_2 + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_tmp_vaccine_probability + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_cum_infections_disag = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_E_vacc_skip = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_E_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_S_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_I_A_vacc_skip = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_I_A_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_S_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_I_P_vacc_skip = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_I_P_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_S_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_R_vacc_skip = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_R_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_S_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_S_vacc_skip = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_S_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_vacc_skip = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_cum_n_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_diagnoses_admitted = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_effective_susceptible = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + 90;
  shared->offset_variable_hfr_age = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_hfr_strain = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_strain + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_ifr_age = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_strain + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_ifr_strain = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_ihr_age = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_ihr_strain = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_protected_R_unvaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_protected_R_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->offset_variable_protected_S_vaccinated = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_recovered + 90;
  shared->offset_variable_recovered = shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_cum_admit_by_age + shared->dim_cum_infections_strain + shared->dim_effective_susceptible + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + 90;
  shared->offset_variable_tmp_vaccine_n_candidates = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_S + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_tmp_vaccine_probability = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_S + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + shared->dim_tmp_vaccine_n_candidates + shared->dim_vaccine_missed_doses + 90;
  shared->offset_variable_vaccine_missed_doses = shared->dim_D + shared->dim_D_hosp + shared->dim_D_non_hosp + shared->dim_N_tot + shared->dim_S + shared->dim_cum_admit_by_age + shared->dim_cum_infections_disag + shared->dim_cum_infections_strain + shared->dim_cum_n_E_vacc_skip + shared->dim_cum_n_E_vaccinated + shared->dim_cum_n_I_A_vacc_skip + shared->dim_cum_n_I_A_vaccinated + shared->dim_cum_n_I_P_vacc_skip + shared->dim_cum_n_I_P_vaccinated + shared->dim_cum_n_R_vacc_skip + shared->dim_cum_n_R_vaccinated + shared->dim_cum_n_S_vacc_skip + shared->dim_cum_n_S_vaccinated + shared->dim_cum_n_vacc_skip + shared->dim_cum_n_vaccinated + shared->dim_diagnoses_admitted + shared->dim_effective_susceptible + shared->dim_hfr_age + shared->dim_hfr_strain + shared->dim_hospitalisations_inc_age + shared->dim_hospitalisations_inc_strain + shared->dim_ifr_age + shared->dim_ifr_strain + shared->dim_ihr_age + shared->dim_ihr_strain + shared->dim_infections_inc_age + shared->dim_infections_inc_strain + shared->dim_prob_strain + shared->dim_protected_R_unvaccinated + shared->dim_protected_R_vaccinated + shared->dim_protected_S_vaccinated + shared->dim_recovered + 90;
  shared->p_C_step = user_get_array_fixed<real_type, 2>(user, "p_C_step", shared->p_C_step, {shared->dim_p_C_step_1, shared->dim_p_C_step_2}, NA_REAL, NA_REAL);
  shared->p_G_D_step = user_get_array_fixed<real_type, 2>(user, "p_G_D_step", shared->p_G_D_step, {shared->dim_p_G_D_step_1, shared->dim_p_G_D_step_2}, NA_REAL, NA_REAL);
  shared->p_H_D_step = user_get_array_fixed<real_type, 2>(user, "p_H_D_step", shared->p_H_D_step, {shared->dim_p_H_D_step_1, shared->dim_p_H_D_step_2}, NA_REAL, NA_REAL);
  shared->p_H_step = user_get_array_fixed<real_type, 2>(user, "p_H_step", shared->p_H_step, {shared->dim_p_H_step_1, shared->dim_p_H_step_2}, NA_REAL, NA_REAL);
  shared->p_ICU_D_step = user_get_array_fixed<real_type, 2>(user, "p_ICU_D_step", shared->p_ICU_D_step, {shared->dim_p_ICU_D_step_1, shared->dim_p_ICU_D_step_2}, NA_REAL, NA_REAL);
  shared->p_ICU_step = user_get_array_fixed<real_type, 2>(user, "p_ICU_step", shared->p_ICU_step, {shared->dim_p_ICU_step_1, shared->dim_p_ICU_step_2}, NA_REAL, NA_REAL);
  shared->p_R_step = user_get_array_fixed<real_type, 2>(user, "p_R_step", shared->p_R_step, {shared->dim_p_R_step_1, shared->dim_p_R_step_2}, NA_REAL, NA_REAL);
  shared->p_W_D_step = user_get_array_fixed<real_type, 2>(user, "p_W_D_step", shared->p_W_D_step, {shared->dim_p_W_D_step_1, shared->dim_p_W_D_step_2}, NA_REAL, NA_REAL);
  shared->p_star_step = user_get_array_fixed<real_type, 2>(user, "p_star_step", shared->p_star_step, {shared->dim_p_star_step_1, shared->dim_p_star_step_2}, NA_REAL, NA_REAL);
  shared->rel_infectivity = user_get_array_fixed<real_type, 3>(user, "rel_infectivity", shared->rel_infectivity, {shared->dim_rel_infectivity_1, shared->dim_rel_infectivity_2, shared->dim_rel_infectivity_3}, NA_REAL, NA_REAL);
  shared->rel_p_G_D = user_get_array_fixed<real_type, 3>(user, "rel_p_G_D", shared->rel_p_G_D, {shared->dim_rel_p_G_D_1, shared->dim_rel_p_G_D_2, shared->dim_rel_p_G_D_3}, NA_REAL, NA_REAL);
  shared->rel_p_H_D = user_get_array_fixed<real_type, 3>(user, "rel_p_H_D", shared->rel_p_H_D, {shared->dim_rel_p_H_D_1, shared->dim_rel_p_H_D_2, shared->dim_rel_p_H_D_3}, NA_REAL, NA_REAL);
  shared->rel_p_ICU = user_get_array_fixed<real_type, 3>(user, "rel_p_ICU", shared->rel_p_ICU, {shared->dim_rel_p_ICU_1, shared->dim_rel_p_ICU_2, shared->dim_rel_p_ICU_3}, NA_REAL, NA_REAL);
  shared->rel_p_ICU_D = user_get_array_fixed<real_type, 3>(user, "rel_p_ICU_D", shared->rel_p_ICU_D, {shared->dim_rel_p_ICU_D_1, shared->dim_rel_p_ICU_D_2, shared->dim_rel_p_ICU_D_3}, NA_REAL, NA_REAL);
  shared->rel_p_R = user_get_array_fixed<real_type, 3>(user, "rel_p_R", shared->rel_p_R, {shared->dim_rel_p_R_1, shared->dim_rel_p_R_2, shared->dim_rel_p_R_3}, NA_REAL, NA_REAL);
  shared->rel_p_W_D = user_get_array_fixed<real_type, 3>(user, "rel_p_W_D", shared->rel_p_W_D, {shared->dim_rel_p_W_D_1, shared->dim_rel_p_W_D_2, shared->dim_rel_p_W_D_3}, NA_REAL, NA_REAL);
  shared->rel_p_hosp_if_sympt = user_get_array_fixed<real_type, 3>(user, "rel_p_hosp_if_sympt", shared->rel_p_hosp_if_sympt, {shared->dim_rel_p_hosp_if_sympt_1, shared->dim_rel_p_hosp_if_sympt_2, shared->dim_rel_p_hosp_if_sympt_3}, NA_REAL, NA_REAL);
  shared->rel_p_sympt = user_get_array_fixed<real_type, 3>(user, "rel_p_sympt", shared->rel_p_sympt, {shared->dim_rel_p_sympt_1, shared->dim_rel_p_sympt_2, shared->dim_rel_p_sympt_3}, NA_REAL, NA_REAL);
  shared->rel_susceptibility = user_get_array_fixed<real_type, 3>(user, "rel_susceptibility", shared->rel_susceptibility, {shared->dim_rel_susceptibility_1, shared->dim_rel_susceptibility_2, shared->dim_rel_susceptibility_3}, NA_REAL, NA_REAL);
  shared->vaccine_progression_rate_base = user_get_array_fixed<real_type, 2>(user, "vaccine_progression_rate_base", shared->vaccine_progression_rate_base, {shared->dim_vaccine_progression_rate_base_1, shared->dim_vaccine_progression_rate_base_2}, NA_REAL, NA_REAL);
  internal.eff_sus_R = std::vector<real_type>(shared->dim_eff_sus_R);
  internal.eff_sus_S = std::vector<real_type>(shared->dim_eff_sus_S);
  internal.lambda = std::vector<real_type>(shared->dim_lambda);
  internal.lambda_susc = std::vector<real_type>(shared->dim_lambda_susc);
  internal.rate_RE_progress = std::vector<real_type>(shared->dim_rate_RE_progress);
  internal.rel_foi_strain = std::vector<real_type>(shared->dim_rel_foi_strain);
  return dust::pars_type<lancelot>(shared, internal);
}
template <>
cpp11::sexp dust_info<lancelot>(const dust::pars_type<lancelot>& pars) {
  const std::shared_ptr<const lancelot::shared_type> shared = pars.shared;
  cpp11::writable::strings nms({"time", "admit_conf_inc", "new_conf_inc", "all_admission_0_9_conf_inc", "all_admission_10_19_conf_inc", "all_admission_20_29_conf_inc", "all_admission_30_39_conf_inc", "all_admission_40_49_conf_inc", "all_admission_50_59_conf_inc", "all_admission_60_69_conf_inc", "all_admission_70_79_conf_inc", "all_admission_80_plus_conf_inc", "cum_infections", "infections_inc", "hospitalisations_inc", "cum_admit_conf", "cum_new_conf", "beta_out", "N_tot_sero_1", "N_tot_sero_2", "N_tot_PCR", "ICU_tot", "general_tot", "hosp_tot", "D_hosp_tot", "D_hosp_0_49_tot", "D_hosp_50_54_tot", "D_hosp_55_59_tot", "D_hosp_60_64_tot", "D_hosp_65_69_tot", "D_hosp_70_74_tot", "D_hosp_75_79_tot", "D_hosp_80_plus_tot", "D_comm_tot", "D_comm_inc", "D_comm_0_49_inc", "D_comm_50_54_inc", "D_comm_55_59_inc", "D_comm_60_64_inc", "D_comm_65_69_inc", "D_comm_70_74_inc", "D_comm_75_79_inc", "D_comm_80_plus_inc", "D_carehomes_tot", "D_carehomes_inc", "D_tot", "D_inc", "D_hosp_inc", "D_hosp_0_49_inc", "D_hosp_50_54_inc", "D_hosp_55_59_inc", "D_hosp_60_64_inc", "D_hosp_65_69_inc", "D_hosp_70_74_inc", "D_hosp_75_79_inc", "D_hosp_80_plus_inc", "sero_pos_1", "sero_pos_2", "cum_sympt_cases", "cum_sympt_cases_non_variant", "cum_sympt_cases_over25", "cum_sympt_cases_non_variant_over25", "cum_sympt_cases_under15", "cum_sympt_cases_15_24", "cum_sympt_cases_25_49", "cum_sympt_cases_50_64", "cum_sympt_cases_65_79", "cum_sympt_cases_80_plus", "sympt_cases_inc", "sympt_cases_non_variant_inc", "sympt_cases_over25_inc", "sympt_cases_non_variant_over25_inc", "sympt_cases_under15_inc", "sympt_cases_15_24_inc", "sympt_cases_25_49_inc", "sympt_cases_50_64_inc", "sympt_cases_65_79_inc", "sympt_cases_80_plus_inc", "ons_positives", "react_positives", "react_5_24_positives", "react_25_34_positives", "react_35_44_positives", "react_45_54_positives", "react_55_64_positives", "react_65_plus_positives", "susceptible", "ihr", "hfr", "ifr", "cum_infections_strain", "infections_inc_strain", "infections_inc_age", "hospitalisations_inc_strain", "hospitalisations_inc_age", "D_non_hosp", "cum_admit_by_age", "N_tot", "prob_strain", "effective_susceptible", "recovered", "protected_S_vaccinated", "protected_R_unvaccinated", "protected_R_vaccinated", "ifr_strain", "ihr_strain", "hfr_strain", "ifr_age", "ihr_age", "hfr_age", "cum_n_S_vaccinated", "cum_n_E_vaccinated", "cum_n_I_A_vaccinated", "cum_n_I_P_vaccinated", "cum_n_R_vaccinated", "cum_n_vaccinated", "cum_n_S_vacc_skip", "cum_n_E_vacc_skip", "cum_n_I_A_vacc_skip", "cum_n_I_P_vacc_skip", "cum_n_R_vacc_skip", "cum_n_vacc_skip", "diagnoses_admitted", "cum_infections_disag", "D", "S", "D_hosp", "vaccine_missed_doses", "tmp_vaccine_n_candidates", "tmp_vaccine_probability", "T_sero_neg_1", "T_sero_neg_2", "R", "T_PCR_neg", "I_weighted", "IHR_disag_weighted_inc", "HFR_disag_weighted_inc", "IFR_disag_weighted_inc", "E", "I_A", "I_P", "I_C_1", "I_C_2", "G_D", "ICU_pre_unconf", "ICU_pre_conf", "H_R_unconf", "H_R_conf", "H_D_unconf", "H_D_conf", "ICU_W_R_unconf", "ICU_W_R_conf", "ICU_W_D_unconf", "ICU_W_D_conf", "ICU_D_unconf", "ICU_D_conf", "W_R_unconf", "W_R_conf", "W_D_unconf", "W_D_conf", "T_sero_pre_1", "T_sero_pos_1", "T_sero_pre_2", "T_sero_pos_2", "T_PCR_pre", "T_PCR_pos"});
  cpp11::writable::list dim(166);
  dim[0] = cpp11::writable::integers({1});
  dim[1] = cpp11::writable::integers({1});
  dim[2] = cpp11::writable::integers({1});
  dim[3] = cpp11::writable::integers({1});
  dim[4] = cpp11::writable::integers({1});
  dim[5] = cpp11::writable::integers({1});
  dim[6] = cpp11::writable::integers({1});
  dim[7] = cpp11::writable::integers({1});
  dim[8] = cpp11::writable::integers({1});
  dim[9] = cpp11::writable::integers({1});
  dim[10] = cpp11::writable::integers({1});
  dim[11] = cpp11::writable::integers({1});
  dim[12] = cpp11::writable::integers({1});
  dim[13] = cpp11::writable::integers({1});
  dim[14] = cpp11::writable::integers({1});
  dim[15] = cpp11::writable::integers({1});
  dim[16] = cpp11::writable::integers({1});
  dim[17] = cpp11::writable::integers({1});
  dim[18] = cpp11::writable::integers({1});
  dim[19] = cpp11::writable::integers({1});
  dim[20] = cpp11::writable::integers({1});
  dim[21] = cpp11::writable::integers({1});
  dim[22] = cpp11::writable::integers({1});
  dim[23] = cpp11::writable::integers({1});
  dim[24] = cpp11::writable::integers({1});
  dim[25] = cpp11::writable::integers({1});
  dim[26] = cpp11::writable::integers({1});
  dim[27] = cpp11::writable::integers({1});
  dim[28] = cpp11::writable::integers({1});
  dim[29] = cpp11::writable::integers({1});
  dim[30] = cpp11::writable::integers({1});
  dim[31] = cpp11::writable::integers({1});
  dim[32] = cpp11::writable::integers({1});
  dim[33] = cpp11::writable::integers({1});
  dim[34] = cpp11::writable::integers({1});
  dim[35] = cpp11::writable::integers({1});
  dim[36] = cpp11::writable::integers({1});
  dim[37] = cpp11::writable::integers({1});
  dim[38] = cpp11::writable::integers({1});
  dim[39] = cpp11::writable::integers({1});
  dim[40] = cpp11::writable::integers({1});
  dim[41] = cpp11::writable::integers({1});
  dim[42] = cpp11::writable::integers({1});
  dim[43] = cpp11::writable::integers({1});
  dim[44] = cpp11::writable::integers({1});
  dim[45] = cpp11::writable::integers({1});
  dim[46] = cpp11::writable::integers({1});
  dim[47] = cpp11::writable::integers({1});
  dim[48] = cpp11::writable::integers({1});
  dim[49] = cpp11::writable::integers({1});
  dim[50] = cpp11::writable::integers({1});
  dim[51] = cpp11::writable::integers({1});
  dim[52] = cpp11::writable::integers({1});
  dim[53] = cpp11::writable::integers({1});
  dim[54] = cpp11::writable::integers({1});
  dim[55] = cpp11::writable::integers({1});
  dim[56] = cpp11::writable::integers({1});
  dim[57] = cpp11::writable::integers({1});
  dim[58] = cpp11::writable::integers({1});
  dim[59] = cpp11::writable::integers({1});
  dim[60] = cpp11::writable::integers({1});
  dim[61] = cpp11::writable::integers({1});
  dim[62] = cpp11::writable::integers({1});
  dim[63] = cpp11::writable::integers({1});
  dim[64] = cpp11::writable::integers({1});
  dim[65] = cpp11::writable::integers({1});
  dim[66] = cpp11::writable::integers({1});
  dim[67] = cpp11::writable::integers({1});
  dim[68] = cpp11::writable::integers({1});
  dim[69] = cpp11::writable::integers({1});
  dim[70] = cpp11::writable::integers({1});
  dim[71] = cpp11::writable::integers({1});
  dim[72] = cpp11::writable::integers({1});
  dim[73] = cpp11::writable::integers({1});
  dim[74] = cpp11::writable::integers({1});
  dim[75] = cpp11::writable::integers({1});
  dim[76] = cpp11::writable::integers({1});
  dim[77] = cpp11::writable::integers({1});
  dim[78] = cpp11::writable::integers({1});
  dim[79] = cpp11::writable::integers({1});
  dim[80] = cpp11::writable::integers({1});
  dim[81] = cpp11::writable::integers({1});
  dim[82] = cpp11::writable::integers({1});
  dim[83] = cpp11::writable::integers({1});
  dim[84] = cpp11::writable::integers({1});
  dim[85] = cpp11::writable::integers({1});
  dim[86] = cpp11::writable::integers({1});
  dim[87] = cpp11::writable::integers({1});
  dim[88] = cpp11::writable::integers({1});
  dim[89] = cpp11::writable::integers({1});
  dim[90] = cpp11::writable::integers({shared->dim_cum_infections_strain});
  dim[91] = cpp11::writable::integers({shared->dim_infections_inc_strain});
  dim[92] = cpp11::writable::integers({shared->dim_infections_inc_age});
  dim[93] = cpp11::writable::integers({shared->dim_hospitalisations_inc_strain});
  dim[94] = cpp11::writable::integers({shared->dim_hospitalisations_inc_age});
  dim[95] = cpp11::writable::integers({shared->dim_D_non_hosp});
  dim[96] = cpp11::writable::integers({shared->dim_cum_admit_by_age});
  dim[97] = cpp11::writable::integers({shared->dim_N_tot});
  dim[98] = cpp11::writable::integers({shared->dim_prob_strain});
  dim[99] = cpp11::writable::integers({shared->dim_effective_susceptible});
  dim[100] = cpp11::writable::integers({shared->dim_recovered});
  dim[101] = cpp11::writable::integers({shared->dim_protected_S_vaccinated});
  dim[102] = cpp11::writable::integers({shared->dim_protected_R_unvaccinated});
  dim[103] = cpp11::writable::integers({shared->dim_protected_R_vaccinated});
  dim[104] = cpp11::writable::integers({shared->dim_ifr_strain});
  dim[105] = cpp11::writable::integers({shared->dim_ihr_strain});
  dim[106] = cpp11::writable::integers({shared->dim_hfr_strain});
  dim[107] = cpp11::writable::integers({shared->dim_ifr_age});
  dim[108] = cpp11::writable::integers({shared->dim_ihr_age});
  dim[109] = cpp11::writable::integers({shared->dim_hfr_age});
  dim[110] = cpp11::writable::integers({shared->dim_cum_n_S_vaccinated_1, shared->dim_cum_n_S_vaccinated_2});
  dim[111] = cpp11::writable::integers({shared->dim_cum_n_E_vaccinated_1, shared->dim_cum_n_E_vaccinated_2});
  dim[112] = cpp11::writable::integers({shared->dim_cum_n_I_A_vaccinated_1, shared->dim_cum_n_I_A_vaccinated_2});
  dim[113] = cpp11::writable::integers({shared->dim_cum_n_I_P_vaccinated_1, shared->dim_cum_n_I_P_vaccinated_2});
  dim[114] = cpp11::writable::integers({shared->dim_cum_n_R_vaccinated_1, shared->dim_cum_n_R_vaccinated_2});
  dim[115] = cpp11::writable::integers({shared->dim_cum_n_vaccinated_1, shared->dim_cum_n_vaccinated_2});
  dim[116] = cpp11::writable::integers({shared->dim_cum_n_S_vacc_skip_1, shared->dim_cum_n_S_vacc_skip_2});
  dim[117] = cpp11::writable::integers({shared->dim_cum_n_E_vacc_skip_1, shared->dim_cum_n_E_vacc_skip_2});
  dim[118] = cpp11::writable::integers({shared->dim_cum_n_I_A_vacc_skip_1, shared->dim_cum_n_I_A_vacc_skip_2});
  dim[119] = cpp11::writable::integers({shared->dim_cum_n_I_P_vacc_skip_1, shared->dim_cum_n_I_P_vacc_skip_2});
  dim[120] = cpp11::writable::integers({shared->dim_cum_n_R_vacc_skip_1, shared->dim_cum_n_R_vacc_skip_2});
  dim[121] = cpp11::writable::integers({shared->dim_cum_n_vacc_skip_1, shared->dim_cum_n_vacc_skip_2});
  dim[122] = cpp11::writable::integers({shared->dim_diagnoses_admitted_1, shared->dim_diagnoses_admitted_2});
  dim[123] = cpp11::writable::integers({shared->dim_cum_infections_disag_1, shared->dim_cum_infections_disag_2});
  dim[124] = cpp11::writable::integers({shared->dim_D_1, shared->dim_D_2});
  dim[125] = cpp11::writable::integers({shared->dim_S_1, shared->dim_S_2});
  dim[126] = cpp11::writable::integers({shared->dim_D_hosp_1, shared->dim_D_hosp_2});
  dim[127] = cpp11::writable::integers({shared->dim_vaccine_missed_doses_1, shared->dim_vaccine_missed_doses_2});
  dim[128] = cpp11::writable::integers({shared->dim_tmp_vaccine_n_candidates_1, shared->dim_tmp_vaccine_n_candidates_2});
  dim[129] = cpp11::writable::integers({shared->dim_tmp_vaccine_probability_1, shared->dim_tmp_vaccine_probability_2});
  dim[130] = cpp11::writable::integers({shared->dim_T_sero_neg_1_1, shared->dim_T_sero_neg_1_2, shared->dim_T_sero_neg_1_3});
  dim[131] = cpp11::writable::integers({shared->dim_T_sero_neg_2_1, shared->dim_T_sero_neg_2_2, shared->dim_T_sero_neg_2_3});
  dim[132] = cpp11::writable::integers({shared->dim_R_1, shared->dim_R_2, shared->dim_R_3});
  dim[133] = cpp11::writable::integers({shared->dim_T_PCR_neg_1, shared->dim_T_PCR_neg_2, shared->dim_T_PCR_neg_3});
  dim[134] = cpp11::writable::integers({shared->dim_I_weighted_1, shared->dim_I_weighted_2, shared->dim_I_weighted_3});
  dim[135] = cpp11::writable::integers({shared->dim_IHR_disag_weighted_inc_1, shared->dim_IHR_disag_weighted_inc_2, shared->dim_IHR_disag_weighted_inc_3});
  dim[136] = cpp11::writable::integers({shared->dim_HFR_disag_weighted_inc_1, shared->dim_HFR_disag_weighted_inc_2, shared->dim_HFR_disag_weighted_inc_3});
  dim[137] = cpp11::writable::integers({shared->dim_IFR_disag_weighted_inc_1, shared->dim_IFR_disag_weighted_inc_2, shared->dim_IFR_disag_weighted_inc_3});
  dim[138] = cpp11::writable::integers({shared->dim_E_1, shared->dim_E_2, shared->dim_E_3, shared->dim_E_4});
  dim[139] = cpp11::writable::integers({shared->dim_I_A_1, shared->dim_I_A_2, shared->dim_I_A_3, shared->dim_I_A_4});
  dim[140] = cpp11::writable::integers({shared->dim_I_P_1, shared->dim_I_P_2, shared->dim_I_P_3, shared->dim_I_P_4});
  dim[141] = cpp11::writable::integers({shared->dim_I_C_1_1, shared->dim_I_C_1_2, shared->dim_I_C_1_3, shared->dim_I_C_1_4});
  dim[142] = cpp11::writable::integers({shared->dim_I_C_2_1, shared->dim_I_C_2_2, shared->dim_I_C_2_3, shared->dim_I_C_2_4});
  dim[143] = cpp11::writable::integers({shared->dim_G_D_1, shared->dim_G_D_2, shared->dim_G_D_3, shared->dim_G_D_4});
  dim[144] = cpp11::writable::integers({shared->dim_ICU_pre_unconf_1, shared->dim_ICU_pre_unconf_2, shared->dim_ICU_pre_unconf_3, shared->dim_ICU_pre_unconf_4});
  dim[145] = cpp11::writable::integers({shared->dim_ICU_pre_conf_1, shared->dim_ICU_pre_conf_2, shared->dim_ICU_pre_conf_3, shared->dim_ICU_pre_conf_4});
  dim[146] = cpp11::writable::integers({shared->dim_H_R_unconf_1, shared->dim_H_R_unconf_2, shared->dim_H_R_unconf_3, shared->dim_H_R_unconf_4});
  dim[147] = cpp11::writable::integers({shared->dim_H_R_conf_1, shared->dim_H_R_conf_2, shared->dim_H_R_conf_3, shared->dim_H_R_conf_4});
  dim[148] = cpp11::writable::integers({shared->dim_H_D_unconf_1, shared->dim_H_D_unconf_2, shared->dim_H_D_unconf_3, shared->dim_H_D_unconf_4});
  dim[149] = cpp11::writable::integers({shared->dim_H_D_conf_1, shared->dim_H_D_conf_2, shared->dim_H_D_conf_3, shared->dim_H_D_conf_4});
  dim[150] = cpp11::writable::integers({shared->dim_ICU_W_R_unconf_1, shared->dim_ICU_W_R_unconf_2, shared->dim_ICU_W_R_unconf_3, shared->dim_ICU_W_R_unconf_4});
  dim[151] = cpp11::writable::integers({shared->dim_ICU_W_R_conf_1, shared->dim_ICU_W_R_conf_2, shared->dim_ICU_W_R_conf_3, shared->dim_ICU_W_R_conf_4});
  dim[152] = cpp11::writable::integers({shared->dim_ICU_W_D_unconf_1, shared->dim_ICU_W_D_unconf_2, shared->dim_ICU_W_D_unconf_3, shared->dim_ICU_W_D_unconf_4});
  dim[153] = cpp11::writable::integers({shared->dim_ICU_W_D_conf_1, shared->dim_ICU_W_D_conf_2, shared->dim_ICU_W_D_conf_3, shared->dim_ICU_W_D_conf_4});
  dim[154] = cpp11::writable::integers({shared->dim_ICU_D_unconf_1, shared->dim_ICU_D_unconf_2, shared->dim_ICU_D_unconf_3, shared->dim_ICU_D_unconf_4});
  dim[155] = cpp11::writable::integers({shared->dim_ICU_D_conf_1, shared->dim_ICU_D_conf_2, shared->dim_ICU_D_conf_3, shared->dim_ICU_D_conf_4});
  dim[156] = cpp11::writable::integers({shared->dim_W_R_unconf_1, shared->dim_W_R_unconf_2, shared->dim_W_R_unconf_3, shared->dim_W_R_unconf_4});
  dim[157] = cpp11::writable::integers({shared->dim_W_R_conf_1, shared->dim_W_R_conf_2, shared->dim_W_R_conf_3, shared->dim_W_R_conf_4});
  dim[158] = cpp11::writable::integers({shared->dim_W_D_unconf_1, shared->dim_W_D_unconf_2, shared->dim_W_D_unconf_3, shared->dim_W_D_unconf_4});
  dim[159] = cpp11::writable::integers({shared->dim_W_D_conf_1, shared->dim_W_D_conf_2, shared->dim_W_D_conf_3, shared->dim_W_D_conf_4});
  dim[160] = cpp11::writable::integers({shared->dim_T_sero_pre_1_1, shared->dim_T_sero_pre_1_2, shared->dim_T_sero_pre_1_3, shared->dim_T_sero_pre_1_4});
  dim[161] = cpp11::writable::integers({shared->dim_T_sero_pos_1_1, shared->dim_T_sero_pos_1_2, shared->dim_T_sero_pos_1_3, shared->dim_T_sero_pos_1_4});
  dim[162] = cpp11::writable::integers({shared->dim_T_sero_pre_2_1, shared->dim_T_sero_pre_2_2, shared->dim_T_sero_pre_2_3, shared->dim_T_sero_pre_2_4});
  dim[163] = cpp11::writable::integers({shared->dim_T_sero_pos_2_1, shared->dim_T_sero_pos_2_2, shared->dim_T_sero_pos_2_3, shared->dim_T_sero_pos_2_4});
  dim[164] = cpp11::writable::integers({shared->dim_T_PCR_pre_1, shared->dim_T_PCR_pre_2, shared->dim_T_PCR_pre_3, shared->dim_T_PCR_pre_4});
  dim[165] = cpp11::writable::integers({shared->dim_T_PCR_pos_1, shared->dim_T_PCR_pos_2, shared->dim_T_PCR_pos_3, shared->dim_T_PCR_pos_4});
  dim.names() = nms;
  cpp11::writable::list index(166);
  index[0] = cpp11::writable::integers({1});
  index[1] = cpp11::writable::integers({2});
  index[2] = cpp11::writable::integers({3});
  index[3] = cpp11::writable::integers({4});
  index[4] = cpp11::writable::integers({5});
  index[5] = cpp11::writable::integers({6});
  index[6] = cpp11::writable::integers({7});
  index[7] = cpp11::writable::integers({8});
  index[8] = cpp11::writable::integers({9});
  index[9] = cpp11::writable::integers({10});
  index[10] = cpp11::writable::integers({11});
  index[11] = cpp11::writable::integers({12});
  index[12] = cpp11::writable::integers({13});
  index[13] = cpp11::writable::integers({14});
  index[14] = cpp11::writable::integers({15});
  index[15] = cpp11::writable::integers({16});
  index[16] = cpp11::writable::integers({17});
  index[17] = cpp11::writable::integers({18});
  index[18] = cpp11::writable::integers({19});
  index[19] = cpp11::writable::integers({20});
  index[20] = cpp11::writable::integers({21});
  index[21] = cpp11::writable::integers({22});
  index[22] = cpp11::writable::integers({23});
  index[23] = cpp11::writable::integers({24});
  index[24] = cpp11::writable::integers({25});
  index[25] = cpp11::writable::integers({26});
  index[26] = cpp11::writable::integers({27});
  index[27] = cpp11::writable::integers({28});
  index[28] = cpp11::writable::integers({29});
  index[29] = cpp11::writable::integers({30});
  index[30] = cpp11::writable::integers({31});
  index[31] = cpp11::writable::integers({32});
  index[32] = cpp11::writable::integers({33});
  index[33] = cpp11::writable::integers({34});
  index[34] = cpp11::writable::integers({35});
  index[35] = cpp11::writable::integers({36});
  index[36] = cpp11::writable::integers({37});
  index[37] = cpp11::writable::integers({38});
  index[38] = cpp11::writable::integers({39});
  index[39] = cpp11::writable::integers({40});
  index[40] = cpp11::writable::integers({41});
  index[41] = cpp11::writable::integers({42});
  index[42] = cpp11::writable::integers({43});
  index[43] = cpp11::writable::integers({44});
  index[44] = cpp11::writable::integers({45});
  index[45] = cpp11::writable::integers({46});
  index[46] = cpp11::writable::integers({47});
  index[47] = cpp11::writable::integers({48});
  index[48] = cpp11::writable::integers({49});
  index[49] = cpp11::writable::integers({50});
  index[50] = cpp11::writable::integers({51});
  index[51] = cpp11::writable::integers({52});
  index[52] = cpp11::writable::integers({53});
  index[53] = cpp11::writable::integers({54});
  index[54] = cpp11::writable::integers({55});
  index[55] = cpp11::writable::integers({56});
  index[56] = cpp11::writable::integers({57});
  index[57] = cpp11::writable::integers({58});
  index[58] = cpp11::writable::integers({59});
  index[59] = cpp11::writable::integers({60});
  index[60] = cpp11::writable::integers({61});
  index[61] = cpp11::writable::integers({62});
  index[62] = cpp11::writable::integers({63});
  index[63] = cpp11::writable::integers({64});
  index[64] = cpp11::writable::integers({65});
  index[65] = cpp11::writable::integers({66});
  index[66] = cpp11::writable::integers({67});
  index[67] = cpp11::writable::integers({68});
  index[68] = cpp11::writable::integers({69});
  index[69] = cpp11::writable::integers({70});
  index[70] = cpp11::writable::integers({71});
  index[71] = cpp11::writable::integers({72});
  index[72] = cpp11::writable::integers({73});
  index[73] = cpp11::writable::integers({74});
  index[74] = cpp11::writable::integers({75});
  index[75] = cpp11::writable::integers({76});
  index[76] = cpp11::writable::integers({77});
  index[77] = cpp11::writable::integers({78});
  index[78] = cpp11::writable::integers({79});
  index[79] = cpp11::writable::integers({80});
  index[80] = cpp11::writable::integers({81});
  index[81] = cpp11::writable::integers({82});
  index[82] = cpp11::writable::integers({83});
  index[83] = cpp11::writable::integers({84});
  index[84] = cpp11::writable::integers({85});
  index[85] = cpp11::writable::integers({86});
  index[86] = cpp11::writable::integers({87});
  index[87] = cpp11::writable::integers({88});
  index[88] = cpp11::writable::integers({89});
  index[89] = cpp11::writable::integers({90});
  index[90] = integer_sequence(91, shared->dim_cum_infections_strain);
  index[91] = integer_sequence(shared->offset_variable_infections_inc_strain + 1, shared->dim_infections_inc_strain);
  index[92] = integer_sequence(shared->offset_variable_infections_inc_age + 1, shared->dim_infections_inc_age);
  index[93] = integer_sequence(shared->offset_variable_hospitalisations_inc_strain + 1, shared->dim_hospitalisations_inc_strain);
  index[94] = integer_sequence(shared->offset_variable_hospitalisations_inc_age + 1, shared->dim_hospitalisations_inc_age);
  index[95] = integer_sequence(shared->offset_variable_D_non_hosp + 1, shared->dim_D_non_hosp);
  index[96] = integer_sequence(shared->offset_variable_cum_admit_by_age + 1, shared->dim_cum_admit_by_age);
  index[97] = integer_sequence(shared->offset_variable_N_tot + 1, shared->dim_N_tot);
  index[98] = integer_sequence(shared->offset_variable_prob_strain + 1, shared->dim_prob_strain);
  index[99] = integer_sequence(shared->offset_variable_effective_susceptible + 1, shared->dim_effective_susceptible);
  index[100] = integer_sequence(shared->offset_variable_recovered + 1, shared->dim_recovered);
  index[101] = integer_sequence(shared->offset_variable_protected_S_vaccinated + 1, shared->dim_protected_S_vaccinated);
  index[102] = integer_sequence(shared->offset_variable_protected_R_unvaccinated + 1, shared->dim_protected_R_unvaccinated);
  index[103] = integer_sequence(shared->offset_variable_protected_R_vaccinated + 1, shared->dim_protected_R_vaccinated);
  index[104] = integer_sequence(shared->offset_variable_ifr_strain + 1, shared->dim_ifr_strain);
  index[105] = integer_sequence(shared->offset_variable_ihr_strain + 1, shared->dim_ihr_strain);
  index[106] = integer_sequence(shared->offset_variable_hfr_strain + 1, shared->dim_hfr_strain);
  index[107] = integer_sequence(shared->offset_variable_ifr_age + 1, shared->dim_ifr_age);
  index[108] = integer_sequence(shared->offset_variable_ihr_age + 1, shared->dim_ihr_age);
  index[109] = integer_sequence(shared->offset_variable_hfr_age + 1, shared->dim_hfr_age);
  index[110] = integer_sequence(shared->offset_variable_cum_n_S_vaccinated + 1, shared->dim_cum_n_S_vaccinated);
  index[111] = integer_sequence(shared->offset_variable_cum_n_E_vaccinated + 1, shared->dim_cum_n_E_vaccinated);
  index[112] = integer_sequence(shared->offset_variable_cum_n_I_A_vaccinated + 1, shared->dim_cum_n_I_A_vaccinated);
  index[113] = integer_sequence(shared->offset_variable_cum_n_I_P_vaccinated + 1, shared->dim_cum_n_I_P_vaccinated);
  index[114] = integer_sequence(shared->offset_variable_cum_n_R_vaccinated + 1, shared->dim_cum_n_R_vaccinated);
  index[115] = integer_sequence(shared->offset_variable_cum_n_vaccinated + 1, shared->dim_cum_n_vaccinated);
  index[116] = integer_sequence(shared->offset_variable_cum_n_S_vacc_skip + 1, shared->dim_cum_n_S_vacc_skip);
  index[117] = integer_sequence(shared->offset_variable_cum_n_E_vacc_skip + 1, shared->dim_cum_n_E_vacc_skip);
  index[118] = integer_sequence(shared->offset_variable_cum_n_I_A_vacc_skip + 1, shared->dim_cum_n_I_A_vacc_skip);
  index[119] = integer_sequence(shared->offset_variable_cum_n_I_P_vacc_skip + 1, shared->dim_cum_n_I_P_vacc_skip);
  index[120] = integer_sequence(shared->offset_variable_cum_n_R_vacc_skip + 1, shared->dim_cum_n_R_vacc_skip);
  index[121] = integer_sequence(shared->offset_variable_cum_n_vacc_skip + 1, shared->dim_cum_n_vacc_skip);
  index[122] = integer_sequence(shared->offset_variable_diagnoses_admitted + 1, shared->dim_diagnoses_admitted);
  index[123] = integer_sequence(shared->offset_variable_cum_infections_disag + 1, shared->dim_cum_infections_disag);
  index[124] = integer_sequence(shared->offset_variable_D + 1, shared->dim_D);
  index[125] = integer_sequence(shared->offset_variable_S + 1, shared->dim_S);
  index[126] = integer_sequence(shared->offset_variable_D_hosp + 1, shared->dim_D_hosp);
  index[127] = integer_sequence(shared->offset_variable_vaccine_missed_doses + 1, shared->dim_vaccine_missed_doses);
  index[128] = integer_sequence(shared->offset_variable_tmp_vaccine_n_candidates + 1, shared->dim_tmp_vaccine_n_candidates);
  index[129] = integer_sequence(shared->offset_variable_tmp_vaccine_probability + 1, shared->dim_tmp_vaccine_probability);
  index[130] = integer_sequence(shared->offset_variable_T_sero_neg_1 + 1, shared->dim_T_sero_neg_1);
  index[131] = integer_sequence(shared->offset_variable_T_sero_neg_2 + 1, shared->dim_T_sero_neg_2);
  index[132] = integer_sequence(shared->offset_variable_R + 1, shared->dim_R);
  index[133] = integer_sequence(shared->offset_variable_T_PCR_neg + 1, shared->dim_T_PCR_neg);
  index[134] = integer_sequence(shared->offset_variable_I_weighted + 1, shared->dim_I_weighted);
  index[135] = integer_sequence(shared->offset_variable_IHR_disag_weighted_inc + 1, shared->dim_IHR_disag_weighted_inc);
  index[136] = integer_sequence(shared->offset_variable_HFR_disag_weighted_inc + 1, shared->dim_HFR_disag_weighted_inc);
  index[137] = integer_sequence(shared->offset_variable_IFR_disag_weighted_inc + 1, shared->dim_IFR_disag_weighted_inc);
  index[138] = integer_sequence(shared->offset_variable_E + 1, shared->dim_E);
  index[139] = integer_sequence(shared->offset_variable_I_A + 1, shared->dim_I_A);
  index[140] = integer_sequence(shared->offset_variable_I_P + 1, shared->dim_I_P);
  index[141] = integer_sequence(shared->offset_variable_I_C_1 + 1, shared->dim_I_C_1);
  index[142] = integer_sequence(shared->offset_variable_I_C_2 + 1, shared->dim_I_C_2);
  index[143] = integer_sequence(shared->offset_variable_G_D + 1, shared->dim_G_D);
  index[144] = integer_sequence(shared->offset_variable_ICU_pre_unconf + 1, shared->dim_ICU_pre_unconf);
  index[145] = integer_sequence(shared->offset_variable_ICU_pre_conf + 1, shared->dim_ICU_pre_conf);
  index[146] = integer_sequence(shared->offset_variable_H_R_unconf + 1, shared->dim_H_R_unconf);
  index[147] = integer_sequence(shared->offset_variable_H_R_conf + 1, shared->dim_H_R_conf);
  index[148] = integer_sequence(shared->offset_variable_H_D_unconf + 1, shared->dim_H_D_unconf);
  index[149] = integer_sequence(shared->offset_variable_H_D_conf + 1, shared->dim_H_D_conf);
  index[150] = integer_sequence(shared->offset_variable_ICU_W_R_unconf + 1, shared->dim_ICU_W_R_unconf);
  index[151] = integer_sequence(shared->offset_variable_ICU_W_R_conf + 1, shared->dim_ICU_W_R_conf);
  index[152] = integer_sequence(shared->offset_variable_ICU_W_D_unconf + 1, shared->dim_ICU_W_D_unconf);
  index[153] = integer_sequence(shared->offset_variable_ICU_W_D_conf + 1, shared->dim_ICU_W_D_conf);
  index[154] = integer_sequence(shared->offset_variable_ICU_D_unconf + 1, shared->dim_ICU_D_unconf);
  index[155] = integer_sequence(shared->offset_variable_ICU_D_conf + 1, shared->dim_ICU_D_conf);
  index[156] = integer_sequence(shared->offset_variable_W_R_unconf + 1, shared->dim_W_R_unconf);
  index[157] = integer_sequence(shared->offset_variable_W_R_conf + 1, shared->dim_W_R_conf);
  index[158] = integer_sequence(shared->offset_variable_W_D_unconf + 1, shared->dim_W_D_unconf);
  index[159] = integer_sequence(shared->offset_variable_W_D_conf + 1, shared->dim_W_D_conf);
  index[160] = integer_sequence(shared->offset_variable_T_sero_pre_1 + 1, shared->dim_T_sero_pre_1);
  index[161] = integer_sequence(shared->offset_variable_T_sero_pos_1 + 1, shared->dim_T_sero_pos_1);
  index[162] = integer_sequence(shared->offset_variable_T_sero_pre_2 + 1, shared->dim_T_sero_pre_2);
  index[163] = integer_sequence(shared->offset_variable_T_sero_pos_2 + 1, shared->dim_T_sero_pos_2);
  index[164] = integer_sequence(shared->offset_variable_T_PCR_pre + 1, shared->dim_T_PCR_pre);
  index[165] = integer_sequence(shared->offset_variable_T_PCR_pos + 1, shared->dim_T_PCR_pos);
  index.names() = nms;
  size_t len = shared->offset_variable_T_PCR_pos + shared->dim_T_PCR_pos;
  using namespace cpp11::literals;
  return cpp11::writable::list({
           "dim"_nm = dim,
           "len"_nm = len,
           "index"_nm = index});
}
template <>
lancelot::data_type dust_data<lancelot>(cpp11::list data) {
  using real_type = lancelot::real_type;
  return lancelot::data_type{
      cpp11::as_cpp<real_type>(data["admitted"]),
      cpp11::as_cpp<real_type>(data["all_admission"]),
      cpp11::as_cpp<real_type>(data["all_admission_0_9"]),
      cpp11::as_cpp<real_type>(data["all_admission_10_19"]),
      cpp11::as_cpp<real_type>(data["all_admission_20_29"]),
      cpp11::as_cpp<real_type>(data["all_admission_30_39"]),
      cpp11::as_cpp<real_type>(data["all_admission_40_49"]),
      cpp11::as_cpp<real_type>(data["all_admission_50_59"]),
      cpp11::as_cpp<real_type>(data["all_admission_60_69"]),
      cpp11::as_cpp<real_type>(data["all_admission_70_79"]),
      cpp11::as_cpp<real_type>(data["all_admission_80_plus"]),
      cpp11::as_cpp<real_type>(data["deaths"]),
      cpp11::as_cpp<real_type>(data["deaths_carehomes"]),
      cpp11::as_cpp<real_type>(data["deaths_comm"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_0_49"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_50_54"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_55_59"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_60_64"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_65_69"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_70_74"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_75_79"]),
      cpp11::as_cpp<real_type>(data["deaths_comm_80_plus"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_0_49"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_50_54"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_55_59"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_60_64"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_65_69"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_70_74"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_75_79"]),
      cpp11::as_cpp<real_type>(data["deaths_hosp_80_plus"]),
      cpp11::as_cpp<real_type>(data["deaths_non_hosp"]),
      cpp11::as_cpp<real_type>(data["diagnoses"]),
      cpp11::as_cpp<real_type>(data["general"]),
      cpp11::as_cpp<real_type>(data["hosp"]),
      cpp11::as_cpp<real_type>(data["icu"]),
      cpp11::as_cpp<real_type>(data["ons_pos"]),
      cpp11::as_cpp<real_type>(data["ons_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_15_24_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_15_24_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_15_24_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_25_49_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_25_49_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_25_49_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_50_64_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_50_64_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_50_64_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_65_79_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_65_79_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_65_79_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_80_plus_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_80_plus_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_80_plus_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_over25_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_over25_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_over25_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_tot"]),
      cpp11::as_cpp<real_type>(data["pillar2_under15_cases"]),
      cpp11::as_cpp<real_type>(data["pillar2_under15_pos"]),
      cpp11::as_cpp<real_type>(data["pillar2_under15_tot"]),
      cpp11::as_cpp<real_type>(data["react_25_34_pos"]),
      cpp11::as_cpp<real_type>(data["react_25_34_tot"]),
      cpp11::as_cpp<real_type>(data["react_35_44_pos"]),
      cpp11::as_cpp<real_type>(data["react_35_44_tot"]),
      cpp11::as_cpp<real_type>(data["react_45_54_pos"]),
      cpp11::as_cpp<real_type>(data["react_45_54_tot"]),
      cpp11::as_cpp<real_type>(data["react_55_64_pos"]),
      cpp11::as_cpp<real_type>(data["react_55_64_tot"]),
      cpp11::as_cpp<real_type>(data["react_5_24_pos"]),
      cpp11::as_cpp<real_type>(data["react_5_24_tot"]),
      cpp11::as_cpp<real_type>(data["react_65_plus_pos"]),
      cpp11::as_cpp<real_type>(data["react_65_plus_tot"]),
      cpp11::as_cpp<real_type>(data["react_pos"]),
      cpp11::as_cpp<real_type>(data["react_tot"]),
      cpp11::as_cpp<real_type>(data["sero_pos_15_64_1"]),
      cpp11::as_cpp<real_type>(data["sero_pos_15_64_2"]),
      cpp11::as_cpp<real_type>(data["sero_tot_15_64_1"]),
      cpp11::as_cpp<real_type>(data["sero_tot_15_64_2"]),
      cpp11::as_cpp<real_type>(data["strain_non_variant"]),
      cpp11::as_cpp<real_type>(data["strain_over25_non_variant"]),
      cpp11::as_cpp<real_type>(data["strain_over25_tot"]),
      cpp11::as_cpp<real_type>(data["strain_tot"])
    };
}
}
